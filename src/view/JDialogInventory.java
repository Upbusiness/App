/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import action.BeanProductTransition;
import action.Product;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.ClassInventory;
import model.ClassProduct;
import static model.ClassProduct.meanSaleIndicator;
import util.JTextFieldTools;
import util.Sons;
import static view.JDialogControlProductsReserve.*;
import xml.NewXML;

/**
 *
 * @author CPU
 */
public class JDialogInventory extends javax.swing.JDialog {

    private Product productInventory = new Product();
   private static final NewXML newXML = new NewXML();

    /**
     * Creates new form JDialogInventory
     *
     * @param parent
     * @param modal
     */
    public JDialogInventory(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        decimalConverter1 = new action.DecimalConverter();
        decimalConverterReserveValues1 = new action.DecimalConverterReserveValues();
        jPanelBackground = new javax.swing.JPanel();
        jLabelIconBarCode = new javax.swing.JLabel();
        jTextBarCodeProductInventory = new javax.swing.JTextField();
        jPanelTableProductsInventory1 = new javax.swing.JPanel();
        jTextBarCodeProductInventory1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextReserveActual = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxUnitMeasureproductInventory = new javax.swing.JComboBox(ClassProduct.allUnityMeasure().toArray());
        jComboBoxCategoryProductInventory = new javax.swing.JComboBox(ClassProduct.allCategorys().toArray());
        jLabel1 = new javax.swing.JLabel();
        jComboBoxVendorProductInventory = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jTextBarCodeProductInventory3 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextBarCodeProductInventory4 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabelPercenteProfit = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldReserveMin = new javax.swing.JTextField();
        jTextFieldReserveMax = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabelIconInformation = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButtonViewProduct = new javax.swing.JButton();
        bt_gravar_product1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemSave = new javax.swing.JMenuItem();
        jMenuItemViewProduct = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Controle de Estoque");
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        setType(java.awt.Window.Type.POPUP);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanelBackground.setToolTipText("");
        jPanelBackground.setPreferredSize(new java.awt.Dimension(1127, 756));

        jLabelIconBarCode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/[010996].png"))); // NOI18N

        jTextBarCodeProductInventory.setBackground(new java.awt.Color(240, 240, 240));
        jTextBarCodeProductInventory.setFont(new java.awt.Font("Dialog", 3, 24)); // NOI18N
        jTextBarCodeProductInventory.setForeground(new java.awt.Color(51, 51, 51));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${productInventory.barCodeProduct}"), jTextBarCodeProductInventory, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextBarCodeProductInventory.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextBarCodeProductInventoryFocusGained(evt);
            }
        });
        jTextBarCodeProductInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextBarCodeProductInventoryActionPerformed(evt);
            }
        });

        jPanelTableProductsInventory1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jTextBarCodeProductInventory1.setEditable(false);
        jTextBarCodeProductInventory1.setFont(new java.awt.Font("Dialog", 3, 16)); // NOI18N
        jTextBarCodeProductInventory1.setForeground(new java.awt.Color(102, 102, 102));
        jTextBarCodeProductInventory1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${productInventory.descriptionProduct}"), jTextBarCodeProductInventory1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel3.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Descrição do Produto:");

        jTextReserveActual.setFont(new java.awt.Font("Dialog", 3, 15)); // NOI18N
        jTextReserveActual.setForeground(new java.awt.Color(102, 102, 102));
        jTextReserveActual.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextReserveActual.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${productInventory.budgetActual}"), jTextReserveActual, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverterReserveValues1);
        bindingGroup.addBinding(binding);

        jTextReserveActual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextReserveActualFocusGained(evt);
            }
        });
        jTextReserveActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextReserveActualActionPerformed(evt);
            }
        });
        jTextReserveActual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextReserveActualKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Estoque Atual:");

        jLabel6.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Limites de Estoque:");

        jLabel7.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Unidade Medida:");

        jComboBoxUnitMeasureproductInventory.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jComboBoxUnitMeasureproductInventory.setForeground(new java.awt.Color(51, 51, 51));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${productInventory.unityMensurationProduct}"), jComboBoxUnitMeasureproductInventory, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jComboBoxCategoryProductInventory.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jComboBoxCategoryProductInventory.setForeground(new java.awt.Color(51, 51, 51));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${productInventory.categoryProduct}"), jComboBoxCategoryProductInventory, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jLabel1.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Categoria:");

        jComboBoxVendorProductInventory.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jComboBoxVendorProductInventory.setForeground(new java.awt.Color(51, 51, 51));
        jComboBoxVendorProductInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxVendorProductInventoryActionPerformed(evt);
            }
        });
        jComboBoxVendorProductInventory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxVendorProductInventoryKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Fornecedor(es):");

        jTextArea1.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${productInventory.observationProduct}"), jTextArea1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(jTextArea1);

        jLabel8.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Observações:");

        jTextBarCodeProductInventory3.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextBarCodeProductInventory3.setForeground(new java.awt.Color(102, 102, 102));
        jTextBarCodeProductInventory3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextBarCodeProductInventory3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${productInventory.priceActualSale}"), jTextBarCodeProductInventory3, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverter1);
        bindingGroup.addBinding(binding);

        jTextBarCodeProductInventory3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextBarCodeProductInventory3KeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Preço de Venda:");

        jTextBarCodeProductInventory4.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextBarCodeProductInventory4.setForeground(new java.awt.Color(102, 102, 102));
        jTextBarCodeProductInventory4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextBarCodeProductInventory4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${productInventory.priceBuyProduct}"), jTextBarCodeProductInventory4, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverter1);
        bindingGroup.addBinding(binding);

        jTextBarCodeProductInventory4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextBarCodeProductInventory4KeyReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Custo:");

        jLabelPercenteProfit.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabelPercenteProfit.setForeground(new java.awt.Color(51, 102, 255));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${productInventory.percentagemProfit}"), jLabelPercenteProfit, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverter1);
        bindingGroup.addBinding(binding);

        jLabel5.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("min:");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel5.setIconTextGap(10);

        jTextFieldReserveMin.setColumns(10);
        jTextFieldReserveMin.setFont(new java.awt.Font("Dialog", 3, 15)); // NOI18N
        jTextFieldReserveMin.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldReserveMin.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${productInventory.budgetMin}"), jTextFieldReserveMin, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverterReserveValues1);
        bindingGroup.addBinding(binding);

        jTextFieldReserveMin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldReserveMinFocusGained(evt);
            }
        });
        jTextFieldReserveMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldReserveMinActionPerformed(evt);
            }
        });
        jTextFieldReserveMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldReserveMinKeyReleased(evt);
            }
        });

        jTextFieldReserveMax.setColumns(10);
        jTextFieldReserveMax.setFont(new java.awt.Font("Dialog", 3, 15)); // NOI18N
        jTextFieldReserveMax.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldReserveMax.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${productInventory.budgetMax}"), jTextFieldReserveMax, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverterReserveValues1);
        bindingGroup.addBinding(binding);

        jTextFieldReserveMax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldReserveMaxFocusGained(evt);
            }
        });
        jTextFieldReserveMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldReserveMaxActionPerformed(evt);
            }
        });
        jTextFieldReserveMax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldReserveMaxKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("max:");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel9.setIconTextGap(10);

        jLabelIconInformation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Information.png"))); // NOI18N

        jLabel23.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(51, 51, 51));
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/image2995.png"))); // NOI18N
        jLabel23.setToolTipText("Adicionar fornecedor");
        jLabel23.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel23MouseClicked(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 102, 255));
        jLabel13.setText("% Lucro:");

        jButtonViewProduct.setText("Visualizar Produto [F3]");
        jButtonViewProduct.setToolTipText("Visualizar Produto [F3]");
        jButtonViewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewProductActionPerformed(evt);
            }
        });

        bt_gravar_product1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save_large.png"))); // NOI18N
        bt_gravar_product1.setText("Ctrl+S");
        bt_gravar_product1.setToolTipText("Salvar[Ctrl+S]");
        bt_gravar_product1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_gravar_product1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTableProductsInventory1Layout = new javax.swing.GroupLayout(jPanelTableProductsInventory1);
        jPanelTableProductsInventory1.setLayout(jPanelTableProductsInventory1Layout);
        jPanelTableProductsInventory1Layout.setHorizontalGroup(
            jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTableProductsInventory1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTableProductsInventory1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldReserveMin, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldReserveMax, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelIconInformation)
                        .addGap(228, 228, 228)
                        .addComponent(bt_gravar_product1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanelTableProductsInventory1Layout.createSequentialGroup()
                            .addGroup(jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBoxUnitMeasureproductInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jComboBoxCategoryProductInventory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jLabel2)
                        .addGroup(jPanelTableProductsInventory1Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jLabel8))
                        .addGroup(jPanelTableProductsInventory1Layout.createSequentialGroup()
                            .addComponent(jComboBoxVendorProductInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 637, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel23))
                        .addGroup(jPanelTableProductsInventory1Layout.createSequentialGroup()
                            .addGroup(jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextReserveActual, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(12, 12, 12)
                            .addGroup(jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(jTextBarCodeProductInventory3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11)
                                .addGroup(jPanelTableProductsInventory1Layout.createSequentialGroup()
                                    .addComponent(jTextBarCodeProductInventory4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel13)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelPercenteProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1)
                        .addGroup(jPanelTableProductsInventory1Layout.createSequentialGroup()
                            .addComponent(jTextBarCodeProductInventory1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonViewProduct))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelTableProductsInventory1Layout.setVerticalGroup(
            jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTableProductsInventory1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextBarCodeProductInventory1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonViewProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTableProductsInventory1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextReserveActual, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelTableProductsInventory1Layout.createSequentialGroup()
                        .addGroup(jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextBarCodeProductInventory4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTableProductsInventory1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextBarCodeProductInventory3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelPercenteProfit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(19, 19, 19)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldReserveMin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldReserveMax, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabelIconInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(bt_gravar_product1))
                .addGap(7, 7, 7)
                .addGroup(jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxUnitMeasureproductInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCategoryProductInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTableProductsInventory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxVendorProductInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jCheckBox1.setText("Não controlar estoque deste produto");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${productInventory.isControlReserve}"), jCheckBox1, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanelBackgroundLayout = new javax.swing.GroupLayout(jPanelBackground);
        jPanelBackground.setLayout(jPanelBackgroundLayout);
        jPanelBackgroundLayout.setHorizontalGroup(
            jPanelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTableProductsInventory1, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelBackgroundLayout.createSequentialGroup()
                        .addComponent(jLabelIconBarCode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextBarCodeProductInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox1)))
                .addContainerGap())
        );
        jPanelBackgroundLayout.setVerticalGroup(
            jPanelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabelIconBarCode, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextBarCodeProductInventory, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelTableProductsInventory1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelBackground, java.awt.BorderLayout.CENTER);

        jMenu1.setText("Aquivo");

        jMenuItemSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSave.setText("Salvar");
        jMenuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSave);

        jMenuItemViewProduct.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        jMenuItemViewProduct.setText("Visualizar Produto");
        jMenuItemViewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemViewProductActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemViewProduct);

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItemExit.setText("Sair");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemExit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        bindingGroup.bind();

        setSize(new java.awt.Dimension(732, 644));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxVendorProductInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxVendorProductInventoryActionPerformed
        jComboBoxCategoryProductInventory.requestFocus(true);
    }//GEN-LAST:event_jComboBoxVendorProductInventoryActionPerformed

    private void jComboBoxVendorProductInventoryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxVendorProductInventoryKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxVendorProductInventoryKeyPressed

    private void jTextBarCodeProductInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextBarCodeProductInventoryActionPerformed

        fnViewProductDetaial(jTextBarCodeProductInventory.getText());
        jTextReserveActual.requestFocus(true);

    }//GEN-LAST:event_jTextBarCodeProductInventoryActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        fnViewProductDetaial(null);
    }//GEN-LAST:event_formWindowActivated

    private void jTextFieldReserveMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldReserveMaxActionPerformed
        bt_gravar_product1.requestFocus(true);
    }//GEN-LAST:event_jTextFieldReserveMaxActionPerformed

    private void bt_gravar_product1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_gravar_product1ActionPerformed
        fnSaveConfig();
    }//GEN-LAST:event_bt_gravar_product1ActionPerformed

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated

    }//GEN-LAST:event_formWindowDeactivated

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if (isViewListToManager) {
            JDialogControlProductsReserve.viewListToManager();
        } else {
            JDialogControlProductsReserve.completeTable();
        }
    }//GEN-LAST:event_formWindowClosed

    private void jLabel23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseClicked

        if (!jTextBarCodeProductInventory.getText().isEmpty()) {
            JDialogVendorProduct_3_0.argVendorProduct = jTextBarCodeProductInventory.getText();
            BeanProductTransition.setControl(true);
            BeanProductTransition.setCode(productInventory.getBarCodeProduct());
            BeanProductTransition.setDescription(productInventory.getDescriptionProduct());          
            new JDialogVendorProduct_3_0(null, true).setVisible(true);
            setProductInventory(ClassInventory.consultProduct(productInventory.getCodProduct()));

        }
    }//GEN-LAST:event_jLabel23MouseClicked

    private void jTextBarCodeProductInventoryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextBarCodeProductInventoryFocusGained
        if (!jTextBarCodeProductInventory.getText().isEmpty()) {
            jTextBarCodeProductInventory.setSelectionStart(0);
            jTextBarCodeProductInventory.setSelectionEnd(jTextBarCodeProductInventory.getText().length());
        }
    }//GEN-LAST:event_jTextBarCodeProductInventoryFocusGained

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void jMenuItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveActionPerformed
        fnSaveConfig();
    }//GEN-LAST:event_jMenuItemSaveActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jMenuItemViewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemViewProductActionPerformed
        fnViewProduct();       
    }//GEN-LAST:event_jMenuItemViewProductActionPerformed

    private void jTextFieldReserveMaxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldReserveMaxKeyReleased
        //   JTextFieldTools.validarValor(jTextFieldReserveMax);
    }//GEN-LAST:event_jTextFieldReserveMaxKeyReleased

    private void jTextReserveActualKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextReserveActualKeyReleased
//       JTextFieldTools.validarValor(jTextReserveActual);

    }//GEN-LAST:event_jTextReserveActualKeyReleased

    private void jTextBarCodeProductInventory3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextBarCodeProductInventory3KeyReleased
        JTextFieldTools.formatJTextNumber(jTextBarCodeProductInventory3);
    }//GEN-LAST:event_jTextBarCodeProductInventory3KeyReleased

    private void jTextBarCodeProductInventory4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextBarCodeProductInventory4KeyReleased
        JTextFieldTools.formatJTextNumber(jTextBarCodeProductInventory4);
    }//GEN-LAST:event_jTextBarCodeProductInventory4KeyReleased

    private void jTextFieldReserveMinKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldReserveMinKeyReleased
        //   JTextFieldTools.validarValor(jTextFieldReserveMin);
    }//GEN-LAST:event_jTextFieldReserveMinKeyReleased

    private void jTextFieldReserveMinFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldReserveMinFocusGained
        jTextFieldReserveMin.setSelectionStart(0);
        jTextFieldReserveMin.setSelectionEnd(jTextFieldReserveMin.getText().length());
    }//GEN-LAST:event_jTextFieldReserveMinFocusGained

    private void jTextFieldReserveMaxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldReserveMaxFocusGained
        jTextFieldReserveMax.setSelectionStart(0);
        jTextFieldReserveMax.setSelectionEnd(jTextFieldReserveMax.getText().length());
    }//GEN-LAST:event_jTextFieldReserveMaxFocusGained

    private void jTextReserveActualFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextReserveActualFocusGained
        jTextReserveActual.setSelectionStart(0);
        jTextReserveActual.setSelectionEnd(jTextReserveActual.getText().length());
    }//GEN-LAST:event_jTextReserveActualFocusGained

    private void jTextFieldReserveMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldReserveMinActionPerformed
        jTextFieldReserveMax.requestFocus(true);
    }//GEN-LAST:event_jTextFieldReserveMinActionPerformed

    private void jTextReserveActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextReserveActualActionPerformed
        jTextFieldReserveMin.requestFocus(true);
    }//GEN-LAST:event_jTextReserveActualActionPerformed

    private void jButtonViewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewProductActionPerformed
        fnViewProduct();
    }//GEN-LAST:event_jButtonViewProductActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            System.err.println("ERROR::" + ex);
            //newXML.generateLog(ex.toString());
            java.util.logging.Logger.getLogger(JDialogInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JDialogInventory dialog = new JDialogInventory(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_gravar_product1;
    private action.DecimalConverter decimalConverter1;
    private action.DecimalConverterReserveValues decimalConverterReserveValues1;
    private javax.swing.JButton jButtonViewProduct;
    private javax.swing.JCheckBox jCheckBox1;
    public static javax.swing.JComboBox jComboBoxCategoryProductInventory;
    private javax.swing.JComboBox jComboBoxUnitMeasureproductInventory;
    public static javax.swing.JComboBox jComboBoxVendorProductInventory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelIconBarCode;
    private javax.swing.JLabel jLabelIconInformation;
    private javax.swing.JLabel jLabelPercenteProfit;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemSave;
    private javax.swing.JMenuItem jMenuItemViewProduct;
    private javax.swing.JPanel jPanelBackground;
    private javax.swing.JPanel jPanelTableProductsInventory1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextBarCodeProductInventory;
    private javax.swing.JTextField jTextBarCodeProductInventory1;
    private javax.swing.JTextField jTextBarCodeProductInventory3;
    private javax.swing.JTextField jTextBarCodeProductInventory4;
    private javax.swing.JTextField jTextFieldReserveMax;
    private javax.swing.JTextField jTextFieldReserveMin;
    private javax.swing.JTextField jTextReserveActual;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public Product getProductInventory() {
        return productInventory;
    }

    /**
     * @param productInventory
     */
    public void setProductInventory(Product productInventory) {
        Product oldProductInventory = this.productInventory;
        this.productInventory = productInventory;
        firePropertyChange("productInventory", oldProductInventory, productInventory);

    }

    private void fnMeanSale() {
        
        //jLabelMeanSaleMounth.setText("");
        //jLabelMeanSaleMounth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/loading.gif"))); // NOI18N
        //jLabelMeanSaleMounth.setText(meanSaleIndicator(productInventory.getBarCodeProduct(), productInventory.getUnityMensurationProduct()) + "/" + productInventory.getUnityMensurationProduct());
        //categoryName();
        //vendorName();        
        //jLabelMeanSaleMounth.setIcon(null); // NOI18N
    }
   public static void comboVendorProductInventory(List<String> list) {

        ((DefaultComboBoxModel) (jComboBoxVendorProductInventory.getModel()))
                .removeAllElements();

        for (String list1 : list) {
            ((DefaultComboBoxModel) (jComboBoxVendorProductInventory.getModel())).addElement(list1);
        }

    }
    private void functionSave() {
        if (ClassInventory.refreshProduct(productInventory)) {
            JOptionPane.showMessageDialog(null, "Estoque do produto[" + jTextBarCodeProductInventory.getText() + "] atualizado com sucesso.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            jTextBarCodeProductInventory.requestFocus(true);
        } else {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar o produto:[" + jTextBarCodeProductInventory.getText() + "].", "Aviso", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void fnSaveConfig() {

        if (JOptionPane.showConfirmDialog(this, "Deseja realmente atualizar o estoque manualmente?", "Alerta", JOptionPane.YES_NO_OPTION) == 0) {
            //JTextFieldTools.validarValor(jTextFieldReserveMax);
            //JTextFieldTools.validarValor(jTextReserveActual);
            //JTextFieldTools.validarValor(jTextFieldReserveMin);
            //String arg = JTextFieldTools.enterCodeAcsses(this);

            functionSave();
            System.err.println("Validou!!");            

        }
    }

    private void fnViewProductDetaial(String arg) {

        setProductInventory(ClassInventory.consultProduct(arg == null ? (String) BeanProductTransition.getCode() : arg));
        comboVendorProductInventory(ClassProduct.vendorProduct(productInventory.getBarCodeProduct()));
        /*
        Thread thread = new Thread(new Runnable() {
            @Override
            public void run() {

                fnMeanSale();
            }
        });

        thread.start();
           */
    }

    private void fnViewProduct() {
        BeanProductTransition.setControl(true);
        BeanProductTransition.setCode(productInventory.getBarCodeProduct());
        new JDialogProduct_2_0(null, true).setVisible(true);
        setProductInventory(ClassInventory.consultProduct((String) BeanProductTransition.getCode()));
    }
               

}
