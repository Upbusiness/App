/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.ClassVendor;
import static view.JDialogRegisterVendor_3_1.idVendor;
import xml.NewXML;

/**
 *
 * @author CPU
 */
public class JDialogVendorProduct_3_0 extends javax.swing.JDialog {

    private MyModelJtableVendorProduct tableModelVendorProduct;
    public static String argVendorProduct;
    private final Color whiteColor = Color.white;                 // new Color(254, 254, 254);
    private final Color alternateColor = new Color(227, 227, 227);    // Color.lightGray;//new Color(204, 204, 204);
    private final Color selectedColor = Color.yellow;
    private static final NewXML newXML = new NewXML();

    /**
     * Creates new form jDialogVendorProduct
     *
     * @param parent
     * @param modal
     */
    public JDialogVendorProduct_3_0(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVendorThisProduct = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButtonAddVendorThisProduct = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButtonExitJdialogVendorThisProduct = new javax.swing.JButton();
        jCheckBoxSelectAllVendorThisProduct = new javax.swing.JCheckBox();
        jLabelMessageVendorThisProduct = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Fornecedores");
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jTableVendorThisProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableVendorThisProduct.setDefaultRenderer(Object.class, new MyCellRenderer());
        jTableVendorThisProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVendorThisProductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableVendorThisProduct);

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jButtonAddVendorThisProduct.setText("Adicionar Fornecedor");
        jButtonAddVendorThisProduct.setPreferredSize(new java.awt.Dimension(135, 35));
        jButtonAddVendorThisProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddVendorThisProductActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAddVendorThisProduct);

        jButton6.setText("Excluir Selecionado ");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);

        jButton7.setText("Atualizar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7);

        jButtonExitJdialogVendorThisProduct.setText("Sair");
        jButtonExitJdialogVendorThisProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitJdialogVendorThisProductActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonExitJdialogVendorThisProduct);

        jCheckBoxSelectAllVendorThisProduct.setText("Selecionar Todos");
        jCheckBoxSelectAllVendorThisProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSelectAllVendorThisProductActionPerformed(evt);
            }
        });

        jLabelMessageVendorThisProduct.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabelMessageVendorThisProduct.setForeground(new java.awt.Color(153, 51, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabelMessageVendorThisProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBoxSelectAllVendorThisProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(129, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(242, 242, 242)
                    .addComponent(jCheckBoxSelectAllVendorThisProduct)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jLabelMessageVendorThisProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTableVendorThisProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVendorThisProductMouseClicked
        if (jTableVendorThisProduct.getRowCount() > 0) {
            if (evt.getClickCount() == 2) {
                idVendor = (String) jTableVendorThisProduct.getValueAt(jTableVendorThisProduct.getSelectedRow(), 1);
                new JDialogRegisterVendor_3_1(null, true).setVisible(true);
            }
        }
    }//GEN-LAST:event_jTableVendorThisProductMouseClicked

    private void jButtonAddVendorThisProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddVendorThisProductActionPerformed
        new JDialogRegisterVendor_3_1(null, true).setVisible(true);
    }//GEN-LAST:event_jButtonAddVendorThisProductActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir o fornecedor?", "Alerta!", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            boolean ret = false;
            List<String> listArg = new ArrayList<>();

            if (!argVendorProduct.isEmpty()) {

                for (int i = 0; i < jTableVendorThisProduct.getRowCount(); i++) {

                    if (jTableVendorThisProduct.getValueAt(i, 0).equals(true)) {
                        listArg.add((String) jTableVendorThisProduct.getValueAt(i, 1));

                    }
                }
                if (!listArg.isEmpty()) {

                    for (String listArg1 : listArg) {

                        ret = ClassVendor.removeProductVendor(argVendorProduct, listArg1);
                        System.err.println("RETURN REMOVE:::" + ret);
                        System.err.println("BAR CODE REMOVE:::" + argVendorProduct);
                        System.err.println("ARG REMOVE:::" + listArg1);

                    }
                    if (ret) {

                        try {

                            tableModelVendorProduct = new MyModelJtableVendorProduct(jCheckBoxSelectAllVendorThisProduct.isSelected(), argVendorProduct);
                            jTableVendorThisProduct.setModel(tableModelVendorProduct);

                        } catch (Exception ex) {
                            System.err.println("ERROR::" + ex);
                            ////newXML.generateLog(ex.toString());
                        }

                        JOptionPane.showMessageDialog(null, "Fornecedor(es) removido(s) com sucesso.");
                    } else {
                        JOptionPane.showMessageDialog(null, "Erro ao remover fornecedor(es).");
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Selecione pelo menos um fornecedor para ser removido.");
                }
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {

            tableModelVendorProduct = new MyModelJtableVendorProduct(jCheckBoxSelectAllVendorThisProduct.isSelected(), argVendorProduct);
            jTableVendorThisProduct.setModel(tableModelVendorProduct);

        } catch (Exception ex) {
            System.err.println("ERROR::" + ex);
            ////newXML.generateLog(ex.toString());
        }
        if (jTableVendorThisProduct.getRowCount() == 0) {
            jLabelMessageVendorThisProduct.setText("Não há fornecedores cadastrados à este produto.");
        } else {
            jLabelMessageVendorThisProduct.setText("");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButtonExitJdialogVendorThisProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitJdialogVendorThisProductActionPerformed
        this.hide();
    }//GEN-LAST:event_jButtonExitJdialogVendorThisProductActionPerformed

    private void jCheckBoxSelectAllVendorThisProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSelectAllVendorThisProductActionPerformed

        if (!argVendorProduct.isEmpty()) {

            try {

                tableModelVendorProduct = new MyModelJtableVendorProduct(jCheckBoxSelectAllVendorThisProduct.isSelected(), argVendorProduct);
                jTableVendorThisProduct.setModel(tableModelVendorProduct);

            } catch (Exception ex) {
                System.err.println("ERROR::" + ex);
                ////newXML.generateLog(ex.toString());
            }
        }
    }//GEN-LAST:event_jCheckBoxSelectAllVendorThisProductActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if (!argVendorProduct.isEmpty()) {

            try {
                this.setTitle("Fornecedor(es) do produto [" + argVendorProduct + "].");
                tableModelVendorProduct = new MyModelJtableVendorProduct(jCheckBoxSelectAllVendorThisProduct.isSelected(), argVendorProduct);
                jTableVendorThisProduct.setModel(tableModelVendorProduct);

            } catch (Exception ex) {
                System.err.println("ERROR::" + ex);
                ////newXML.generateLog(ex.toString());
            }
            if (jTableVendorThisProduct.getRowCount() == 0) {
                jLabelMessageVendorThisProduct.setText("Não ha fornecedores cadastrados a este produto.");
            } else {
                jLabelMessageVendorThisProduct.setText("");
            }
        }
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            System.err.println("ERROR::" + ex);
            //newXML.generateLog(ex.toString());
            java.util.logging.Logger.getLogger(JDialogVendorProduct_3_0.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JDialogVendorProduct_3_0 dialog = new JDialogVendorProduct_3_0(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButtonAddVendorThisProduct;
    private javax.swing.JButton jButtonExitJdialogVendorThisProduct;
    private javax.swing.JCheckBox jCheckBoxSelectAllVendorThisProduct;
    private javax.swing.JLabel jLabelMessageVendorThisProduct;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableVendorThisProduct;
    // End of variables declaration//GEN-END:variables
 class MyCellRenderer extends DefaultTableCellRenderer {

        public MyCellRenderer() {
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean selected, boolean focused,
                int row, int column) {
            super.getTableCellRendererComponent(table, value, selected, focused, row, column);

            Color bg;

            if (!selected) {
                bg = ((row % 2 == 0)
                        ? alternateColor
                        : whiteColor);
            } else {
                bg = selectedColor;
            }

            if (jTableVendorThisProduct.getRowCount() > 0) {

                jTableVendorThisProduct.getColumnModel().getColumn(0).setPreferredWidth(5);
                jTableVendorThisProduct.getColumnModel().getColumn(1).setPreferredWidth(80);// define a largura da coluna
                jTableVendorThisProduct.getColumnModel().getColumn(2).setPreferredWidth(435);

            }

            //jTableItens.setShowHorizontalLines(false);
            //jTableItens.setShowVerticalLines(false);
            setBackground(bg);
            setForeground(selected
                    ? Color.black
                    : new java.awt.Color(102, 102, 102));
            setHorizontalAlignment(SwingConstants.CENTER);

            /*
             *  if (value instanceof ImageIcon) {
             * setIcon((ImageIcon) value);
             * setText("");
             * } else
             * setIcon(null);
             */
            return this;
        }
    }
}
