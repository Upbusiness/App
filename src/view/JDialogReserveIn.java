/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import action.ReserveIn;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.lang.reflect.Method;
import java.text.DecimalFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.ClassCodRandon;
import model.ClassReserveIn;
import reports.ImprimirRelatorio_cupom;
import reports.XMLReport;
import util.DateActual;
import util.JTextFieldTools;
import util.Mascaras;
import static view.JDialogControlProductsReserve.*;
import xml.NewXML;

/**
 *
 * @author CPU
 */
public class JDialogReserveIn extends javax.swing.JDialog {

    public static String barCodeReserveIn = null;
    private final Color whiteColor = Color.white;                 // new Color(254, 254, 254);
    private final Color alternateColor = new Color(227, 227, 227);    // Color.lightGray;//new Color(204, 204, 204);
    private final Color selectedColor = Color.yellow;
    private MyModelJtableReserveIN modelJtableReserveIN;
    private ReserveIn reserveIn = new ReserveIn();
    private static final DecimalFormat v = new DecimalFormat("0.000");
    private static String argIdReserveIN;
    private static double argQtdInsertReserve;
    private static final NewXML newXML = new NewXML();

    /**
     * Creates new form JDialogVendor
     *
     * @param parent
     * @param modal
     */
    public JDialogReserveIn(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();
        setIconImage(new ImageIcon("src/icons/ estoque(2).png").getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        decimalConverter1 = new action.DecimalConverter();
        decimalConverterReserveValues1 = new action.DecimalConverterReserveValues();
        dateConverter1 = new action.DateConverter();
        jPanelBackgroundJdialogVendor = new javax.swing.JPanel();
        jPanelInformationVendor = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldBarCodeReserveIn = new javax.swing.JTextField();
        jTextFieldCodeReserveIn = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextFieldLotProductReserveIn = new javax.swing.JTextField();
        jTextFieldValueCoastProductReserveIn = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jFormattedDateRegisterReserveIn = new javax.swing.JFormattedTextField(Mascaras.maskDate());
        jLabel27 = new javax.swing.JLabel();
        jFormattedDateProductionProductReserveIn = new javax.swing.JFormattedTextField(Mascaras.maskDate());
        jTextFieldReserveActualProduct = new javax.swing.JTextField();
        jTextFieldQuantityInsertReserveIn = new javax.swing.JTextField();
        jFormattedDateExpiringProductReserveIn = new javax.swing.JFormattedTextField(Mascaras.maskDate());
        jLabel28 = new javax.swing.JLabel();
        jTextFieldMonthsValidProduct = new javax.swing.JTextField();
        jTextFieldDescriptionProductReserveIn = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabelIconBarCode = new javax.swing.JLabel();
        jCheckBoxControlExpiring = new javax.swing.JCheckBox();
        jLabel20 = new javax.swing.JLabel();
        jLabelPriceMean = new javax.swing.JLabel();
        jLabelPriceMeanProductsExistent = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jTextFieldPack = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabelGenerateCode = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanelTableVendor = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableReserveIn = new javax.swing.JTable();
        jButtonSaveReserveIn = new javax.swing.JButton();
        jButtonCancelNewResereveIn = new javax.swing.JButton();
        jButtonNewReserveIn = new javax.swing.JButton();
        jButtonDeleteReserveIn = new javax.swing.JButton();
        jButtonExitJdialogReserveIn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemNewLaunchReserve = new javax.swing.JMenuItem();
        jMenuItemLaunchReserve = new javax.swing.JMenuItem();
        jMenuItemDeleteLaunchReserve = new javax.swing.JMenuItem();
        jMenuItemCancelLaunchReserve = new javax.swing.JMenuItem();
        jMenuItemPrintRegisters = new javax.swing.JMenuItem();
        jMenuItemExitJDialogLaunchReserve = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Entrada de Estoque");
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanelInformationVendor.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel17.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setText("Cód. Entrada Estoque: ");

        jTextFieldBarCodeReserveIn.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldBarCodeReserveIn.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldBarCodeReserveIn.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldBarCodeReserveIn.setName("BarCode"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveIn.barCodeProductReserveIn}"), jTextFieldBarCodeReserveIn, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextFieldBarCodeReserveIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBarCodeReserveInActionPerformed(evt);
            }
        });
        jTextFieldBarCodeReserveIn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldBarCodeReserveInFocusGained(evt);
            }
        });
        jTextFieldBarCodeReserveIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBarCodeReserveInKeyReleased(evt);
            }
        });

        jTextFieldCodeReserveIn.setEditable(false);
        jTextFieldCodeReserveIn.setBackground(new java.awt.Color(255, 255, 51));
        jTextFieldCodeReserveIn.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldCodeReserveIn.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldCodeReserveIn.setName("Code"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveIn.idReserveIn}"), jTextFieldCodeReserveIn, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel18.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 51, 51));
        jLabel18.setText("Código Barra Produto");

        jLabel21.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 51, 51));
        jLabel21.setText("Quantidade Inserida");

        jLabel22.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(51, 51, 51));
        jLabel22.setText("Data Entrada");

        jLabel23.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(51, 51, 51));
        jLabel23.setText("Lote");

        jTextFieldLotProductReserveIn.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldLotProductReserveIn.setForeground(new java.awt.Color(51, 51, 51));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveIn.lotProductReserveIn}"), jTextFieldLotProductReserveIn, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextFieldLotProductReserveIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLotProductReserveInActionPerformed(evt);
            }
        });
        jTextFieldLotProductReserveIn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldLotProductReserveInFocusLost(evt);
            }
        });
        jTextFieldLotProductReserveIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldLotProductReserveInKeyReleased(evt);
            }
        });

        jTextFieldValueCoastProductReserveIn.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldValueCoastProductReserveIn.setForeground(new java.awt.Color(51, 51, 51));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveIn.valueCoastProductReserveIn}"), jTextFieldValueCoastProductReserveIn, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverter1);
        bindingGroup.addBinding(binding);

        jTextFieldValueCoastProductReserveIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldValueCoastProductReserveInActionPerformed(evt);
            }
        });
        jTextFieldValueCoastProductReserveIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldValueCoastProductReserveInKeyReleased(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(51, 51, 51));
        jLabel24.setText("Valor Custo Un (R$)");

        jLabel25.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(51, 51, 51));
        jLabel25.setText("Tempo Vald.(Em Meses)");

        jLabel19.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 51, 51));
        jLabel19.setText("Estoque Anterior");

        jFormattedDateRegisterReserveIn.setBackground(new java.awt.Color(204, 204, 255));
        jFormattedDateRegisterReserveIn.setForeground(new java.awt.Color(51, 51, 51));
        jFormattedDateRegisterReserveIn.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveIn.dateRegister}"), jFormattedDateRegisterReserveIn, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(dateConverter1);
        bindingGroup.addBinding(binding);

        jFormattedDateRegisterReserveIn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedDateRegisterReserveInFocusLost(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(51, 51, 51));
        jLabel27.setText("Data Fabricação");

        jFormattedDateProductionProductReserveIn.setForeground(new java.awt.Color(51, 51, 51));
        jFormattedDateProductionProductReserveIn.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveIn.dateProductionProductReserveIn}"), jFormattedDateProductionProductReserveIn, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(dateConverter1);
        bindingGroup.addBinding(binding);

        jFormattedDateProductionProductReserveIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedDateProductionProductReserveInActionPerformed(evt);
            }
        });
        jFormattedDateProductionProductReserveIn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedDateProductionProductReserveInFocusLost(evt);
            }
        });
        jFormattedDateProductionProductReserveIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedDateProductionProductReserveInKeyPressed(evt);
            }
        });

        jTextFieldReserveActualProduct.setEditable(false);
        jTextFieldReserveActualProduct.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldReserveActualProduct.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldReserveActualProduct.setForeground(new java.awt.Color(51, 51, 51));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveIn.quantityRemainderReserveIn}"), jTextFieldReserveActualProduct, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverterReserveValues1);
        bindingGroup.addBinding(binding);

        jTextFieldQuantityInsertReserveIn.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldQuantityInsertReserveIn.setForeground(new java.awt.Color(51, 51, 51));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveIn.quantityInsertReserveIn}"), jTextFieldQuantityInsertReserveIn, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverterReserveValues1);
        bindingGroup.addBinding(binding);

        jTextFieldQuantityInsertReserveIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldQuantityInsertReserveInActionPerformed(evt);
            }
        });
        jTextFieldQuantityInsertReserveIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldQuantityInsertReserveInKeyReleased(evt);
            }
        });

        jFormattedDateExpiringProductReserveIn.setForeground(new java.awt.Color(51, 51, 51));
        jFormattedDateExpiringProductReserveIn.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveIn.dateExpiringProductReserveIn}"), jFormattedDateExpiringProductReserveIn, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(dateConverter1);
        bindingGroup.addBinding(binding);

        jFormattedDateExpiringProductReserveIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedDateExpiringProductReserveInActionPerformed(evt);
            }
        });
        jFormattedDateExpiringProductReserveIn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedDateExpiringProductReserveInFocusLost(evt);
            }
        });
        jFormattedDateExpiringProductReserveIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedDateExpiringProductReserveInKeyPressed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(51, 51, 51));
        jLabel28.setText("Data Validade");

        jTextFieldMonthsValidProduct.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldMonthsValidProduct.setForeground(new java.awt.Color(51, 51, 51));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveIn.monthsForExipiringProductReserveIn}"), jTextFieldMonthsValidProduct, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextFieldMonthsValidProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMonthsValidProductActionPerformed(evt);
            }
        });
        jTextFieldMonthsValidProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldMonthsValidProductKeyReleased(evt);
            }
        });

        jTextFieldDescriptionProductReserveIn.setEditable(false);
        jTextFieldDescriptionProductReserveIn.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldDescriptionProductReserveIn.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldDescriptionProductReserveIn.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldDescriptionProductReserveIn.setName("Description"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveIn.descriptionProductReserveIn}"), jTextFieldDescriptionProductReserveIn, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextFieldDescriptionProductReserveIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldDescriptionProductReserveInKeyReleased(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(51, 51, 51));
        jLabel29.setText("Descrição Produto");

        jLabelIconBarCode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/[010996].png"))); // NOI18N

        jCheckBoxControlExpiring.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jCheckBoxControlExpiring.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBoxControlExpiring.setText("Controlar Vencimento do Lote");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveIn.controlExpiring}"), jCheckBoxControlExpiring, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jLabel20.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 51, 51));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Preço Médio Compra Todos Lotes do Produto: ");
        jLabel20.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabelPriceMean.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabelPriceMean.setForeground(new java.awt.Color(153, 0, 0));
        jLabelPriceMean.setText("R$ 0,00");
        jLabelPriceMean.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabelPriceMean.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jLabelPriceMeanProductsExistent.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabelPriceMeanProductsExistent.setForeground(new java.awt.Color(153, 0, 0));
        jLabelPriceMeanProductsExistent.setText("R$ 0,00");
        jLabelPriceMeanProductsExistent.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabelPriceMeanProductsExistent.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jLabel26.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(51, 51, 51));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText("Preço Médio Compra Lotes não Fechados do Produto: ");
        jLabel26.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jTextFieldPack.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldPack.setForeground(new java.awt.Color(51, 51, 51));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveIn.pack}"), jTextFieldPack, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextFieldPack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPackActionPerformed(evt);
            }
        });
        jTextFieldPack.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPackKeyReleased(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(51, 51, 51));
        jLabel30.setText("Volumes");

        jLabelGenerateCode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icon_up.gif"))); // NOI18N
        jLabelGenerateCode.setToolTipText("Gerar lote");
        jLabelGenerateCode.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelGenerateCode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelGenerateCodeMouseClicked(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/printer-without-paper_32x32_1.png"))); // NOI18N
        jButton1.setToolTipText("Imprimir Etiquetas");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelInformationVendorLayout = new javax.swing.GroupLayout(jPanelInformationVendor);
        jPanelInformationVendor.setLayout(jPanelInformationVendorLayout);
        jPanelInformationVendorLayout.setHorizontalGroup(
            jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabelIconBarCode)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jTextFieldBarCodeReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldCodeReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jCheckBoxControlExpiring, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel29)
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelInformationVendorLayout.createSequentialGroup()
                                        .addComponent(jLabel26)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabelPriceMeanProductsExistent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelInformationVendorLayout.createSequentialGroup()
                                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabelPriceMean, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel24)
                                            .addComponent(jTextFieldValueCoastProductReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel27)
                                            .addComponent(jFormattedDateProductionProductReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel28)
                                            .addComponent(jFormattedDateExpiringProductReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                        .addComponent(jTextFieldMonthsValidProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton1))
                                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(40, Short.MAX_VALUE))
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldDescriptionProductReserveIn, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelInformationVendorLayout.createSequentialGroup()
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22)
                                    .addComponent(jFormattedDateRegisterReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(jTextFieldReserveActualProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldQuantityInsertReserveIn))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldLotProductReserveIn)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelGenerateCode)
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30)
                                    .addComponent(jTextFieldPack, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(30, 30, 30))))
        );
        jPanelInformationVendorLayout.setVerticalGroup(
            jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInformationVendorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelIconBarCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldBarCodeReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldCodeReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBoxControlExpiring))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addGap(36, 36, 36))
                    .addComponent(jTextFieldDescriptionProductReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                            .addComponent(jLabel19)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldReserveActualProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                            .addComponent(jLabel22)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jFormattedDateRegisterReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                            .addComponent(jLabel21)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldQuantityInsertReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                            .addComponent(jLabel23)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabelGenerateCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldLotProductReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPack, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldValueCoastProductReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedDateProductionProductReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedDateExpiringProductReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldMonthsValidProduct))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelPriceMean, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelPriceMeanProductsExistent, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTableReserveIn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableReserveIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableReserveInMouseClicked(evt);
            }
        });
        jTableReserveIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableReserveInKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableReserveIn);
        jTableReserveIn.setDefaultRenderer(Object.class, new MyCellRenderer());

        jButtonSaveReserveIn.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jButtonSaveReserveIn.setText("Lançar Estoque [Ctrl+S]");
        jButtonSaveReserveIn.setEnabled(false);
        jButtonSaveReserveIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveReserveInActionPerformed(evt);
            }
        });

        jButtonCancelNewResereveIn.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jButtonCancelNewResereveIn.setText("Cancelar [Ctrl+Z]");
        jButtonCancelNewResereveIn.setEnabled(false);
        jButtonCancelNewResereveIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelNewResereveInActionPerformed(evt);
            }
        });

        jButtonNewReserveIn.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jButtonNewReserveIn.setText("Novo Lançamento [Ctrl+N]");
        jButtonNewReserveIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewReserveInActionPerformed(evt);
            }
        });

        jButtonDeleteReserveIn.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jButtonDeleteReserveIn.setText("Excluir [Ctrl+D]");
        jButtonDeleteReserveIn.setEnabled(false);
        jButtonDeleteReserveIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteReserveInActionPerformed(evt);
            }
        });

        jButtonExitJdialogReserveIn.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jButtonExitJdialogReserveIn.setText("Sair [Esc]");
        jButtonExitJdialogReserveIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitJdialogReserveInActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTableVendorLayout = new javax.swing.GroupLayout(jPanelTableVendor);
        jPanelTableVendor.setLayout(jPanelTableVendorLayout);
        jPanelTableVendorLayout.setHorizontalGroup(
            jPanelTableVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTableVendorLayout.createSequentialGroup()
                .addGroup(jPanelTableVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTableVendorLayout.createSequentialGroup()
                        .addComponent(jButtonSaveReserveIn)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonNewReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonDeleteReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancelNewResereveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jButtonExitJdialogReserveIn, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanelTableVendorLayout.setVerticalGroup(
            jPanelTableVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTableVendorLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTableVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSaveReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonNewReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonExitJdialogReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDeleteReserveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancelNewResereveIn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout jPanelBackgroundJdialogVendorLayout = new javax.swing.GroupLayout(jPanelBackgroundJdialogVendor);
        jPanelBackgroundJdialogVendor.setLayout(jPanelBackgroundJdialogVendorLayout);
        jPanelBackgroundJdialogVendorLayout.setHorizontalGroup(
            jPanelBackgroundJdialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBackgroundJdialogVendorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelBackgroundJdialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTableVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelInformationVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );
        jPanelBackgroundJdialogVendorLayout.setVerticalGroup(
            jPanelBackgroundJdialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBackgroundJdialogVendorLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanelInformationVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelTableVendor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        getContentPane().add(jPanelBackgroundJdialogVendor, java.awt.BorderLayout.LINE_END);

        jMenu1.setText("Arquivo");

        jMenuItemNewLaunchReserve.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNewLaunchReserve.setText("Novo Lançamento ");
        jMenuItemNewLaunchReserve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNewLaunchReserveActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemNewLaunchReserve);

        jMenuItemLaunchReserve.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemLaunchReserve.setText("Lançar Estoque");
        jMenuItemLaunchReserve.setEnabled(false);
        jMenuItemLaunchReserve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLaunchReserveActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemLaunchReserve);

        jMenuItemDeleteLaunchReserve.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemDeleteLaunchReserve.setText("Excluir Lançamento");
        jMenuItemDeleteLaunchReserve.setEnabled(false);
        jMenuItemDeleteLaunchReserve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteLaunchReserveActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemDeleteLaunchReserve);

        jMenuItemCancelLaunchReserve.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemCancelLaunchReserve.setText("Cancelar Novo Lançamento");
        jMenuItemCancelLaunchReserve.setEnabled(false);
        jMenuItemCancelLaunchReserve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCancelLaunchReserveActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemCancelLaunchReserve);

        jMenuItemPrintRegisters.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemPrintRegisters.setText("Imprimir Lançamentos");
        jMenuItemPrintRegisters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPrintRegistersActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemPrintRegisters);

        jMenuItemExitJDialogLaunchReserve.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItemExitJDialogLaunchReserve.setText("Sair");
        jMenuItemExitJDialogLaunchReserve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitJDialogLaunchReserveActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemExitJDialogLaunchReserve);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        bindingGroup.bind();

        setSize(new java.awt.Dimension(908, 673));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldBarCodeReserveInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBarCodeReserveInActionPerformed
        limpaCampos();
        ReserveIn.setBean(jTextFieldBarCodeReserveIn.getText());
        barCodeReserveIn = (String) ReserveIn.getBean();
        setReserveIn(ClassReserveIn.consultProductReserve());
        try {
            modelJtableReserveIN = new MyModelJtableReserveIN(barCodeReserveIn);
            jTableReserveIn.setModel(modelJtableReserveIN);
        } catch (Exception ex) {
            System.err.println("ERROR::" + ex);
            ////newXML.generateLog(ex.toString());
        }
    }//GEN-LAST:event_jTextFieldBarCodeReserveInActionPerformed

    private void jTextFieldBarCodeReserveInKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBarCodeReserveInKeyReleased
        formatUpperCase(jTextFieldBarCodeReserveIn);
    }//GEN-LAST:event_jTextFieldBarCodeReserveInKeyReleased

    private void jTextFieldLotProductReserveInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLotProductReserveInActionPerformed
        jTextFieldPack.requestFocus(true);
    }//GEN-LAST:event_jTextFieldLotProductReserveInActionPerformed

    private void jTextFieldLotProductReserveInKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLotProductReserveInKeyReleased
        formatUpperCase(jTextFieldLotProductReserveIn);
        JTextFieldTools.invalidCaracter(jTextFieldLotProductReserveIn);
    }//GEN-LAST:event_jTextFieldLotProductReserveInKeyReleased

    private void jTextFieldValueCoastProductReserveInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldValueCoastProductReserveInActionPerformed
        jFormattedDateProductionProductReserveIn.requestFocus(true);
    }//GEN-LAST:event_jTextFieldValueCoastProductReserveInActionPerformed

    private void jTextFieldValueCoastProductReserveInKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldValueCoastProductReserveInKeyReleased
        JTextFieldTools.formatJTextNumber(jTextFieldValueCoastProductReserveIn);
    }//GEN-LAST:event_jTextFieldValueCoastProductReserveInKeyReleased

    private void jButtonSaveReserveInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveReserveInActionPerformed
        // if(!jTextFieldLotProductReserveIn.getText().isEmpty()){

        //double value = reserveIn.getQuantityInsertReserveIn();
        if (fnValidInputs()) {
            functionLaunchReserve();
        } else {
            JOptionPane.showMessageDialog(this, "Todos os campos são obrigatórios.\nVerifique.", "Alerta!", JOptionPane.INFORMATION_MESSAGE);
        }
        /*    
         if (ClassReserveIn.refreshReserve(barCodeReserveIn, value)) {
             
         JOptionPane.showMessageDialog(this, "Estoque atualizado com sucesso.", "Menssagem", JOptionPane.INFORMATION_MESSAGE);
            
         }else{
             
         JOptionPane.showMessageDialog(this, "Erro ao atualizar estoque.", "Alerta!", JOptionPane.ERROR_MESSAGE);
            
         }
         ClassReserveIn.updatePriceMeanBuyProduct(barCodeReserveIn, ClassReserveIn.priceMeanBuyProduct(barCodeReserveIn));
        
         }else{
            
         JOptionPane.showMessageDialog(this, "Informe o lote.", "Alerta!", JOptionPane.ERROR_MESSAGE);
         */
        //}
    }//GEN-LAST:event_jButtonSaveReserveInActionPerformed

    private void jButtonNewReserveInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewReserveInActionPerformed
        functionNewReserve();
    }//GEN-LAST:event_jButtonNewReserveInActionPerformed

    private void jButtonDeleteReserveInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteReserveInActionPerformed
        functionDeleteLaunchReserve();
    }//GEN-LAST:event_jButtonDeleteReserveInActionPerformed

    private void jButtonExitJdialogReserveInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitJdialogReserveInActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonExitJdialogReserveInActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        fnOpenWindow();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
    }//GEN-LAST:event_formWindowActivated

    private void jButtonCancelNewResereveInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelNewResereveInActionPerformed
        functionCancelLaunchReserve();
    }//GEN-LAST:event_jButtonCancelNewResereveInActionPerformed

    private void jTableReserveInMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableReserveInMouseClicked

        if (jTableReserveIn.getRowCount() > 0) {
            barCodeReserveIn = jTableReserveIn.getValueAt(jTableReserveIn.getSelectedRow(), 0).toString();
            ClassReserveIn.consultReserveIN(barCodeReserveIn);
            activeCampos(false);
            jButtonDeleteReserveIn.setEnabled(true);
            jMenuItemDeleteLaunchReserve.setEnabled(true);

            jButtonNewReserveIn.setEnabled(true);
            jMenuItemNewLaunchReserve.setEnabled(true);
        }
    }//GEN-LAST:event_jTableReserveInMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        completeTable();

    }//GEN-LAST:event_formWindowClosed

    private void jTableReserveInKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableReserveInKeyPressed
        if (jTableReserveIn.getRowCount() > 0) {

            switch (evt.getKeyCode()) {

                case KeyEvent.VK_DOWN:
                    try {
                        String arg = jTableReserveIn.getValueAt(jTableReserveIn.getSelectedRow() + 1, 0).toString();
                        ClassReserveIn.consultReserveIN(arg);
                        jTableReserveIn.requestFocus(true);
                    } catch (java.lang.ArrayIndexOutOfBoundsException ex) {
                        System.err.println("ERROR::" + ex);
                        //newXML.generateLog(ex.toString());
                        String arg = jTableReserveIn.getValueAt(jTableReserveIn.getSelectedRow(), 0).toString();
                        ClassReserveIn.consultReserveIN(arg);

                        jButtonDeleteReserveIn.setEnabled(true);
                        jMenuItemDeleteLaunchReserve.setEnabled(true);

                        jButtonNewReserveIn.setEnabled(true);
                        jMenuItemNewLaunchReserve.setEnabled(true);
                        jTableReserveIn.requestFocus(true);
                    }

                    break;

                case KeyEvent.VK_UP:
                    try {
                        String arg = jTableReserveIn.getValueAt(jTableReserveIn.getSelectedRow() - 1, 0).toString();
                        ClassReserveIn.consultReserveIN(arg);
                    } catch (java.lang.ArrayIndexOutOfBoundsException ex) {
                        System.err.println("ERROR::" + ex);
                        //newXML.generateLog(ex.toString());
                        String arg = jTableReserveIn.getValueAt(jTableReserveIn.getSelectedRow(), 0).toString();
                        ClassReserveIn.consultReserveIN(arg);

                        jButtonDeleteReserveIn.setEnabled(true);
                        jMenuItemDeleteLaunchReserve.setEnabled(true);

                        jButtonNewReserveIn.setEnabled(true);
                        jMenuItemNewLaunchReserve.setEnabled(true);
                        jTableReserveIn.requestFocus(true);
                    }

                    break;

            }

        }
    }//GEN-LAST:event_jTableReserveInKeyPressed

    private void jMenuItemNewLaunchReserveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNewLaunchReserveActionPerformed
        functionNewReserve();
    }//GEN-LAST:event_jMenuItemNewLaunchReserveActionPerformed

    private void jFormattedDateProductionProductReserveInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedDateProductionProductReserveInActionPerformed
        jFormattedDateExpiringProductReserveIn.requestFocus(true);
    }//GEN-LAST:event_jFormattedDateProductionProductReserveInActionPerformed

    private void jTextFieldQuantityInsertReserveInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldQuantityInsertReserveInActionPerformed
        jTextFieldLotProductReserveIn.requestFocus(true);
    }//GEN-LAST:event_jTextFieldQuantityInsertReserveInActionPerformed

    private void jTextFieldQuantityInsertReserveInKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantityInsertReserveInKeyReleased
        JTextFieldTools.validarValor(jTextFieldQuantityInsertReserveIn);
    }//GEN-LAST:event_jTextFieldQuantityInsertReserveInKeyReleased

    private void jFormattedDateExpiringProductReserveInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedDateExpiringProductReserveInActionPerformed
        if (!jFormattedDateExpiringProductReserveIn.getText().contains("_")) {
            JTextFieldTools.validImputDate(jFormattedDateExpiringProductReserveIn, true);
            if (jFormattedDateProductionProductReserveIn.getText().contains("_")) {
                JOptionPane.showMessageDialog(null, "Data de fabricação não pode ficar vázia para o calculo de meses a vencer", "Aviso!", JOptionPane.INFORMATION_MESSAGE);
                jFormattedDateProductionProductReserveIn.requestFocus(true);
            } else {
                jTextFieldMonthsValidProduct.setText(String.valueOf(ClassReserveIn.dateCalculatorFoward(jFormattedDateProductionProductReserveIn.getText(), jFormattedDateExpiringProductReserveIn.getText())));
                jButtonSaveReserveIn.requestFocus(true);
            }

        } else {
            jTextFieldMonthsValidProduct.requestFocus(true);
        }
    }//GEN-LAST:event_jFormattedDateExpiringProductReserveInActionPerformed

    private void jTextFieldMonthsValidProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMonthsValidProductActionPerformed
        jButtonSaveReserveIn.requestFocus(true);
    }//GEN-LAST:event_jTextFieldMonthsValidProductActionPerformed

    private void jTextFieldMonthsValidProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMonthsValidProductKeyReleased

        JTextFieldTools.validarValor(jTextFieldMonthsValidProduct);
        if (!jFormattedDateProductionProductReserveIn.getText().equals("__/__/____") && !jTextFieldMonthsValidProduct.getText().isEmpty()) {
            jFormattedDateExpiringProductReserveIn.setText(ClassReserveIn.dateCalculatorReverse(jFormattedDateProductionProductReserveIn.getText(), Integer.parseInt(jTextFieldMonthsValidProduct.getText())));
        }
    }//GEN-LAST:event_jTextFieldMonthsValidProductKeyReleased

    private void jTextFieldDescriptionProductReserveInKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDescriptionProductReserveInKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDescriptionProductReserveInKeyReleased

    private void jFormattedDateProductionProductReserveInFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedDateProductionProductReserveInFocusLost
        if (!jFormattedDateProductionProductReserveIn.getText().contains("_")) {
            JTextFieldTools.validImputDate(jFormattedDateProductionProductReserveIn, true);
        } else {
            jFormattedDateProductionProductReserveIn.setText(DateActual.setDate(new Date(), "ddMMyyyy"));
        }

    }//GEN-LAST:event_jFormattedDateProductionProductReserveInFocusLost

    private void jFormattedDateExpiringProductReserveInFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedDateExpiringProductReserveInFocusLost
        if (jFormattedDateProductionProductReserveIn.getText().contains("_")) {
            jFormattedDateProductionProductReserveIn.setText(DateActual.setDate(new Date(), "ddMMyyyy"));
            jTextFieldMonthsValidProduct.setText(String.valueOf(ClassReserveIn.dateCalculatorFoward(jFormattedDateProductionProductReserveIn.getText(), jFormattedDateExpiringProductReserveIn.getText())));
            jButtonSaveReserveIn.requestFocus(true);
        } else if (!jFormattedDateExpiringProductReserveIn.getText().contains("_")) {
            jTextFieldMonthsValidProduct.setText(String.valueOf(ClassReserveIn.dateCalculatorFoward(jFormattedDateProductionProductReserveIn.getText(), jFormattedDateExpiringProductReserveIn.getText())));
            jButtonSaveReserveIn.requestFocus(true);
        } else {
            jFormattedDateExpiringProductReserveIn.setText("__/__/____");
        }
    }//GEN-LAST:event_jFormattedDateExpiringProductReserveInFocusLost

    private void jFormattedDateProductionProductReserveInKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedDateProductionProductReserveInKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            jFormattedDateExpiringProductReserveIn.requestFocus(true);

        }
    }//GEN-LAST:event_jFormattedDateProductionProductReserveInKeyPressed

    private void jFormattedDateExpiringProductReserveInKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedDateExpiringProductReserveInKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            jTextFieldMonthsValidProduct.requestFocus(true);

        }
    }//GEN-LAST:event_jFormattedDateExpiringProductReserveInKeyPressed

    private void jMenuItemLaunchReserveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLaunchReserveActionPerformed
        if (fnValidInputs()) {
            functionLaunchReserve();
        } else {
            JOptionPane.showMessageDialog(null, "Todos os campos são obrigatórios.\nVerifique.", "Alerta!", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemLaunchReserveActionPerformed

    private void jMenuItemDeleteLaunchReserveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteLaunchReserveActionPerformed
        functionDeleteLaunchReserve();
    }//GEN-LAST:event_jMenuItemDeleteLaunchReserveActionPerformed

    private void jMenuItemCancelLaunchReserveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCancelLaunchReserveActionPerformed
        functionCancelLaunchReserve();
    }//GEN-LAST:event_jMenuItemCancelLaunchReserveActionPerformed

    private void jMenuItemExitJDialogLaunchReserveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitJDialogLaunchReserveActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItemExitJDialogLaunchReserveActionPerformed

    private void jMenuItemPrintRegistersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPrintRegistersActionPerformed
        try {
            Method something = this.getClass().getDeclaredMethod("functionPrintRegister", new Class[0]);

            ClassLoadingMethods.loading(something, this); // Aqui enviamos o metodo doIt !  
        } catch (NoSuchMethodException | SecurityException ex) {
            System.err.println("ERROR::" + ex);
            //newXML.generateLog(ex.toString());
        }
    }//GEN-LAST:event_jMenuItemPrintRegistersActionPerformed

    private void jTextFieldBarCodeReserveInFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldBarCodeReserveInFocusGained
        if (!jTextFieldBarCodeReserveIn.getText().isEmpty()) {
            jTextFieldBarCodeReserveIn.setSelectionStart(0);
            jTextFieldBarCodeReserveIn.setSelectionEnd(jTextFieldBarCodeReserveIn.getText().length());
        }
    }//GEN-LAST:event_jTextFieldBarCodeReserveInFocusGained

    private void jTextFieldPackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPackActionPerformed
        jTextFieldValueCoastProductReserveIn.requestFocus(true);
    }//GEN-LAST:event_jTextFieldPackActionPerformed

    private void jTextFieldPackKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPackKeyReleased
        JTextFieldTools.validarValor(jTextFieldQuantityInsertReserveIn);
    }//GEN-LAST:event_jTextFieldPackKeyReleased

    private void jTextFieldLotProductReserveInFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldLotProductReserveInFocusLost
        if (ClassReserveIn.validLot(jTextFieldLotProductReserveIn.getText(), jTextFieldBarCodeReserveIn.getText())) {
            JOptionPane.showMessageDialog(null, "O lote informado deste produto já existe.", "Alerta!", JOptionPane.ERROR_MESSAGE);
            jTextFieldLotProductReserveIn.setText("");
            jTextFieldLotProductReserveIn.requestFocus(true);
        }
    }//GEN-LAST:event_jTextFieldLotProductReserveInFocusLost

    private void jLabelGenerateCodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelGenerateCodeMouseClicked
        jTextFieldLotProductReserveIn.setText(ClassCodRandon.codeGeneratorLot());
        jTextFieldLotProductReserveIn.requestFocus(true);
    }//GEN-LAST:event_jLabelGenerateCodeMouseClicked

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
        //limpaCampos();
    }//GEN-LAST:event_formWindowDeactivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Method something = this.getClass().getDeclaredMethod("fnPrintLabelLot", new Class[0]);

            ClassLoadingMethods.loading(something, this); // Aqui enviamos o metodo doIt !  
        } catch (NoSuchMethodException | SecurityException ex) {
            System.err.println("ERROR::" + ex);
            //newXML.generateLog(ex.toString());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jFormattedDateRegisterReserveInFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedDateRegisterReserveInFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedDateRegisterReserveInFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            System.err.println("ERROR::" + ex);
            //newXML.generateLog(ex.toString());
            java.util.logging.Logger.getLogger(JDialogReserveIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JDialogReserveIn dialog = new JDialogReserveIn(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private action.DateConverter dateConverter1;
    private action.DecimalConverter decimalConverter1;
    private action.DecimalConverterReserveValues decimalConverterReserveValues1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonCancelNewResereveIn;
    private javax.swing.JButton jButtonDeleteReserveIn;
    private javax.swing.JButton jButtonExitJdialogReserveIn;
    private javax.swing.JButton jButtonNewReserveIn;
    private javax.swing.JButton jButtonSaveReserveIn;
    private javax.swing.JCheckBox jCheckBoxControlExpiring;
    private static javax.swing.JFormattedTextField jFormattedDateExpiringProductReserveIn;
    private static javax.swing.JFormattedTextField jFormattedDateProductionProductReserveIn;
    private static javax.swing.JFormattedTextField jFormattedDateRegisterReserveIn;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabelGenerateCode;
    private javax.swing.JLabel jLabelIconBarCode;
    private javax.swing.JLabel jLabelPriceMean;
    private javax.swing.JLabel jLabelPriceMeanProductsExistent;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemCancelLaunchReserve;
    private javax.swing.JMenuItem jMenuItemDeleteLaunchReserve;
    private javax.swing.JMenuItem jMenuItemExitJDialogLaunchReserve;
    private javax.swing.JMenuItem jMenuItemLaunchReserve;
    private javax.swing.JMenuItem jMenuItemNewLaunchReserve;
    private javax.swing.JMenuItem jMenuItemPrintRegisters;
    private javax.swing.JPanel jPanelBackgroundJdialogVendor;
    private javax.swing.JPanel jPanelInformationVendor;
    private javax.swing.JPanel jPanelTableVendor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableReserveIn;
    public static javax.swing.JTextField jTextFieldBarCodeReserveIn;
    public static javax.swing.JTextField jTextFieldCodeReserveIn;
    public static javax.swing.JTextField jTextFieldDescriptionProductReserveIn;
    private static javax.swing.JTextField jTextFieldLotProductReserveIn;
    private static javax.swing.JTextField jTextFieldMonthsValidProduct;
    private static javax.swing.JTextField jTextFieldPack;
    private static javax.swing.JTextField jTextFieldQuantityInsertReserveIn;
    private static javax.swing.JTextField jTextFieldReserveActualProduct;
    private static javax.swing.JTextField jTextFieldValueCoastProductReserveIn;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public ReserveIn getReserveIn() {
        return reserveIn;
    }

    /**
     * @param reserveIn
     */
    public void setReserveIn(ReserveIn reserveIn) {
        ReserveIn oldReserveIn = this.reserveIn;
        this.reserveIn = reserveIn;
        firePropertyChange("reserveIn", oldReserveIn, reserveIn);
    }

    public static JTextField[] campos() {
        JTextField[] campo = {
            jTextFieldCodeReserveIn,
            jTextFieldDescriptionProductReserveIn,
            jTextFieldBarCodeReserveIn,
            jFormattedDateRegisterReserveIn,
            jFormattedDateExpiringProductReserveIn,
            jFormattedDateProductionProductReserveIn,
            jTextFieldLotProductReserveIn,
            jTextFieldValueCoastProductReserveIn,
            jTextFieldMonthsValidProduct,
            jTextFieldQuantityInsertReserveIn,
            jTextFieldReserveActualProduct,
            jTextFieldPack
        };
        return campo;
    }

    private static void limpaCampos() {

        JTextField[] campo = campos();

        for (JTextField campo1 : campo) {
            if (jTextFieldCodeReserveIn.getText().isEmpty()) {

                if ("Description".equals(campo1.getName()) || "BarCode".equals(campo1.getName())) {
                } else {
                    campo1.setText("");
                }
            } else {

                if ("Description".equals(campo1.getName()) || "BarCode".equals(campo1.getName())) {
                } else {
                    campo1.setText("");
                }
            }
        }

    }

    private void activeCampos(boolean b) {

        JTextField[] campo = campos();

        for (int i = 1; i < campo.length; i++) {

            campo[i].setEnabled(b);
            jButtonSaveReserveIn.setEnabled(b);

        }

    }

    private void formatUpperCase(JTextField jTextField) {
        jTextField.setText(jTextField.getText().toUpperCase());
    }

    private void functionLaunchReserve() {

        if (ClassReserveIn.newLaunchReserve(reserveIn)) {

            JOptionPane.showMessageDialog(this, "Novo Lote lançado com sucesso.", "Menssagem", JOptionPane.INFORMATION_MESSAGE);

            activeCampos(false);
            limpaCampos();

            jButtonCancelNewResereveIn.setEnabled(false);
            jMenuItemCancelLaunchReserve.setEnabled(false);

            jButtonNewReserveIn.setEnabled(true);
            jMenuItemNewLaunchReserve.setEnabled(true);

            jButtonDeleteReserveIn.setEnabled(false);
            jMenuItemDeleteLaunchReserve.setEnabled(false);

            jTableReserveIn.requestFocus(true);
            fnOpenWindow();

        } else {
            JOptionPane.showMessageDialog(null, "Erro ao lançar o lote!", "Aviso!", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldBarCodeReserveIn.requestFocus(true);
        }

    }

    private void functionNewReserve() {

        barCodeReserveIn = jTextBarCodeProductReserveControl.getText();

        activeCampos(true);
        limpaCampos();

        jCheckBoxControlExpiring.setSelected(true);
        jButtonNewReserveIn.setEnabled(false);
        jMenuItemNewLaunchReserve.setEnabled(false);

        jButtonDeleteReserveIn.setEnabled(false);
        jMenuItemDeleteLaunchReserve.setEnabled(false);

        jButtonCancelNewResereveIn.setEnabled(true);
        jMenuItemCancelLaunchReserve.setEnabled(true);

        jFormattedDateRegisterReserveIn.setText(DateActual.setDate(new Date(), "dd/MM/yyyy"));
        jTextFieldReserveActualProduct.setText(String.valueOf(ClassReserveIn.actualProductReserve(barCodeReserveIn)));
        jTextFieldValueCoastProductReserveIn.setText("0,00");
        jTextFieldQuantityInsertReserveIn.requestFocus(true);
        jTextFieldQuantityInsertReserveIn.setSelectionStart(0);
        jTextFieldQuantityInsertReserveIn.setSelectionEnd(jTextFieldQuantityInsertReserveIn.getText().length());
        jTextFieldCodeReserveIn.setText(ClassCodRandon.codeGeneratorReserveIn());
    }

    private void functionDeleteLaunchReserve() {

        String argInUse = jTableReserveIn.getValueAt(jTableReserveIn.getSelectedRow(), 8).toString();
        String argIsClosed = jTableReserveIn.getValueAt(jTableReserveIn.getSelectedRow(), 9).toString();
        if (!jTextFieldCodeReserveIn.getText().isEmpty()) {

            if (argIsClosed.equals("SIM")) {

                JOptionPane.showMessageDialog(this, "Este lote não pode mais ser excluido, pois já foi fechado.\nVerifique.", "Aviso", JOptionPane.INFORMATION_MESSAGE);

            } else if (argInUse.equals("SIM")) {

                JOptionPane.showMessageDialog(this, "Este lote não pode mais ser excluido, pois esta em uso.\nVerifique.", "Aviso", JOptionPane.INFORMATION_MESSAGE);

            } else {

                if (JOptionPane.showConfirmDialog(this, "Atenção ao excluir este lançamento o estoque sera automaticamente atualizado,\n"
                        + "diminuindo o valor excluido do estoque virtual.\n"
                        + "Deseja realmente excluir este cadastro?\n", "Alerta!", JOptionPane.YES_NO_OPTION) == 0) {

                    if (ClassReserveIn.deleteReserveIN(reserveIn)) {

                        JOptionPane.showMessageDialog(null, "Lote excluido com sucesso.", "Menssagem", JOptionPane.INFORMATION_MESSAGE);
                        fnOpenWindow();

                    } else {

                        JOptionPane.showMessageDialog(this, "Erro ao atualizar estoque.", "ERRO!", JOptionPane.INFORMATION_MESSAGE);

                    }
                    try {

                        modelJtableReserveIN = new MyModelJtableReserveIN(barCodeReserveIn);
                        jTableReserveIn.setModel(modelJtableReserveIN);

                    } catch (Exception ex) {
                        System.err.println("ERROR::" + ex);
                        ////newXML.generateLog(ex.toString());
                    }

                    limpaCampos();
                    jButtonDeleteReserveIn.setEnabled(false);
                    activeCampos(false);
                    jButtonNewReserveIn.setEnabled(true);

                }
            }
        }
    }

    private void functionCancelLaunchReserve() {
        activeCampos(false);
        limpaCampos();
        jButtonNewReserveIn.setEnabled(true);
        jMenuItemCancelLaunchReserve.setEnabled(true);
        jTableReserveIn.requestFocus(true);
    }

    public void functionPrintRegister() {
        if (!jTextFieldBarCodeReserveIn.getText().isEmpty()) {

            ImprimirRelatorio_cupom imp = new ImprimirRelatorio_cupom();
            Object[] valPar2 = {jTextFieldBarCodeReserveIn.getText()};
            Object[] par2 = {"PAR_ARG"};
            try {
                imp.visualizarRelatorio(valPar2, par2, "reportProductLots.jasper", true);
            } catch (Exception ex) {
                System.err.println("ERROR::" + ex);
                //newXML.generateLog(ex.toString());
                Logger.getLogger(JDialogReserveIn.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private boolean fnValidInputs() {

        JTextField[] jTextField = campos();
        boolean ret = true;

        for (JTextField jTextField1 : jTextField) {
            if ((jTextField1.getText().isEmpty()) || (jTextField1.getText().contains("_"))) {
                ret = false;
            }
        }
        return ret;
    }

    private void fnGenerateXMLFile() {

        JTextField[] jTextField = campos();
        NewXML xML = new NewXML();
        xML.deleteXMLFile();
        xML.copyXML();

        for (int i = 1; i <= Integer.parseInt(jTextField[11].getText()); i++) {

            xML.generateXML(jTextField[0].getText() + "-" + i, jTextField[0].getText(),
                    jTextField[1].getText(),
                    jTextField[2].getText(),
                    jTextField[3].getText(),
                    jTextField[4].getText(),
                    jTextField[5].getText(),
                    jTextField[6].getText(),
                    jTextField[9].getText(),
                    i + "-" + jTextField[11].getText(),
                    String.valueOf(Double.parseDouble(jTextField[9].getText()) / Double.parseDouble(jTextField[11].getText())),
                    "UN");

        }
    }

    public void fnPrintLabelLot() {

        fnGenerateXMLFile();
        XMLReport xml = new XMLReport();
        xml.imprimir(null);
    }

    private void fnOpenWindow() {

        barCodeReserveIn = (String) ReserveIn.getBean();
        System.err.println("BarCode ReserveIn::" + barCodeReserveIn);
        try {
            modelJtableReserveIN = new MyModelJtableReserveIN(barCodeReserveIn);
            jTableReserveIn.setModel(modelJtableReserveIN);
        } catch (Exception ex) {
            System.err.println("ERROR::" + ex);
            ////newXML.generateLog(ex.toString());
        }

        setReserveIn(ClassReserveIn.consultProductReserve());
        jLabelPriceMean.setText("R$" + v.format(ClassReserveIn.actualPriceMeanAllThisProduct(barCodeReserveIn)));
        jLabelPriceMeanProductsExistent.setText("R$" + v.format(ClassReserveIn.actualPriceMeanThisProductExistent(barCodeReserveIn)));
    }

    class MyCellRenderer extends DefaultTableCellRenderer {

        public MyCellRenderer() {
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean selected, boolean focused,
                int row, int column) {
            super.getTableCellRendererComponent(table, value, selected, focused, row, column);

            Color bg;

            if (!selected) {
                bg = ((row % 2 == 0)
                        ? alternateColor
                        : whiteColor);
            } else {
                bg = selectedColor;
            }

            if (jTableReserveIn.getRowCount() > 0) {

                jTableReserveIn.getColumnModel().getColumn(0).setPreferredWidth(30);// define a largura da coluna
                jTableReserveIn.getColumnModel().getColumn(1).setPreferredWidth(52);
                jTableReserveIn.getColumnModel().getColumn(2).setPreferredWidth(115);
                jTableReserveIn.getColumnModel().getColumn(3).setPreferredWidth(45);
                jTableReserveIn.getColumnModel().getColumn(4).setPreferredWidth(50);
                jTableReserveIn.getColumnModel().getColumn(5).setPreferredWidth(50);
                jTableReserveIn.getColumnModel().getColumn(6).setPreferredWidth(42);
                jTableReserveIn.getColumnModel().getColumn(7).setPreferredWidth(42);
                jTableReserveIn.getColumnModel().getColumn(8).setPreferredWidth(50);
                jTableReserveIn.getColumnModel().getColumn(9).setPreferredWidth(30);

            }

            //jTableItens.setShowHorizontalLines(false);
            //jTableItens.setShowVerticalLines(false);
            setBackground(bg);
            setForeground(selected
                    ? Color.black
                    : new java.awt.Color(102, 102, 102));
            setHorizontalAlignment(SwingConstants.CENTER);

            /*
             *  if (value instanceof ImageIcon) {
             * setIcon((ImageIcon) value);
             * setText("");
             * } else
             * setIcon(null);
             */
            return this;
        }
    }
}
