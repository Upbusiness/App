/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.ClassCard;
import model.ClassCodRandon;
import model.ClassVendor;
import util.JTextFieldTools;
import util.Mascaras;
import xml.NewXML;

/**
 *
 * @author CPU
 */
public class JDialogRegisterCards extends javax.swing.JDialog {

    public static String idVendor = null;
    private final Color whiteColor = Color.white;                 // new Color(254, 254, 254);
    private final Color alternateColor = new Color(227, 227, 227);    // Color.lightGray;//new Color(204, 204, 204);
    private final Color selectedColor = Color.yellow;
    private MyModelJtableRegisterCards tableRegisterCard;
    private boolean isNewCard = false;
    private static final NewXML newXML = new NewXML();

    /**
     * Creates new form JDialogVendor
     *
     * @param parent
     * @param modal
     */
    public JDialogRegisterCards(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelBackgroundJdialogVendor = new javax.swing.JPanel();
        jPanelInformationVendor = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldNameCard = new javax.swing.JTextField();
        jTextFieldCodCard = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextFieldTariffCard = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextFieldEquipmentCard = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextFieldAccountCard = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jComboTypeCard = new javax.swing.JComboBox();
        jFormattedTextExpiringDateCard = new javax.swing.JFormattedTextField(Mascaras.maskDate());
        jCheckBoxIsActive = new javax.swing.JCheckBox();
        jTextFieldPercentageTax = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jPanelActionsCard = new javax.swing.JPanel();
        jButtonSaveCard = new javax.swing.JButton();
        jButtonEditCard = new javax.swing.JButton();
        jButtonNewCard = new javax.swing.JButton();
        jButtonDeleteCard = new javax.swing.JButton();
        jButtonExitJdialogVendor = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCards = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemSaveCard = new javax.swing.JMenuItem();
        jMenuItemNewCard = new javax.swing.JMenuItem();
        jMenuItemEditCard = new javax.swing.JMenuItem();
        jMenuItemDeleteCard = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Cartões");
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanelInformationVendor.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel17.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(102, 102, 102));
        jLabel17.setText("Cód. Cad. Cartão: ");

        jTextFieldNameCard.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldNameCard.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldNameCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameCardActionPerformed(evt);
            }
        });
        jTextFieldNameCard.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNameCardKeyReleased(evt);
            }
        });

        jTextFieldCodCard.setEditable(false);
        jTextFieldCodCard.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldCodCard.setForeground(new java.awt.Color(51, 51, 51));

        jLabel18.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(102, 102, 102));
        jLabel18.setText("Nome Cartão: ");

        jLabel20.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(102, 102, 102));
        jLabel20.setText("Tarrifa Cartão:");

        jTextFieldTariffCard.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldTariffCard.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldTariffCard.setText("0,00");
        jTextFieldTariffCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTariffCardActionPerformed(evt);
            }
        });
        jTextFieldTariffCard.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldTariffCardKeyReleased(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(102, 102, 102));
        jLabel22.setText("Vencimento Cartão: ");

        jLabel23.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(102, 102, 102));
        jLabel23.setText("Tipo Cartão: ");

        jTextFieldEquipmentCard.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldEquipmentCard.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldEquipmentCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEquipmentCardActionPerformed(evt);
            }
        });
        jTextFieldEquipmentCard.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldEquipmentCardKeyReleased(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(102, 102, 102));
        jLabel24.setText("Equipamento Cartão : ");

        jTextFieldAccountCard.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldAccountCard.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldAccountCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAccountCardActionPerformed(evt);
            }
        });
        jTextFieldAccountCard.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldAccountCardKeyReleased(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(102, 102, 102));
        jLabel25.setText("Conta Cartão: ");

        jComboTypeCard.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jComboTypeCard.setForeground(new java.awt.Color(51, 51, 51));
        jComboTypeCard.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CRÉDITO", "DÉBITO", "ALIMENTAÇÃO", "OUTROS" }));
        jComboTypeCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboTypeCardActionPerformed(evt);
            }
        });
        jComboTypeCard.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboTypeCardKeyPressed(evt);
            }
        });

        jFormattedTextExpiringDateCard.setForeground(new java.awt.Color(51, 51, 51));
        jFormattedTextExpiringDateCard.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jFormattedTextExpiringDateCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextExpiringDateCardActionPerformed(evt);
            }
        });

        jCheckBoxIsActive.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jCheckBoxIsActive.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBoxIsActive.setSelected(true);
        jCheckBoxIsActive.setText("Ativo");
        jCheckBoxIsActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxIsActiveActionPerformed(evt);
            }
        });

        jTextFieldPercentageTax.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldPercentageTax.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldPercentageTax.setText("0,00");
        jTextFieldPercentageTax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPercentageTaxActionPerformed(evt);
            }
        });
        jTextFieldPercentageTax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPercentageTaxKeyReleased(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(102, 102, 102));
        jLabel27.setText("% Desconto:");
        jLabel27.setEnabled(false);

        javax.swing.GroupLayout jPanelInformationVendorLayout = new javax.swing.GroupLayout(jPanelInformationVendor);
        jPanelInformationVendor.setLayout(jPanelInformationVendorLayout);
        jPanelInformationVendorLayout.setHorizontalGroup(
            jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboTypeCard, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldEquipmentCard)
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel24))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldTariffCard, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jFormattedTextExpiringDateCard, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel25)
                                    .addComponent(jTextFieldAccountCard))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldPercentageTax, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jCheckBoxIsActive, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel27)))
                        .addGap(67, 67, 67))
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextFieldCodCard, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jTextFieldNameCard, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        jPanelInformationVendorLayout.setVerticalGroup(
            jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInformationVendorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldNameCard, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCodCard, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(36, 36, 36)))
                .addGap(11, 11, 11)
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboTypeCard, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldEquipmentCard, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFormattedTextExpiringDateCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInformationVendorLayout.createSequentialGroup()
                                    .addComponent(jLabel20)
                                    .addGap(36, 36, 36))
                                .addComponent(jTextFieldTariffCard, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldAccountCard, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jCheckBoxIsActive, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130))
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPercentageTax, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
        );

        jButtonSaveCard.setText("Salvar [Ctrl+S]");
        jButtonSaveCard.setEnabled(false);
        jButtonSaveCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveCardActionPerformed(evt);
            }
        });

        jButtonEditCard.setText("Editar [Ctrl+E]");
        jButtonEditCard.setEnabled(false);
        jButtonEditCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditCardActionPerformed(evt);
            }
        });

        jButtonNewCard.setText("Novo [Ctrl+N]");
        jButtonNewCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewCardActionPerformed(evt);
            }
        });

        jButtonDeleteCard.setText("Excluir [Delete]");
        jButtonDeleteCard.setEnabled(false);
        jButtonDeleteCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteCardActionPerformed(evt);
            }
        });

        jButtonExitJdialogVendor.setText("Sair [Esc]");
        jButtonExitJdialogVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitJdialogVendorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelActionsCardLayout = new javax.swing.GroupLayout(jPanelActionsCard);
        jPanelActionsCard.setLayout(jPanelActionsCardLayout);
        jPanelActionsCardLayout.setHorizontalGroup(
            jPanelActionsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelActionsCardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonSaveCard, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonEditCard, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonNewCard, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDeleteCard, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonExitJdialogVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelActionsCardLayout.setVerticalGroup(
            jPanelActionsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelActionsCardLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelActionsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelActionsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonSaveCard, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonEditCard, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonNewCard, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelActionsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonExitJdialogVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonDeleteCard, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTableCards.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableCards.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCardsMouseClicked(evt);
            }
        });
        jTableCards.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableCardsKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableCards);
        jTableCards.setDefaultRenderer(Object.class, new MyCellRenderer());

        javax.swing.GroupLayout jPanelBackgroundJdialogVendorLayout = new javax.swing.GroupLayout(jPanelBackgroundJdialogVendor);
        jPanelBackgroundJdialogVendor.setLayout(jPanelBackgroundJdialogVendorLayout);
        jPanelBackgroundJdialogVendorLayout.setHorizontalGroup(
            jPanelBackgroundJdialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBackgroundJdialogVendorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBackgroundJdialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelInformationVendor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelActionsCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanelBackgroundJdialogVendorLayout.setVerticalGroup(
            jPanelBackgroundJdialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBackgroundJdialogVendorLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanelInformationVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelActionsCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelBackgroundJdialogVendor, java.awt.BorderLayout.CENTER);

        jMenu1.setText("Arquivo");

        jMenuItemSaveCard.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSaveCard.setText("Salvar");
        jMenuItemSaveCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveCardActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSaveCard);

        jMenuItemNewCard.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNewCard.setText("Novo Cartão");
        jMenuItemNewCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNewCardActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemNewCard);

        jMenuItemEditCard.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemEditCard.setText("Editar");
        jMenuItemEditCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEditCardActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemEditCard);

        jMenuItemDeleteCard.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        jMenuItemDeleteCard.setText("Excluir Cartão");
        jMenuItemDeleteCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteCardActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemDeleteCard);

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItemExit.setText("Sair");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNameCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNameCardActionPerformed
        jComboTypeCard.requestFocus(true);
    }//GEN-LAST:event_jTextFieldNameCardActionPerformed

    private void jTextFieldNameCardKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNameCardKeyReleased
        formatUpperCase(jTextFieldNameCard);
    }//GEN-LAST:event_jTextFieldNameCardKeyReleased

    private void jTextFieldTariffCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTariffCardActionPerformed
        jFormattedTextExpiringDateCard.requestFocus(true);
    }//GEN-LAST:event_jTextFieldTariffCardActionPerformed

    private void jTextFieldTariffCardKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTariffCardKeyReleased
        JTextFieldTools.formatJTextNumber(jTextFieldTariffCard);
    }//GEN-LAST:event_jTextFieldTariffCardKeyReleased

    private void jTextFieldEquipmentCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEquipmentCardActionPerformed
        jTextFieldTariffCard.requestFocus(true);
    }//GEN-LAST:event_jTextFieldEquipmentCardActionPerformed

    private void jTextFieldEquipmentCardKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEquipmentCardKeyReleased
        formatUpperCase(jTextFieldEquipmentCard);
    }//GEN-LAST:event_jTextFieldEquipmentCardKeyReleased

    private void jTextFieldAccountCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAccountCardActionPerformed
        jTextFieldPercentageTax.requestFocus(true);
    }//GEN-LAST:event_jTextFieldAccountCardActionPerformed

    private void jTextFieldAccountCardKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAccountCardKeyReleased
        formatUpperCase(jTextFieldAccountCard);
    }//GEN-LAST:event_jTextFieldAccountCardKeyReleased

    private void jButtonSaveCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveCardActionPerformed
        saveCard();
    }//GEN-LAST:event_jButtonSaveCardActionPerformed

    private void jButtonEditCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditCardActionPerformed
        editCard();
    }//GEN-LAST:event_jButtonEditCardActionPerformed

    private void jButtonNewCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewCardActionPerformed
        newCard();
    }//GEN-LAST:event_jButtonNewCardActionPerformed

    private void jButtonDeleteCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteCardActionPerformed
        deleteCard();
    }//GEN-LAST:event_jButtonDeleteCardActionPerformed

    private void jButtonExitJdialogVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitJdialogVendorActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonExitJdialogVendorActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        activeCampos(false);
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        try {
            tableRegisterCard = new MyModelJtableRegisterCards(false);
            jTableCards.setModel(tableRegisterCard);
        } catch (Exception ex) {
            System.err.println("ERROR::" + ex);
            ////newXML.generateLog(ex.toString());
        }
    }//GEN-LAST:event_formWindowActivated

    private void jTableCardsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCardsMouseClicked

        if (jTableCards.getRowCount() > 0) {
            idVendor = jTableCards.getValueAt(jTableCards.getSelectedRow(), 1).toString();
            ClassCard.consultCardRegister(idVendor);
            activeCampos(false);
            jButtonDeleteCard.setEnabled(true);
            jButtonNewCard.setEnabled(true);
            jButtonEditCard.setEnabled(true);
        }

    }//GEN-LAST:event_jTableCardsMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed


    }//GEN-LAST:event_formWindowClosed

    private void jTableCardsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableCardsKeyPressed
        if (jTableCards.getRowCount() > 0) {

            switch (evt.getKeyCode()) {

                case KeyEvent.VK_DOWN:
                    try {
                        String arg = jTableCards.getValueAt(jTableCards.getSelectedRow() + 1, 0).toString();
                        ClassCard.consultCardRegister(arg);
                        isNewCard = false;
                        isNewCard = false;
                        jTableCards.requestFocus(true);
                    } catch (java.lang.ArrayIndexOutOfBoundsException ex) {
                        System.err.println("ERROR::" + ex);
                        //newXML.generateLog(ex.toString());
                        String arg = jTableCards.getValueAt(jTableCards.getSelectedRow(), 0).toString();
                        ClassCard.consultCardRegister(arg);
                        jTableCards.requestFocus(true);
                    }

                    break;

                case KeyEvent.VK_UP:
                    try {
                        String arg = jTableCards.getValueAt(jTableCards.getSelectedRow() - 1, 0).toString();
                        ClassCard.consultCardRegister(arg);
                    } catch (java.lang.ArrayIndexOutOfBoundsException ex) {
                        System.err.println("ERROR::" + ex);
                        //newXML.generateLog(ex.toString());
                        String arg = jTableCards.getValueAt(jTableCards.getSelectedRow(), 0).toString();
                        ClassCard.consultCardRegister(arg);

                        jTableCards.requestFocus(true);
                    }

                    break;

            }
        }
    }//GEN-LAST:event_jTableCardsKeyPressed

    private void jMenuItemSaveCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveCardActionPerformed
        saveCard();
    }//GEN-LAST:event_jMenuItemSaveCardActionPerformed

    private void jFormattedTextExpiringDateCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextExpiringDateCardActionPerformed
        jTextFieldAccountCard.requestFocus(true);
    }//GEN-LAST:event_jFormattedTextExpiringDateCardActionPerformed

    private void jTextFieldPercentageTaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPercentageTaxActionPerformed
        jButtonSaveCard.requestFocus(true);
    }//GEN-LAST:event_jTextFieldPercentageTaxActionPerformed

    private void jTextFieldPercentageTaxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPercentageTaxKeyReleased
        JTextFieldTools.formatJTextNumber(jTextFieldPercentageTax);
    }//GEN-LAST:event_jTextFieldPercentageTaxKeyReleased

    private void jComboTypeCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboTypeCardActionPerformed
        jTextFieldEquipmentCard.requestFocus(true);
    }//GEN-LAST:event_jComboTypeCardActionPerformed

    private void jComboTypeCardKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboTypeCardKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextFieldEquipmentCard.requestFocus(true);
        }
    }//GEN-LAST:event_jComboTypeCardKeyPressed

    private void jCheckBoxIsActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxIsActiveActionPerformed
        jButtonSaveCard.requestFocus(true);
    }//GEN-LAST:event_jCheckBoxIsActiveActionPerformed

    private void jMenuItemNewCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNewCardActionPerformed
        newCard();
    }//GEN-LAST:event_jMenuItemNewCardActionPerformed

    private void jMenuItemEditCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEditCardActionPerformed
        editCard();
    }//GEN-LAST:event_jMenuItemEditCardActionPerformed

    private void jMenuItemDeleteCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteCardActionPerformed
        deleteCard();
    }//GEN-LAST:event_jMenuItemDeleteCardActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            System.err.println("ERROR::" + ex);
            //newXML.generateLog(ex.toString());
            java.util.logging.Logger.getLogger(JDialogRegisterCards.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JDialogRegisterCards dialog = new JDialogRegisterCards(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDeleteCard;
    private javax.swing.JButton jButtonEditCard;
    private javax.swing.JButton jButtonExitJdialogVendor;
    private javax.swing.JButton jButtonNewCard;
    private javax.swing.JButton jButtonSaveCard;
    public static javax.swing.JCheckBox jCheckBoxIsActive;
    public static javax.swing.JComboBox jComboTypeCard;
    private static javax.swing.JFormattedTextField jFormattedTextExpiringDateCard;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemDeleteCard;
    private javax.swing.JMenuItem jMenuItemEditCard;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemNewCard;
    private javax.swing.JMenuItem jMenuItemSaveCard;
    private javax.swing.JPanel jPanelActionsCard;
    private javax.swing.JPanel jPanelBackgroundJdialogVendor;
    private javax.swing.JPanel jPanelInformationVendor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCards;
    private static javax.swing.JTextField jTextFieldAccountCard;
    public static javax.swing.JTextField jTextFieldCodCard;
    private static javax.swing.JTextField jTextFieldEquipmentCard;
    public static javax.swing.JTextField jTextFieldNameCard;
    private static javax.swing.JTextField jTextFieldPercentageTax;
    private static javax.swing.JTextField jTextFieldTariffCard;
    // End of variables declaration//GEN-END:variables

    public static JTextField[] campos() {

        JTextField[] campo = {
            jTextFieldCodCard,
            jTextFieldNameCard,
            jTextFieldEquipmentCard,
            jTextFieldTariffCard,
            jFormattedTextExpiringDateCard,
            jTextFieldAccountCard,
            jTextFieldPercentageTax
        };

        return campo;
    }

    private static void limpaCampos() {

        JTextField[] campo = campos();

        for (JTextField campo1 : campo) {
            campo1.setText("");
        }

    }

    private void activeCampos(boolean b) {

        JTextField[] campo = campos();

        for (int i = 1; i < campo.length; i++) {

            campo[i].setEnabled(b);
            jButtonSaveCard.setEnabled(b);

        }
        jCheckBoxIsActive.setEnabled(b);
        jComboTypeCard.setEnabled(b);
    }

    private void formatUpperCase(JTextField jTextField) {
        jTextField.setText(jTextField.getText().toUpperCase());
    }

    private void saveCard() {
        if (!jTextFieldNameCard.getText().isEmpty()) {

            if (JTextFieldTools.validImputDate(jFormattedTextExpiringDateCard, false)) {

                if (isNewCard) {

                    if (ClassCard.newCard()) {

                        JOptionPane.showMessageDialog(null, "Novo cartão cadastrado com sucesso.\n Você já pode adicionar a taxação deste cartão.", "Menssagem", JOptionPane.INFORMATION_MESSAGE);
                        jButtonNewCard.setEnabled(true);
                        isNewCard = false;

                        try {
                            tableRegisterCard = new MyModelJtableRegisterCards(false);
                            jTableCards.setModel(tableRegisterCard);
                        } catch (Exception ex) {
                            System.err.println("ERROR::" + ex);
                            ////newXML.generateLog(ex.toString());
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "Erro ao cadastrar o cartão!", "Aviso!", JOptionPane.INFORMATION_MESSAGE);
                        jTextFieldNameCard.requestFocus(true);
                    }

                } else {

                    if (JOptionPane.showConfirmDialog(this, "Deseja realmente modificar este cadastro?", "Alerta!", JOptionPane.YES_NO_OPTION) == 0) {

                        if (ClassCard.refreshCard(jTextFieldCodCard.getText())) {
                            try {
                                tableRegisterCard = new MyModelJtableRegisterCards(false);
                                jTableCards.setModel(tableRegisterCard);
                            } catch (Exception ex) {
                                System.err.println("ERROR::" + ex);
                                ////newXML.generateLog(ex.toString());
                            }
                            limpaCampos();
                            ClassCard.consultCardRegister(jTableCards.getValueAt(0, 0).toString());
                            jButtonDeleteCard.setEnabled(true);
                            activeCampos(false);
                            jButtonNewCard.setEnabled(true);
                            jButtonEditCard.setEnabled(true);
                            JOptionPane.showMessageDialog(null, "Cadastro de cartão atualizado com sucesso.", "Menssagem", JOptionPane.INFORMATION_MESSAGE);
                            jTableCards.requestFocus(true);
                        }
                    }
                }
            }
        } else {

            JOptionPane.showMessageDialog(null, "Nome do cartão não pode ficar em branco.", "Menssagem", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldNameCard.requestFocus(true);

        }
    }

    private void newCard() {
        activeCampos(true);
        limpaCampos();
        jButtonNewCard.setEnabled(false);
        jButtonDeleteCard.setEnabled(false);
        jButtonEditCard.setEnabled(false);
        jTextFieldCodCard.setText(ClassCodRandon.codeGeneratorCard());
        jTextFieldTariffCard.setText("0,00");
        jTextFieldPercentageTax.setText("0,00");
        isNewCard = true;
        jTextFieldNameCard.requestFocus(true);
    }

    private void deleteCard() {

        if (!jTextFieldCodCard.getText().isEmpty()) {
            if (JOptionPane.showConfirmDialog(this, "Deseja realmente excluir este cadastro?", "Alerta!", JOptionPane.YES_NO_OPTION) == 0) {

                try {
                    if (ClassCard.deleteCard(jTextFieldCodCard.getText())) {
                        JOptionPane.showMessageDialog(null, "Cadastro de cartão removido com sucesso.", "Menssagem", JOptionPane.INFORMATION_MESSAGE);
                        try {
                            tableRegisterCard = new MyModelJtableRegisterCards(false);
                            jTableCards.setModel(tableRegisterCard);
                        } catch (Exception ex) {
                            System.err.println("ERROR::" + ex);
                            ////newXML.generateLog(ex.toString());
                        }
                        limpaCampos();
                        activeCampos(false);
                        jButtonDeleteCard.setEnabled(false);
                        if (jTableCards.getRowCount() > 0) {
                            ClassVendor.consultVendor(jTableCards.getValueAt(0, 0).toString());
                            jTableCards.requestFocus(true);
                        }
                        jButtonDeleteCard.setEnabled(true);
                        activeCampos(false);
                        jButtonNewCard.setEnabled(true);
                        jButtonEditCard.setEnabled(true);
                    }

                } catch (SQLException ex) {
                    System.err.println("ERROR::" + ex);
                    //newXML.generateLog(ex.toString());
                    Logger.getLogger(JDialogRegisterCards.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }

    private void editCard() {

        activeCampos(true);
        jButtonSaveCard.setEnabled(true);
        jButtonEditCard.setEnabled(false);
        jTextFieldNameCard.requestFocus(true);

    }

    class MyCellRenderer extends DefaultTableCellRenderer {

        public MyCellRenderer() {
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean selected, boolean focused,
                int row, int column) {
            super.getTableCellRendererComponent(table, value, selected, focused, row, column);

            Color bg;

            if (!selected) {
                bg = ((row % 2 == 0)
                        ? alternateColor
                        : whiteColor);
            } else {
                bg = selectedColor;
            }

            if (jTableCards.getRowCount() > 0) {

                jTableCards.getColumnModel().getColumn(0).setPreferredWidth(1);// define a largura da coluna
                jTableCards.getColumnModel().getColumn(1).setPreferredWidth(100);
                jTableCards.getColumnModel().getColumn(2).setPreferredWidth(130);
                jTableCards.getColumnModel().getColumn(3).setPreferredWidth(130);
                jTableCards.getColumnModel().getColumn(4).setPreferredWidth(70);

            }

            //jTableItens.setShowHorizontalLines(false);
            //jTableItens.setShowVerticalLines(false);
            setBackground(bg);
            setForeground(selected
                    ? Color.black
                    : new java.awt.Color(102, 102, 102));
            setHorizontalAlignment(SwingConstants.CENTER);

            /*
             *  if (value instanceof ImageIcon) {
             * setIcon((ImageIcon) value);
             * setText("");
             * } else
             * setIcon(null);
             */
            return this;
        }
    }
}
