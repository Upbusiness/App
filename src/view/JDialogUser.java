/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import action.BeanUser;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.ClassUser;

/**
 *
 * @author Rafiusks
 */
public class JDialogUser extends javax.swing.JDialog {

    private BeanUser beanUser = new BeanUser();
    private MyModelJtableUser modelJtableUser;
    private final Color whiteColor = Color.white;                 // new Color(254, 254, 254);
    private final Color alternateColor = new Color(227, 227, 227);    // Color.lightGray;//new Color(204, 204, 204);
    private final Color selectedColor = Color.yellow;
    private boolean isEdit = true;

    /**
     * Creates new form JDialogUser
     *
     * @param parent
     * @param modal
     */
    public JDialogUser(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel1 = new javax.swing.JPanel();
        jTextLogin = new javax.swing.JTextField();
        jPasswordSenha = new javax.swing.JPasswordField();
        jPasswordConfirmarSenha = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUser = new javax.swing.JTable();
        jPanelAccess = new javax.swing.JPanel();
        jCheckBoxReports = new javax.swing.JCheckBox();
        jCheckBoxCost = new javax.swing.JCheckBox();
        jCheckBoxCancel = new javax.swing.JCheckBox();
        jCheckBoxCashier = new javax.swing.JCheckBox();
        jCheckBoxSales = new javax.swing.JCheckBox();
        jCheckBoxProducts = new javax.swing.JCheckBox();
        jCheckBoxReserve = new javax.swing.JCheckBox();
        jCheckBoxCategory = new javax.swing.JCheckBox();
        jCheckBoxUsers = new javax.swing.JCheckBox();
        jCheckBoxCards = new javax.swing.JCheckBox();
        jCheckBoxRates = new javax.swing.JCheckBox();
        jCheckBoxRestrict = new javax.swing.JCheckBox();
        jButtonExitClient = new javax.swing.JButton();
        jButtonDeleteClient = new javax.swing.JButton();
        jButtonNewClient = new javax.swing.JButton();
        jButtonEditClient = new javax.swing.JButton();
        jButtonCancelClient = new javax.swing.JButton();
        jButtonSaveClient = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTextLogin.setEditable(false);
        jTextLogin.setBorder(javax.swing.BorderFactory.createTitledBorder("Login:"));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${beanUser.user}"), jTextLogin, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPasswordSenha.setEditable(false);
        jPasswordSenha.setBorder(javax.swing.BorderFactory.createTitledBorder("Senha:"));

        jPasswordConfirmarSenha.setEditable(false);
        jPasswordConfirmarSenha.setBorder(javax.swing.BorderFactory.createTitledBorder("Confirmar Senha:"));

        jTableUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableUser.setDefaultRenderer(Object.class, new MyCellRenderer());
        jTableUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableUser);

        jPanelAccess.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jCheckBoxReports.setText("Acesso a Relátorios");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${beanUser.isReportAccess}"), jCheckBoxReports, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxCost.setText("Custos");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${beanUser.isCoastOperationAccess}"), jCheckBoxCost, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxCancel.setText("Cancelamentos Avançados");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${beanUser.isCancelAccess}"), jCheckBoxCancel, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxCashier.setText("Acesso Caixa");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${beanUser.isCashierAccess}"), jCheckBoxCashier, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxSales.setText("Acesso  Venda");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${beanUser.isSaleAccess}"), jCheckBoxSales, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxProducts.setText(" Cadastro de Produtos");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${beanUser.isRegisterProductsAccess}"), jCheckBoxProducts, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxReserve.setText("Controle de Estoque");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${beanUser.isControlReserveAccess}"), jCheckBoxReserve, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxCategory.setText("Cadastrar Categoria");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${beanUser.isRegisterCategoryAccess}"), jCheckBoxCategory, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxUsers.setText("Cadastrar Usuários");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${beanUser.isRegisterUserAccess}"), jCheckBoxUsers, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxCards.setText("Cadastrar Cartões");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${beanUser.isRegisterCardAccess}"), jCheckBoxCards, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxRates.setText("Configurar Taxas");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${beanUser.isConfigRates}"), jCheckBoxRates, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxRestrict.setText("Acesso Restrito");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${beanUser.isAccessRestrict}"), jCheckBoxRestrict, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanelAccessLayout = new javax.swing.GroupLayout(jPanelAccess);
        jPanelAccess.setLayout(jPanelAccessLayout);
        jPanelAccessLayout.setHorizontalGroup(
            jPanelAccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAccessLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanelAccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxSales)
                    .addComponent(jCheckBoxProducts)
                    .addComponent(jCheckBoxCashier)
                    .addComponent(jCheckBoxCancel)
                    .addComponent(jCheckBoxCost))
                .addGap(39, 39, 39)
                .addGroup(jPanelAccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxRestrict)
                    .addComponent(jCheckBoxRates)
                    .addGroup(jPanelAccessLayout.createSequentialGroup()
                        .addGroup(jPanelAccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxCategory)
                            .addComponent(jCheckBoxUsers)
                            .addComponent(jCheckBoxCards))
                        .addGap(41, 41, 41)
                        .addGroup(jPanelAccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxReserve)
                            .addComponent(jCheckBoxReports))))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanelAccessLayout.setVerticalGroup(
            jPanelAccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAccessLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAccessLayout.createSequentialGroup()
                        .addComponent(jCheckBoxCost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxCashier)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxProducts)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxSales, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelAccessLayout.createSequentialGroup()
                        .addGroup(jPanelAccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelAccessLayout.createSequentialGroup()
                                .addComponent(jCheckBoxUsers)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxCategory))
                            .addGroup(jPanelAccessLayout.createSequentialGroup()
                                .addComponent(jCheckBoxReports)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxReserve)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxCards)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxRates)
                        .addGap(0, 0, 0)
                        .addComponent(jCheckBoxRestrict)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonExitClient.setText("Sair");
        jButtonExitClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitClientActionPerformed(evt);
            }
        });

        jButtonDeleteClient.setText("Excluir");
        jButtonDeleteClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteClientActionPerformed(evt);
            }
        });

        jButtonNewClient.setText("Novo");
        jButtonNewClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewClientActionPerformed(evt);
            }
        });

        jButtonEditClient.setText("Editar");
        jButtonEditClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditClientActionPerformed(evt);
            }
        });

        jButtonCancelClient.setText("Cancelar");
        jButtonCancelClient.setEnabled(false);
        jButtonCancelClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelClientActionPerformed(evt);
            }
        });

        jButtonSaveClient.setText("Salvar");
        jButtonSaveClient.setEnabled(false);
        jButtonSaveClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveClientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanelAccess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextLogin)
                            .addComponent(jPasswordSenha)
                            .addComponent(jPasswordConfirmarSenha))
                        .addGap(10, 10, 10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonSaveClient, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancelClient, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEditClient, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonNewClient, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDeleteClient, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonExitClient, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jTextLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPasswordSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPasswordConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelAccess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonSaveClient, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonDeleteClient, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonExitClient, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonNewClient, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonEditClient, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonCancelClient, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        functionFillTableUser();
    }//GEN-LAST:event_formWindowActivated

    private void jTableUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUserMouseClicked
        if (jTableUser.getModel().getRowCount() > 0) {
            fnFillUserForward(ClassUser.searchUser(jTableUser.getValueAt(jTableUser.getSelectedRow(), 0).toString()));
        }
    }//GEN-LAST:event_jTableUserMouseClicked

    private void jButtonExitClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitClientActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonExitClientActionPerformed

    private void jButtonDeleteClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteClientActionPerformed

        if (!jTextLogin.getText().isEmpty()) {
         if(JOptionPane.showConfirmDialog(this,"Deseja realmente excluir o cadastro?", "Aviso",JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE) == 0){
            if (fnDeleteUser(jTextLogin.getText())) {

                JOptionPane.showMessageDialog(this, "Usuário excluído com sucesso.");               

            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir usuário.");
            }
            }
        }
    }//GEN-LAST:event_jButtonDeleteClientActionPerformed

    private void jButtonNewClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewClientActionPerformed
        fnNewUser(true);
    }//GEN-LAST:event_jButtonNewClientActionPerformed

    private void jButtonEditClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditClientActionPerformed
        if (!jTextLogin.getText().isEmpty()) {
            fnEdit(true);
        }
    }//GEN-LAST:event_jButtonEditClientActionPerformed

    private void jButtonCancelClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelClientActionPerformed
        fnEdit(false);
        fnNewUser(false);
    }//GEN-LAST:event_jButtonCancelClientActionPerformed

    private void jButtonSaveClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveClientActionPerformed

        if ((!jPasswordSenha.getText().equals(jPasswordConfirmarSenha.getText()))) {

            jPasswordConfirmarSenha.setBackground(Color.red);
            jPasswordConfirmarSenha.requestFocus(true);
            jPasswordConfirmarSenha.setText("");
            JOptionPane.showMessageDialog(this, "As senhas não conferem.", "Alerta!", JOptionPane.INFORMATION_MESSAGE);
        } else {
            if (jPasswordSenha.getText().isEmpty() || jPasswordConfirmarSenha.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Senha inválida.", "Alerta!", JOptionPane.INFORMATION_MESSAGE);
                return;
            } else {
                jPasswordConfirmarSenha.setBackground(Color.green);
                jPasswordSenha.setBackground(Color.green);
            }
            if (jTextLogin.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Login inválido.", "Alerta!", JOptionPane.INFORMATION_MESSAGE);
            } else {

                if (!isEdit) {
                    System.err.println("NEW USER");
                    if (ClassUser.newUser(fnFillUserReverse(jTextLogin.getText(), jPasswordSenha.getText()))) {
                        JOptionPane.showMessageDialog(this, "Usuário cadastrado com sucesso.", "Aviso!", JOptionPane.INFORMATION_MESSAGE);
                        clear(jPanel1);
                        fnNewUser(false);
                        if (jPasswordSenha.getBackground().equals(Color.green)) {
                            jPasswordSenha.setBackground(Color.white);
                            jPasswordConfirmarSenha.setBackground(Color.white);
                        }
                    } else {

                        JOptionPane.showMessageDialog(this, "O login '" + jTextLogin.getText() + "' já esta em uso.", "Alerta!", JOptionPane.INFORMATION_MESSAGE);
                        jTextLogin.requestFocus(true);
                    }
                } else {

                    System.err.println("EDIT USER");
                    if (ClassUser.editUser(fnFillUserReverse(jTextLogin.getText(), jPasswordSenha.getText()))) {
                        JOptionPane.showMessageDialog(this, "Usuário alterado com sucesso.", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
                        clear(jPanel1);
                        fnEdit(false);
                        if (jPasswordSenha.getBackground().equals(Color.green)) {
                            jPasswordSenha.setBackground(Color.white);
                            jPasswordConfirmarSenha.setBackground(Color.white);
                        }
                    } else {

                        JOptionPane.showMessageDialog(this, "O login '" + jTextLogin.getText() + "' já esta em uso.", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
                        jTextLogin.requestFocus(true);
                        return;
                    }
                }
            }
        }
        if (jPasswordSenha.getBackground().equals(Color.green)) {
            jPasswordSenha.setBackground(Color.white);
            jPasswordConfirmarSenha.setBackground(Color.white);
        }
    }//GEN-LAST:event_jButtonSaveClientActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        functionFillTableUser();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            System.err.println("ERROR::" + ex);
            java.util.logging.Logger.getLogger(JDialogUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JDialogUser dialog = new JDialogUser(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    static javax.swing.JButton jButtonCancelClient;
    static javax.swing.JButton jButtonDeleteClient;
    static javax.swing.JButton jButtonEditClient;
    static javax.swing.JButton jButtonExitClient;
    static javax.swing.JButton jButtonNewClient;
    private static javax.swing.JButton jButtonSaveClient;
    private javax.swing.JCheckBox jCheckBoxCancel;
    private javax.swing.JCheckBox jCheckBoxCards;
    private javax.swing.JCheckBox jCheckBoxCashier;
    private javax.swing.JCheckBox jCheckBoxCategory;
    private javax.swing.JCheckBox jCheckBoxCost;
    private javax.swing.JCheckBox jCheckBoxProducts;
    private javax.swing.JCheckBox jCheckBoxRates;
    private javax.swing.JCheckBox jCheckBoxReports;
    private javax.swing.JCheckBox jCheckBoxReserve;
    private javax.swing.JCheckBox jCheckBoxRestrict;
    private javax.swing.JCheckBox jCheckBoxSales;
    private javax.swing.JCheckBox jCheckBoxUsers;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelAccess;
    private javax.swing.JPasswordField jPasswordConfirmarSenha;
    private javax.swing.JPasswordField jPasswordSenha;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUser;
    private javax.swing.JTextField jTextLogin;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the beanLogin
     */
    public BeanUser getBeanUser() {
        return beanUser;
    }

    /**
     * @param aBeanUser
     */
    public void setBeanUser(BeanUser aBeanUser) {
        BeanUser oldUser = this.beanUser;
        this.beanUser = aBeanUser;
        firePropertyChange("beanLogin", oldUser, aBeanUser);
    }

    private static void clear(JPanel panel) {

        java.awt.Component[] components = panel.getComponents();

        javax.swing.JTextField jTextField;
        javax.swing.JFormattedTextField jFormattedTextField;
        javax.swing.JCheckBox jCheckBox;

        for (Component component : components) {
            if (component instanceof javax.swing.JTextField) {
                jTextField = (javax.swing.JTextField) component;
                jTextField.setText("");
            }
            if (component instanceof javax.swing.JFormattedTextField) {
                jFormattedTextField = (javax.swing.JFormattedTextField) component;
                jFormattedTextField.setValue(null);
            }
            if (component instanceof javax.swing.JCheckBox) {
                jCheckBox = (javax.swing.JCheckBox) component;
                jCheckBox.setSelected(false);
            }
        }
    }

    private void functionFillTableUser() {
        modelJtableUser = new MyModelJtableUser();
        jTableUser.setModel(modelJtableUser);
    }

    private void fnNewUser(boolean arg) {
        isEdit = !arg;
        clear(jPanelAccess);
        jTextLogin.setEditable(arg);
        jPasswordSenha.setEditable(arg);
        jPasswordConfirmarSenha.setEditable(arg);
        jButtonNewClient.setEnabled(!arg);
        jButtonDeleteClient.setEnabled(!arg);
        jButtonCancelClient.setEnabled(arg);
        jButtonEditClient.setEnabled(!arg);
        jButtonSaveClient.setEnabled(arg);
        jTextLogin.requestFocus(arg);
        jTextLogin.setText("");
        jPasswordConfirmarSenha.setText("");
        jPasswordSenha.setText("");
    }

    public JCheckBox[] fields() {

        JCheckBox jCheckBox[] = {
            jCheckBoxSales,
            jCheckBoxProducts,
            jCheckBoxCashier,
            jCheckBoxCancel,
            jCheckBoxCost,
            jCheckBoxRestrict,
            jCheckBoxRates,
            jCheckBoxCategory,
            jCheckBoxUsers,
            jCheckBoxCards,
            jCheckBoxReserve,
            jCheckBoxReports};
        
        return jCheckBox;

    }
    
    
    private void fnFillUserForward(List<Object> searchUser) {
      
        JCheckBox jCheckBox[] = fields();
        int interator = 0;

        for (JCheckBox jCheckBox1 : jCheckBox) {

            jCheckBox1.setSelected((boolean) searchUser.get(interator));
            interator++;
        }
        jTextLogin.setText(searchUser.get(interator).toString());
        jPasswordConfirmarSenha.setText(searchUser.get(interator + 1).toString());
        jPasswordSenha.setText(searchUser.get(interator + 1).toString());

    }


    private List<Object> fnFillUserReverse(String user, String password) {

        List<Object> objects = new ArrayList<>();        
        JCheckBox jCheckBox[] = fields(); 

        for (JCheckBox jCheckBox1 : jCheckBox) {
            objects.add(jCheckBox1.isSelected());
        }        
        
        objects.add(password);
        objects.add(user);
        return objects;
    }

    private void fnEdit(boolean arg) {

        isEdit = arg;
        jButtonEditClient.setEnabled(!isEdit);
        jButtonSaveClient.setEnabled(isEdit);
        jButtonCancelClient.setEnabled(isEdit);
        jButtonNewClient.setEnabled(!isEdit);
        jButtonDeleteClient.setEnabled(!isEdit);
        jPasswordSenha.setEditable(isEdit);
        jPasswordConfirmarSenha.setEditable(isEdit);
    }

    private boolean fnDeleteUser(String arg) {
        
        return ClassUser.deleteUser(arg);
        
    }

    class MyCellRenderer extends DefaultTableCellRenderer {

        public MyCellRenderer() {
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean selected, boolean focused,
                int row, int column) {
            super.getTableCellRendererComponent(table, value, selected, focused, row, column);

            Color bg;

            if (!selected) {
                bg = ((row % 2 == 0)
                        ? alternateColor
                        : whiteColor);
            } else {
                bg = selectedColor;
            }

            if (jTableUser.getRowCount() > 0) {

                //jTableUser.getColumnModel().getColumn(0).setPreferredWidth(100);
                //jTableUser.getColumnModel().getColumn(1).setPreferredWidth(300);// define a largura da coluna
            }

            //jTableItens.setShowHorizontalLines(false);
            //jTableItens.setShowVerticalLines(false);
            setHorizontalAlignment(SwingConstants.CENTER);
            setBackground(bg);
            setForeground(selected
                    ? Color.black
                    : new java.awt.Color(102, 102, 102));

            setVerticalAlignment(SwingConstants.CENTER);
            ((DefaultTableCellRenderer) jTableUser.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);

            /*
             *  if (value instanceof ImageIcon) {
             * setIcon((ImageIcon) value);
             * setText("");
             * } else
             * setIcon(null);
             */
            return this;
        }
    }

}
