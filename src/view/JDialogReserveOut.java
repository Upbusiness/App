/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import action.ReserveIn;
import action.ReserveOut;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.lang.reflect.Method;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.ClassCodRandon;
import model.ClassReserveOut;
import reports.ImprimirRelatorio_cupom;
import util.DateActual;
import util.JTextFieldTools;
import util.Mascaras;
import static view.JDialogControlProductsReserve.*;
import xml.NewXML;

/**
 *
 * @author CPU
 */
public class JDialogReserveOut extends javax.swing.JDialog {

    public static String idTableReserveOut = null;
    private final Color whiteColor = Color.white;                 // new Color(254, 254, 254);
    private final Color alternateColor = new Color(227, 227, 227);    // Color.lightGray;//new Color(204, 204, 204);
    private final Color selectedColor = Color.yellow;
    private MyModelJtableReserveOUT modelJtableReserveOut;
    private MyModelJtableReserveOUTLots modelJtableReserveOUTLots;
    private ReserveOut reserveOut = new ReserveOut();
    private static String argIdReserveOUT;
    private static String barCodeReserveOut;
    private static double valueRemainder;
    private static final NewXML newXML = new NewXML();
    /**
     * Creates new form JDialogVendor
     *
     * @param parent
     * @param modal
     */
    public JDialogReserveOut(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();
        setIconImage(new ImageIcon("src/icons/ estoque(2).png").getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        dateConverter2 = new action.DateConverter();
        jDialogLots = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableLots = new javax.swing.JTable();
        jTextFieldLotProductReserveOutJDialogLots = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        decimalConverterReserveValues1 = new action.DecimalConverterReserveValues();
        jPanelBackgroundJdialogVendor = new javax.swing.JPanel();
        jPanelInformationVendor = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldBarCodeReserveOut = new javax.swing.JTextField();
        jTextFieldCodeReserveOut = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextFieldLotProductReserveOut = new javax.swing.JTextField();
        jFormattedDateRegisterReserveOut = new javax.swing.JFormattedTextField(Mascaras.maskDate());
        jTextFieldQuantityRemovedReserveOut = new javax.swing.JTextField();
        jTextFieldDescriptionProductReserveOut = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabelIconBarCode = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextFieldActualReserve = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jComboBoxDescriptionScrap = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jPanelTableVendor = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableReserveOut = new javax.swing.JTable();
        jButtonSaveReserveOut = new javax.swing.JButton();
        jButtonCancelNewResereveOut = new javax.swing.JButton();
        jButtonNewReserveOut = new javax.swing.JButton();
        jButtonDeleteReserveOut = new javax.swing.JButton();
        jButtonExitJdialogReserveOut = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemNewLaunchReserveOut = new javax.swing.JMenuItem();
        jMenuItemLaunchReserveOut = new javax.swing.JMenuItem();
        jMenuItemDeleteLaunchReserveOut = new javax.swing.JMenuItem();
        jMenuItemCancelLaunchReserveOut = new javax.swing.JMenuItem();
        jMenuItemPrintRegistersReserveOut = new javax.swing.JMenuItem();
        jMenuItemExitJDialogLaunchReserveOut = new javax.swing.JMenuItem();

        jDialogLots.setTitle("Lotes Cadastrados do Produto");
        jDialogLots.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                jDialogLotsWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                jDialogLotsWindowOpened(evt);
            }
        });

        jTableLots.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableLots.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLotsMouseClicked(evt);
            }
        });
        jTableLots.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableLotsKeyPressed(evt);
            }
        });
        jTableLots.setDefaultRenderer(Object.class, new MyCellRenderer());
        jScrollPane3.setViewportView(jTableLots);

        jTextFieldLotProductReserveOutJDialogLots.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldLotProductReserveOutJDialogLots.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldLotProductReserveOutJDialogLots.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLotProductReserveOutJDialogLotsActionPerformed(evt);
            }
        });
        jTextFieldLotProductReserveOutJDialogLots.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldLotProductReserveOutJDialogLotsKeyPressed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(51, 51, 51));
        jLabel27.setText("Lote:");

        javax.swing.GroupLayout jDialogLotsLayout = new javax.swing.GroupLayout(jDialogLots.getContentPane());
        jDialogLots.getContentPane().setLayout(jDialogLotsLayout);
        jDialogLotsLayout.setHorizontalGroup(
            jDialogLotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogLotsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldLotProductReserveOutJDialogLots)
                .addContainerGap())
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
        );
        jDialogLotsLayout.setVerticalGroup(
            jDialogLotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogLotsLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jDialogLotsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jTextFieldLotProductReserveOutJDialogLots, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE))
        );

        jDialogLots.getAccessibleContext().setAccessibleParent(this);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Saída de Estoque");
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanelInformationVendor.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel17.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setText("Cód. Saída Estoque: ");

        jTextFieldBarCodeReserveOut.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldBarCodeReserveOut.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldBarCodeReserveOut.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldBarCodeReserveOut.setEnabled(false);
        jTextFieldBarCodeReserveOut.setName("BarCode"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveOut.barCodeProductReserveOut}"), jTextFieldBarCodeReserveOut, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextFieldBarCodeReserveOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBarCodeReserveOutActionPerformed(evt);
            }
        });
        jTextFieldBarCodeReserveOut.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldBarCodeReserveOutFocusGained(evt);
            }
        });
        jTextFieldBarCodeReserveOut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBarCodeReserveOutKeyReleased(evt);
            }
        });

        jTextFieldCodeReserveOut.setEditable(false);
        jTextFieldCodeReserveOut.setBackground(new java.awt.Color(255, 255, 51));
        jTextFieldCodeReserveOut.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldCodeReserveOut.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldCodeReserveOut.setEnabled(false);
        jTextFieldCodeReserveOut.setName("Code"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveOut.idReserveOut}"), jTextFieldCodeReserveOut, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel18.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 51, 51));
        jLabel18.setText("Código Barra Produto");

        jLabel21.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 51, 51));
        jLabel21.setText("Quantidade");

        jLabel22.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(51, 51, 51));
        jLabel22.setText("Data Registro");

        jLabel23.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(51, 51, 51));
        jLabel23.setText("Lote");

        jTextFieldLotProductReserveOut.setEditable(false);
        jTextFieldLotProductReserveOut.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldLotProductReserveOut.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldLotProductReserveOut.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldLotProductReserveOut.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveOut.lotProductReserveOut}"), jTextFieldLotProductReserveOut, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextFieldLotProductReserveOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldLotProductReserveOutMouseClicked(evt);
            }
        });

        jFormattedDateRegisterReserveOut.setBackground(new java.awt.Color(204, 204, 255));
        jFormattedDateRegisterReserveOut.setForeground(new java.awt.Color(51, 51, 51));
        jFormattedDateRegisterReserveOut.setEnabled(false);
        jFormattedDateRegisterReserveOut.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveOut.dateRegisterReserveOut}"), jFormattedDateRegisterReserveOut, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(dateConverter2);
        bindingGroup.addBinding(binding);

        jTextFieldQuantityRemovedReserveOut.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldQuantityRemovedReserveOut.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldQuantityRemovedReserveOut.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveOut.quantityRemoveReserveOut}"), jTextFieldQuantityRemovedReserveOut, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverterReserveValues1);
        bindingGroup.addBinding(binding);

        jTextFieldQuantityRemovedReserveOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldQuantityRemovedReserveOutActionPerformed(evt);
            }
        });
        jTextFieldQuantityRemovedReserveOut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldQuantityRemovedReserveOutKeyReleased(evt);
            }
        });

        jTextFieldDescriptionProductReserveOut.setEditable(false);
        jTextFieldDescriptionProductReserveOut.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldDescriptionProductReserveOut.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldDescriptionProductReserveOut.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldDescriptionProductReserveOut.setEnabled(false);
        jTextFieldDescriptionProductReserveOut.setName("Description"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveOut.descriptionProductReserveOut}"), jTextFieldDescriptionProductReserveOut, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextFieldDescriptionProductReserveOut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldDescriptionProductReserveOutKeyReleased(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(51, 51, 51));
        jLabel29.setText("Descrição Produto");

        jLabelIconBarCode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/[010996].png"))); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveOut.observationReserveOut}"), jTextArea1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(jTextArea1);

        jTextFieldActualReserve.setEditable(false);
        jTextFieldActualReserve.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldActualReserve.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldActualReserve.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldActualReserve.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveOut.quantityActualReserveOut}"), jTextFieldActualReserve, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverterReserveValues1);
        bindingGroup.addBinding(binding);

        jTextFieldActualReserve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldActualReserveActionPerformed(evt);
            }
        });
        jTextFieldActualReserve.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldActualReserveKeyReleased(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(51, 51, 51));
        jLabel24.setText("Estoque Atual");

        jComboBoxDescriptionScrap.setEditable(true);
        jComboBoxDescriptionScrap.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jComboBoxDescriptionScrap.setForeground(new java.awt.Color(51, 51, 51));
        jComboBoxDescriptionScrap.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Quebra", "Vencido", "Fim Desconhecido", "Doado", "Furto/Roubo", "Outros", " " }));
        jComboBoxDescriptionScrap.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${reserveOut.descriptionReserveOut}"), jComboBoxDescriptionScrap, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jComboBoxDescriptionScrap.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxDescriptionScrapItemStateChanged(evt);
            }
        });
        jComboBoxDescriptionScrap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxDescriptionScrapKeyPressed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(51, 51, 51));
        jLabel25.setText("Descrição da Saída");

        jLabel26.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(51, 51, 51));
        jLabel26.setText("Obsrvações");

        javax.swing.GroupLayout jPanelInformationVendorLayout = new javax.swing.GroupLayout(jPanelInformationVendor);
        jPanelInformationVendor.setLayout(jPanelInformationVendorLayout);
        jPanelInformationVendorLayout.setHorizontalGroup(
            jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addComponent(jTextFieldDescriptionProductReserveOut, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldActualReserve, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22)
                                    .addComponent(jFormattedDateRegisterReserveOut, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                    .addComponent(jTextFieldQuantityRemovedReserveOut))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldLotProductReserveOut, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jComboBoxDescriptionScrap, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabelIconBarCode)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jTextFieldBarCodeReserveOut, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldCodeReserveOut, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 737, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanelInformationVendorLayout.setVerticalGroup(
            jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelIconBarCode, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldBarCodeReserveOut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCodeReserveOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldActualReserve, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addGap(36, 36, 36))
                    .addComponent(jTextFieldDescriptionProductReserveOut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedDateRegisterReserveOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldQuantityRemovedReserveOut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldLotProductReserveOut)
                            .addComponent(jComboBoxDescriptionScrap))))
                .addGap(13, 13, 13)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTableReserveOut.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableReserveOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableReserveOutMouseClicked(evt);
            }
        });
        jTableReserveOut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableReserveOutKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableReserveOut);
        jTableReserveOut.setDefaultRenderer(Object.class, new MyCellRenderer());

        jButtonSaveReserveOut.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jButtonSaveReserveOut.setText("Lançar Quebra[Ctrl+S]");
        jButtonSaveReserveOut.setEnabled(false);
        jButtonSaveReserveOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveReserveOutActionPerformed(evt);
            }
        });

        jButtonCancelNewResereveOut.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jButtonCancelNewResereveOut.setText("Cancelar [Ctrl+Z]");
        jButtonCancelNewResereveOut.setEnabled(false);
        jButtonCancelNewResereveOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelNewResereveOutActionPerformed(evt);
            }
        });

        jButtonNewReserveOut.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jButtonNewReserveOut.setText("Novo Lançamento [Ctrl+N]");
        jButtonNewReserveOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewReserveOutActionPerformed(evt);
            }
        });

        jButtonDeleteReserveOut.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jButtonDeleteReserveOut.setText("Excluir [Ctrl+D]");
        jButtonDeleteReserveOut.setEnabled(false);
        jButtonDeleteReserveOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteReserveOutActionPerformed(evt);
            }
        });

        jButtonExitJdialogReserveOut.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jButtonExitJdialogReserveOut.setText("Sair [Esc]");
        jButtonExitJdialogReserveOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitJdialogReserveOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTableVendorLayout = new javax.swing.GroupLayout(jPanelTableVendor);
        jPanelTableVendor.setLayout(jPanelTableVendorLayout);
        jPanelTableVendorLayout.setHorizontalGroup(
            jPanelTableVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTableVendorLayout.createSequentialGroup()
                .addComponent(jButtonSaveReserveOut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonNewReserveOut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDeleteReserveOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCancelNewResereveOut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonExitJdialogReserveOut, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 761, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanelTableVendorLayout.setVerticalGroup(
            jPanelTableVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTableVendorLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTableVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSaveReserveOut, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonNewReserveOut, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancelNewResereveOut, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDeleteReserveOut, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonExitJdialogReserveOut, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelBackgroundJdialogVendorLayout = new javax.swing.GroupLayout(jPanelBackgroundJdialogVendor);
        jPanelBackgroundJdialogVendor.setLayout(jPanelBackgroundJdialogVendorLayout);
        jPanelBackgroundJdialogVendorLayout.setHorizontalGroup(
            jPanelBackgroundJdialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBackgroundJdialogVendorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBackgroundJdialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelInformationVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelTableVendor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelBackgroundJdialogVendorLayout.setVerticalGroup(
            jPanelBackgroundJdialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBackgroundJdialogVendorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelInformationVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelTableVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jMenu1.setText("Arquivo");

        jMenuItemNewLaunchReserveOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNewLaunchReserveOut.setText("Novo Lançamento ");
        jMenuItemNewLaunchReserveOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNewLaunchReserveOutActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemNewLaunchReserveOut);

        jMenuItemLaunchReserveOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemLaunchReserveOut.setText("Lançar Saída");
        jMenuItemLaunchReserveOut.setEnabled(false);
        jMenuItemLaunchReserveOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLaunchReserveOutActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemLaunchReserveOut);

        jMenuItemDeleteLaunchReserveOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemDeleteLaunchReserveOut.setText("Excluir Lançamento");
        jMenuItemDeleteLaunchReserveOut.setEnabled(false);
        jMenuItemDeleteLaunchReserveOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteLaunchReserveOutActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemDeleteLaunchReserveOut);

        jMenuItemCancelLaunchReserveOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemCancelLaunchReserveOut.setText("Cancelar Novo Lançamento");
        jMenuItemCancelLaunchReserveOut.setEnabled(false);
        jMenuItemCancelLaunchReserveOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCancelLaunchReserveOutActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemCancelLaunchReserveOut);

        jMenuItemPrintRegistersReserveOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemPrintRegistersReserveOut.setText("Imprimir Lançamentos");
        jMenuItemPrintRegistersReserveOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPrintRegistersReserveOutActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemPrintRegistersReserveOut);

        jMenuItemExitJDialogLaunchReserveOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItemExitJDialogLaunchReserveOut.setText("Sair");
        jMenuItemExitJDialogLaunchReserveOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitJDialogLaunchReserveOutActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemExitJDialogLaunchReserveOut);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelBackgroundJdialogVendor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanelBackgroundJdialogVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getAccessibleContext().setAccessibleParent(jDialogLots);

        bindingGroup.bind();

        setSize(new java.awt.Dimension(797, 639));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldBarCodeReserveOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBarCodeReserveOutActionPerformed
        limpaCampos();
        ReserveIn.setBean(jTextFieldBarCodeReserveOut.getText());
        barCodeReserveOut = (String) ReserveIn.getBean();
        setReserveOut(ClassReserveOut.consultProductReserveOut());
        try {
            modelJtableReserveOut = new MyModelJtableReserveOUT(barCodeReserveOut);
            jTableReserveOut.setModel(modelJtableReserveOut);
        } catch (Exception ex) {
           System.err.println("ERROR::" + ex);
            ////newXML.generateLog(ex.toString());
        }
    }//GEN-LAST:event_jTextFieldBarCodeReserveOutActionPerformed

    private void jTextFieldBarCodeReserveOutKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBarCodeReserveOutKeyReleased
        formatUpperCase(jTextFieldBarCodeReserveOut);
    }//GEN-LAST:event_jTextFieldBarCodeReserveOutKeyReleased

    private void jButtonSaveReserveOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveReserveOutActionPerformed
        if (!jTextFieldLotProductReserveOut.getText().isEmpty()) {
            
            functionLaunchReserveOut();
                       

        } else {
            
            JOptionPane.showMessageDialog(null, "Informe o lote.", "Alerta!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonSaveReserveOutActionPerformed

    private void jButtonNewReserveOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewReserveOutActionPerformed
        functionViewDialog();
    }//GEN-LAST:event_jButtonNewReserveOutActionPerformed

    private void jButtonDeleteReserveOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteReserveOutActionPerformed
        argIdReserveOUT = reserveOut.getIdReserveOut();
        functionDeleteLaunchReserve();
    }//GEN-LAST:event_jButtonDeleteReserveOutActionPerformed

    private void jButtonExitJdialogReserveOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitJdialogReserveOutActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonExitJdialogReserveOutActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       fnOpenWindow();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated

    private void jButtonCancelNewResereveOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelNewResereveOutActionPerformed
        functionCancelLaunchReserve();
    }//GEN-LAST:event_jButtonCancelNewResereveOutActionPerformed

    private void jTableReserveOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableReserveOutMouseClicked

        if (jTableReserveOut.getRowCount() > 0) {

            idTableReserveOut = jTableReserveOut.getValueAt(jTableReserveOut.getSelectedRow(), 0).toString();
            System.out.println("ID RESERVE OUT SELECTED>>>>>>>" + idTableReserveOut);
            setReserveOut(ClassReserveOut.consultReserveOUT(idTableReserveOut));
            activeCampos(false);
            jButtonDeleteReserveOut.setEnabled(true);
            jMenuItemDeleteLaunchReserveOut.setEnabled(true);

            jButtonNewReserveOut.setEnabled(true);
            jMenuItemNewLaunchReserveOut.setEnabled(true);
        }
       // if (evt.getClickCount() == 2) {

        // }
    }//GEN-LAST:event_jTableReserveOutMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        completeTable();

    }//GEN-LAST:event_formWindowClosed

    private void jTableReserveOutKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableReserveOutKeyPressed
        if (jTableReserveOut.getRowCount() > 0) {

            switch (evt.getKeyCode()) {

                case KeyEvent.VK_DOWN:
                    try {
                        String arg = jTableReserveOut.getValueAt(jTableReserveOut.getSelectedRow() + 1, 0).toString();
                        ClassReserveOut.consultReserveOUT(arg);
                        jTableReserveOut.requestFocus(true);
                    } catch (java.lang.ArrayIndexOutOfBoundsException ex) { System.err.println("ERROR::" + ex);
            //newXML.generateLog(ex.toString());
                        String arg = jTableReserveOut.getValueAt(jTableReserveOut.getSelectedRow(), 0).toString();
                        ClassReserveOut.consultReserveOUT(arg);

                        jButtonDeleteReserveOut.setEnabled(true);
                        jMenuItemDeleteLaunchReserveOut.setEnabled(true);

                        jButtonNewReserveOut.setEnabled(true);
                        jMenuItemNewLaunchReserveOut.setEnabled(true);
                        jTableReserveOut.requestFocus(true);
                    }

                    break;

                case KeyEvent.VK_UP:
                    try {
                        String arg = jTableReserveOut.getValueAt(jTableReserveOut.getSelectedRow() - 1, 0).toString();
                        ClassReserveOut.consultReserveOUT(arg);
                    } catch (java.lang.ArrayIndexOutOfBoundsException ex) { System.err.println("ERROR::" + ex);
            //newXML.generateLog(ex.toString());
                        String arg = jTableReserveOut.getValueAt(jTableReserveOut.getSelectedRow(), 0).toString();
                        ClassReserveOut.consultReserveOUT(arg);

                        jButtonDeleteReserveOut.setEnabled(true);
                        jMenuItemDeleteLaunchReserveOut.setEnabled(true);

                        jButtonNewReserveOut.setEnabled(true);
                        jMenuItemNewLaunchReserveOut.setEnabled(true);
                        jTableReserveOut.requestFocus(true);
                    }

                    break;

            }

        }
    }//GEN-LAST:event_jTableReserveOutKeyPressed

    private void jMenuItemNewLaunchReserveOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNewLaunchReserveOutActionPerformed
       functionViewDialog();
    }//GEN-LAST:event_jMenuItemNewLaunchReserveOutActionPerformed

    private void jTextFieldQuantityRemovedReserveOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldQuantityRemovedReserveOutActionPerformed
        jComboBoxDescriptionScrap.requestFocus(true);
    }//GEN-LAST:event_jTextFieldQuantityRemovedReserveOutActionPerformed

    private void jTextFieldQuantityRemovedReserveOutKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantityRemovedReserveOutKeyReleased
        JTextFieldTools.validarValor(jTextFieldQuantityRemovedReserveOut);
    }//GEN-LAST:event_jTextFieldQuantityRemovedReserveOutKeyReleased

    private void jTextFieldDescriptionProductReserveOutKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDescriptionProductReserveOutKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDescriptionProductReserveOutKeyReleased

    private void jMenuItemLaunchReserveOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLaunchReserveOutActionPerformed
        functionLaunchReserveOut();
    }//GEN-LAST:event_jMenuItemLaunchReserveOutActionPerformed

    private void jMenuItemDeleteLaunchReserveOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteLaunchReserveOutActionPerformed
        functionDeleteLaunchReserve();
    }//GEN-LAST:event_jMenuItemDeleteLaunchReserveOutActionPerformed

    private void jMenuItemCancelLaunchReserveOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCancelLaunchReserveOutActionPerformed
        functionCancelLaunchReserve();
    }//GEN-LAST:event_jMenuItemCancelLaunchReserveOutActionPerformed

    private void jMenuItemExitJDialogLaunchReserveOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitJDialogLaunchReserveOutActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItemExitJDialogLaunchReserveOutActionPerformed

    private void jMenuItemPrintRegistersReserveOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPrintRegistersReserveOutActionPerformed
        try {
            Method something
                    = this.getClass().getDeclaredMethod("functionPrintRegisterReserveOut", new Class[0]);

            ClassLoadingMethods.loading(something, this); // Aqui enviamos o metodo doIt !  
        } catch (NoSuchMethodException | SecurityException ex) {
            System.err.println("ERROR::" + ex);
            //newXML.generateLog(ex.toString());
        }
    }//GEN-LAST:event_jMenuItemPrintRegistersReserveOutActionPerformed

    private void jTextFieldBarCodeReserveOutFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldBarCodeReserveOutFocusGained
        if (!jTextFieldBarCodeReserveOut.getText().isEmpty()) {
            jTextFieldBarCodeReserveOut.setSelectionStart(0);
            jTextFieldBarCodeReserveOut.setSelectionEnd(jTextFieldBarCodeReserveOut.getText().length());
        }
    }//GEN-LAST:event_jTextFieldBarCodeReserveOutFocusGained

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
        //limpaCampos();
    }//GEN-LAST:event_formWindowDeactivated

    private void jTextFieldActualReserveKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldActualReserveKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldActualReserveKeyReleased

    private void jTextFieldActualReserveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldActualReserveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldActualReserveActionPerformed

    private void jComboBoxDescriptionScrapKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxDescriptionScrapKeyPressed
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {
            jButtonSaveReserveOut.requestFocus(true);
        }
    }//GEN-LAST:event_jComboBoxDescriptionScrapKeyPressed

    private void jDialogLotsWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialogLotsWindowOpened
        try {
            modelJtableReserveOUTLots = new MyModelJtableReserveOUTLots(barCodeReserveOut);
            jTableLots.setModel(modelJtableReserveOUTLots);
        } catch (Exception ex) {
           System.err.println("ERROR::" + ex);
            ////newXML.generateLog(ex.toString());
        }
        jTableLots.setRequestFocusEnabled(true);
    }//GEN-LAST:event_jDialogLotsWindowOpened

    private void jTableLotsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLotsMouseClicked
        jTextFieldLotProductReserveOutJDialogLots.setText(jTableLots.getValueAt(jTableLots.getSelectedRow(), 0).toString());
        jDialogLots.dispose();

    }//GEN-LAST:event_jTableLotsMouseClicked

    private void jTableLotsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableLotsKeyPressed
        if (jTableLots.getRowCount() > 0) {

            switch (evt.getKeyCode()) {

                case KeyEvent.VK_ENTER:
                    jTextFieldLotProductReserveOutJDialogLots.setText(jTableLots.getValueAt(jTableLots.getSelectedRow(), 0).toString());
                    jDialogLots.dispose();
                    break;

                case KeyEvent.VK_DOWN:
                    try {
                        String arg = jTableLots.getValueAt(jTableLots.getSelectedRow() + 1, 0).toString();
                        jTextFieldLotProductReserveOutJDialogLots.setText(arg);

                    } catch (java.lang.ArrayIndexOutOfBoundsException ex) { System.err.println("ERROR::" + ex);
            //newXML.generateLog(ex.toString());
                        String arg = jTableLots.getValueAt(jTableLots.getSelectedRow(), 0).toString();
                        jTextFieldLotProductReserveOutJDialogLots.setText(arg);
                    }

                    break;

                case KeyEvent.VK_UP:
                    try {
                        String arg = jTableLots.getValueAt(jTableLots.getSelectedRow() - 1, 0).toString();
                        jTextFieldLotProductReserveOutJDialogLots.setText(arg);
                    } catch (java.lang.ArrayIndexOutOfBoundsException ex) { System.err.println("ERROR::" + ex);
            //newXML.generateLog(ex.toString());
                        String arg = jTableLots.getValueAt(jTableLots.getSelectedRow(), 0).toString();
                        jTextFieldLotProductReserveOutJDialogLots.setText(arg);
                        jTextFieldLotProductReserveOutJDialogLots.requestFocus(true);

                    }

                    break;

            }

        }

    }//GEN-LAST:event_jTableLotsKeyPressed

    private void jDialogLotsWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialogLotsWindowClosed
        functionNewReserveOut();
        jTextFieldLotProductReserveOut.setText(jTextFieldLotProductReserveOutJDialogLots.getText());
    }//GEN-LAST:event_jDialogLotsWindowClosed

    private void jTextFieldLotProductReserveOutJDialogLotsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLotProductReserveOutJDialogLotsActionPerformed
        if (fnContainsLotRegister(jTextFieldLotProductReserveOutJDialogLots.getText())) {
            jDialogLots.dispose();
        }else{
            jTextFieldLotProductReserveOutJDialogLots.setText("");
        }
    }//GEN-LAST:event_jTextFieldLotProductReserveOutJDialogLotsActionPerformed

    private void jTextFieldLotProductReserveOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldLotProductReserveOutMouseClicked
        functionViewDialog();
    }//GEN-LAST:event_jTextFieldLotProductReserveOutMouseClicked

    private void jComboBoxDescriptionScrapItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxDescriptionScrapItemStateChanged
        //jButtonSaveReserveOut.requestFocus(true);
    }//GEN-LAST:event_jComboBoxDescriptionScrapItemStateChanged

    private void jTextFieldLotProductReserveOutJDialogLotsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLotProductReserveOutJDialogLotsKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jTableLots.requestFocus(true);
        }
    }//GEN-LAST:event_jTextFieldLotProductReserveOutJDialogLotsKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
           System.err.println("ERROR::" + ex);
            //newXML.generateLog(ex.toString());  java.util.logging.Logger.getLogger(JDialogReserveOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JDialogReserveOut dialog = new JDialogReserveOut(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private action.DateConverter dateConverter2;
    private action.DecimalConverterReserveValues decimalConverterReserveValues1;
    private javax.swing.JButton jButtonCancelNewResereveOut;
    private javax.swing.JButton jButtonDeleteReserveOut;
    private javax.swing.JButton jButtonExitJdialogReserveOut;
    private javax.swing.JButton jButtonNewReserveOut;
    private javax.swing.JButton jButtonSaveReserveOut;
    private javax.swing.JComboBox jComboBoxDescriptionScrap;
    private javax.swing.JDialog jDialogLots;
    private static javax.swing.JFormattedTextField jFormattedDateRegisterReserveOut;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabelIconBarCode;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemCancelLaunchReserveOut;
    private javax.swing.JMenuItem jMenuItemDeleteLaunchReserveOut;
    private javax.swing.JMenuItem jMenuItemExitJDialogLaunchReserveOut;
    private javax.swing.JMenuItem jMenuItemLaunchReserveOut;
    private javax.swing.JMenuItem jMenuItemNewLaunchReserveOut;
    private javax.swing.JMenuItem jMenuItemPrintRegistersReserveOut;
    private javax.swing.JPanel jPanelBackgroundJdialogVendor;
    private javax.swing.JPanel jPanelInformationVendor;
    private javax.swing.JPanel jPanelTableVendor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableLots;
    private javax.swing.JTable jTableReserveOut;
    private javax.swing.JTextArea jTextArea1;
    private static javax.swing.JTextField jTextFieldActualReserve;
    public static javax.swing.JTextField jTextFieldBarCodeReserveOut;
    public static javax.swing.JTextField jTextFieldCodeReserveOut;
    public static javax.swing.JTextField jTextFieldDescriptionProductReserveOut;
    private static javax.swing.JTextField jTextFieldLotProductReserveOut;
    private static javax.swing.JTextField jTextFieldLotProductReserveOutJDialogLots;
    private static javax.swing.JTextField jTextFieldQuantityRemovedReserveOut;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public ReserveOut getReserveOut() {
        return reserveOut;
    }

    /**
     * @param reserveOut
     */
    public void setReserveOut(ReserveOut reserveOut) {
        ReserveOut oldReserveOut = this.reserveOut;
        this.reserveOut = reserveOut;
        firePropertyChange("reserveOut", oldReserveOut, reserveOut);
    }

    public static JTextField[] campos() {
        JTextField[] campo = {
            jTextFieldCodeReserveOut,
            jTextFieldDescriptionProductReserveOut,
            jTextFieldBarCodeReserveOut,
            jFormattedDateRegisterReserveOut,
            jTextFieldLotProductReserveOut,
            jTextFieldQuantityRemovedReserveOut

        };
        return campo;
    }

    private static void limpaCampos() {

        JTextField[] campo = campos();

        for (JTextField campo1 : campo) {
            if (jTextFieldCodeReserveOut.getText().isEmpty()) {

                if ("Description".equals(campo1.getName()) || "BarCode".equals(campo1.getName())) {
                } else {
                    campo1.setText("");
                }
            } else {

                if ("Description".equals(campo1.getName()) || "BarCode".equals(campo1.getName())) {
                } else {
                    campo1.setText("");
                }
            }
        }

    }

    private void activeCampos(boolean b) {

        JTextField[] campo = campos();

        for (int i = 1; i < campo.length; i++) {

            campo[i].setEnabled(b);
            jButtonSaveReserveOut.setEnabled(b);
            jComboBoxDescriptionScrap.setEnabled(b);
            jTextArea1.setEnabled(b);
        }

    }

    private void formatUpperCase(JTextField jTextField) {
        jTextField.setText(jTextField.getText().toUpperCase());
    }

    private void functionLaunchReserveOut() {
        
        if (!jTextFieldBarCodeReserveOut.getText().isEmpty()) {
            
            if (!jTextFieldBarCodeReserveOut.getText().isEmpty()) {
                
                System.err.println("ID reserveOut::"+reserveOut.getIdReserveOut());
                if (ClassReserveOut.newLaunchReserveOut(reserveOut)) {

                    JOptionPane.showMessageDialog(null, "Baixa de estoque lançada com sucesso.", "Menssagem", JOptionPane.INFORMATION_MESSAGE);

                    activeCampos(false);
                    limpaCampos();

                    jButtonCancelNewResereveOut.setEnabled(false);
                    jMenuItemCancelLaunchReserveOut.setEnabled(false);

                    jButtonNewReserveOut.setEnabled(true);
                    jMenuItemNewLaunchReserveOut.setEnabled(true);

                    jButtonDeleteReserveOut.setEnabled(false);
                    jMenuItemDeleteLaunchReserveOut.setEnabled(false);

                    jTableReserveOut.requestFocus(true);

                    fnOpenWindow();

                } else {
                    JOptionPane.showMessageDialog(null, "Erro ao atualizar estoque.", "Aviso!", JOptionPane.INFORMATION_MESSAGE);
                    jTextFieldBarCodeReserveOut.requestFocus(true);
                }
            }

        }
    }

    private void functionNewReserveOut() {
        activeCampos(true);
        limpaCampos();
        jButtonNewReserveOut.setEnabled(false);
        jMenuItemNewLaunchReserveOut.setEnabled(false);

        jButtonDeleteReserveOut.setEnabled(false);
        jMenuItemDeleteLaunchReserveOut.setEnabled(false);

        jButtonCancelNewResereveOut.setEnabled(true);
        jMenuItemCancelLaunchReserveOut.setEnabled(true);

        jFormattedDateRegisterReserveOut.setText(DateActual.setDate(new Date(), "dd/MM/yyyy"));
        jTextFieldQuantityRemovedReserveOut.requestFocus(true);
        jTextFieldQuantityRemovedReserveOut.setSelectionStart(0);
        jTextFieldQuantityRemovedReserveOut.setSelectionEnd(jTextFieldQuantityRemovedReserveOut.getText().length());
        jTextFieldCodeReserveOut.setText(ClassCodRandon.codeGeneratorReserveIn());
       
    }

    private void functionDeleteLaunchReserve() {
        
        if (!jTextFieldCodeReserveOut.getText().isEmpty()) {
            
            if (JOptionPane.showConfirmDialog(null, "Atenção ao excluir este lançamento o estoque sera automaticamente atualizado,\n"
                    + "diminuindo o valor excluido do estoque virtual.\n"
                    + "Deseja realmente excluir este cadastro?\n", "Alerta!", JOptionPane.YES_NO_OPTION) == 0) {
                System.err.println("ID RESERVE OUT ON DELETE:::::>>>>" + argIdReserveOUT);
                if (ClassReserveOut.deleteReserveOut(reserveOut)){
                    
                 JOptionPane.showMessageDialog(null, "Baixa de estoque removida com sucesso.", "Menssagem", JOptionPane.INFORMATION_MESSAGE);       
                    
                } else {
                    
                        JOptionPane.showMessageDialog(null, "Erro ao atualizar estoque.", "ERRO!", JOptionPane.INFORMATION_MESSAGE);
                   
                }
                    fnOpenWindow();

                    limpaCampos();
                    jButtonDeleteReserveOut.setEnabled(false);
                    activeCampos(false);
                    jButtonNewReserveOut.setEnabled(true);

                }
            }
        }
    

    private void functionCancelLaunchReserve() {
        activeCampos(false);
        limpaCampos();
        jButtonNewReserveOut.setEnabled(true);
        jMenuItemCancelLaunchReserveOut.setEnabled(true);
        jTableReserveOut.requestFocus(true);
    }

    public void functionPrintRegisterReserveOut() {
        if (!jTextFieldBarCodeReserveOut.getText().isEmpty()) {

            ImprimirRelatorio_cupom imp = new ImprimirRelatorio_cupom();
            Object[] valPar2 = {jTextFieldBarCodeReserveOut.getText()};
            Object[] par2 = {"PAR_ARG"};
            try {
                imp.visualizarRelatorio(valPar2, par2, "reportRegisterReserveOut.jasper", true);
            } catch (Exception ex) { System.err.println("ERROR::" + ex);
            //newXML.generateLog(ex.toString());
                Logger.getLogger(JDialogReserveOut.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void functionViewDialog() {
        Dimension tamanhoDialogMain = getSize();
        Dimension tamanhoDialog1 = jDialogLots.getPreferredSize();
        Point loc = getLocation();
        jDialogLots.setLocation(
                (tamanhoDialogMain.width - tamanhoDialog1.width) / 2 + loc.x,
                (tamanhoDialogMain.height - tamanhoDialog1.height) / 2 + loc.y);
        jDialogLots.setModal(true);
        jDialogLots.pack();
        jDialogLots.setVisible(true);
    }

    private void fnOpenWindow() {
        
         barCodeReserveOut = (String) ReserveOut.getBean();

        try {
            modelJtableReserveOut = new MyModelJtableReserveOUT(barCodeReserveOut);
            jTableReserveOut.setModel(modelJtableReserveOut);
        } catch (Exception ex) {
             System.err.println("ERROR::" + ex);
            ////newXML.generateLog(ex.toString());
        }

        setReserveOut(ClassReserveOut.consultProductReserveOut());

    }

    private boolean fnContainsLotRegister(String text) {
       
        boolean ret = false;
        
        for(int i = 0; i < jTableLots.getModel().getRowCount(); i++){
            
           String arg = jTableLots.getValueAt(i, 0).toString();
            if(arg.equals(text)){
             
              valueRemainder = Double.parseDouble(jTableLots.getValueAt(0, 5).toString()) - Double.parseDouble(jTableLots.getValueAt(0, 6).toString());
                ret = true;
            }                 
        }
        
        return ret;
    }

    class MyCellRenderer extends DefaultTableCellRenderer {

        public MyCellRenderer() {
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean selected, boolean focused,
                int row, int column) {
            super.getTableCellRendererComponent(table, value, selected, focused, row, column);

            Color bg;

            if (!selected) {
                bg = ((row % 2 == 0)
                        ? alternateColor
                        : whiteColor);
            } else {
                bg = selectedColor;
            }

            if (jTableReserveOut.getRowCount() > 0) {

                jTableReserveOut.getColumnModel().getColumn(0).setPreferredWidth(50);// define a largura da coluna
                jTableReserveOut.getColumnModel().getColumn(1).setPreferredWidth(80);
                jTableReserveOut.getColumnModel().getColumn(2).setPreferredWidth(50);
                jTableReserveOut.getColumnModel().getColumn(3).setPreferredWidth(110);
                jTableReserveOut.getColumnModel().getColumn(4).setPreferredWidth(50);

            }
            if (jTableLots.getRowCount() > 0) {

                jTableLots.getColumnModel().getColumn(0).setPreferredWidth(80);// define a largura da coluna
                jTableLots.getColumnModel().getColumn(1).setPreferredWidth(80);
                jTableLots.getColumnModel().getColumn(2).setPreferredWidth(80);
                jTableLots.getColumnModel().getColumn(3).setPreferredWidth(80);
                jTableLots.getColumnModel().getColumn(4).setPreferredWidth(80);
                jTableLots.getColumnModel().getColumn(5).setPreferredWidth(80);
                jTableLots.getColumnModel().getColumn(6).setPreferredWidth(80);
                jTableLots.getColumnModel().getColumn(7).setPreferredWidth(80);

            }

            //jTableItens.setShowHorizontalLines(false);
            //jTableItens.setShowVerticalLines(false);
            setBackground(bg);
            setForeground(selected
                    ? Color.black
                    : new java.awt.Color(102, 102, 102));
            setHorizontalAlignment(SwingConstants.CENTER);

            /*
             *  if (value instanceof ImageIcon) {
             * setIcon((ImageIcon) value);
             * setText("");
             * } else
             * setIcon(null);
             */
            return this;
        }
    }
}
