/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.

 */
package view;

import action.BeanCodeSale;
import action.Sale;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import model.ClassSale;
import testes.PrintCoupon;
import util.JTextFieldTools;
import static view.JFrameSale_1.*;
import static view.JDialogOptionsCancelCouponIten.*;
import xml.NewXML;

/**
 *
 * @author Java
 */
public class JDialogCancelItem extends javax.swing.JDialog {

    private static final DecimalFormat v = new DecimalFormat("0.00");
    private static final NewXML newXML = new NewXML();

    /**
     * Creates new form JDialogCancelItem
     *
     * @param parent
     * @param modal
     */
    public JDialogCancelItem(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldBarCodDetailCancelIten = new javax.swing.JTextField();
        jTextFieldQuantityDetailCancelIten = new javax.swing.JTextField();
        jTextFieldNumberItemDetailCancelIten = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Identifique o item pelo N° pu ´codigo de barra");
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTextFieldBarCodDetailCancelIten.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldBarCodDetailCancelIten.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldBarCodDetailCancelIten.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Código Barra:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(153, 153, 153))); // NOI18N
        jTextFieldBarCodDetailCancelIten.setFocusCycleRoot(true);
        jTextFieldBarCodDetailCancelIten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBarCodDetailCancelItenActionPerformed(evt);
            }
        });
        jTextFieldBarCodDetailCancelIten.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldBarCodDetailCancelItenKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBarCodDetailCancelItenKeyReleased(evt);
            }
        });

        jTextFieldQuantityDetailCancelIten.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldQuantityDetailCancelIten.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldQuantityDetailCancelIten.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldQuantityDetailCancelIten.setText("1,00");
        jTextFieldQuantityDetailCancelIten.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Quantidade:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(153, 153, 153))); // NOI18N
        jTextFieldQuantityDetailCancelIten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldQuantityDetailCancelItenActionPerformed(evt);
            }
        });
        jTextFieldQuantityDetailCancelIten.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldQuantityDetailCancelItenFocusGained(evt);
            }
        });
        jTextFieldQuantityDetailCancelIten.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQuantityDetailCancelItenKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldQuantityDetailCancelItenKeyReleased(evt);
            }
        });

        jTextFieldNumberItemDetailCancelIten.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldNumberItemDetailCancelIten.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldNumberItemDetailCancelIten.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldNumberItemDetailCancelIten.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "N° Item:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(153, 153, 153))); // NOI18N
        jTextFieldNumberItemDetailCancelIten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNumberItemDetailCancelItenActionPerformed(evt);
            }
        });
        jTextFieldNumberItemDetailCancelIten.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNumberItemDetailCancelItenKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNumberItemDetailCancelItenKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldBarCodDetailCancelIten, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldQuantityDetailCancelIten, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldNumberItemDetailCancelIten, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jTextFieldBarCodDetailCancelIten, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldQuantityDetailCancelIten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNumberItemDetailCancelIten, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNumberItemDetailCancelItenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNumberItemDetailCancelItenActionPerformed

        if (jTextFieldNumberItemDetailCancelIten.getText().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Digite o número do item a ser cancelado.", "Aviso", JOptionPane.INFORMATION_MESSAGE);

        } else {

            if (ClassSale.conteinItenCancel(codeCoupon, jTextFieldBarCodDetailCancelIten.getText(), Double.parseDouble(jTextFieldQuantityDetailCancelIten.getText().replace(",", ".")), Integer.parseInt(jTextFieldNumberItemDetailCancelIten.getText()), true)) {

                if (ClassSale.cancelProduct(codeCoupon, true, -Double.parseDouble(jTextFieldQuantityDetailCancelIten.getText().replace(",", ".")), codeProductCoupon, numberItenCancel, true)) {

                    ClassSale.totalSale(codeCoupon);           
                    jTextItens.setText(String.valueOf(jTableItens.getRowCount()));
                    jTextValorTotalOperacao.setText(v.format(Sale.getPriceTotal()));
                    jTextTotalItens.setText(String.valueOf(Sale.getQuantityTotal()));
                    jTextProductCode.setText("");
                    jTextValorUnitario.setText("0,00");
                    Sale.setPriceTotal(Double.parseDouble(jTextValorTotalOperacao.getText().replace(",", ".")));
                    jLabelDescricaoItem.setText("");
                    isPrintLineCanceled = true;
                    this.dispose();

                }

                //se o produto nao for encontrado emite este aviso    
            } else {

                JOptionPane.showMessageDialog(null, "Este produto não esta na lista ou a quantidade esta incorreta, verifique.", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                jTextFieldBarCodDetailCancelIten.setText("");
                jTextFieldQuantityDetailCancelIten.requestFocus(true);
                jTextFieldQuantityDetailCancelIten.setSelectionStart(0);
                jTextFieldQuantityDetailCancelIten.setSelectionEnd(jTextQuantidade.getText().length());
                jTextFieldNumberItemDetailCancelIten.setText("");

            }
        }
    }//GEN-LAST:event_jTextFieldNumberItemDetailCancelItenActionPerformed

    private void jTextFieldBarCodDetailCancelItenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBarCodDetailCancelItenKeyReleased
        JTextFieldTools.validarValor(jTextFieldBarCodDetailCancelIten);
    }//GEN-LAST:event_jTextFieldBarCodDetailCancelItenKeyReleased

    private void jTextFieldBarCodDetailCancelItenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBarCodDetailCancelItenKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            jTextFieldQuantityDetailCancelIten.requestFocus(true);
        }
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            jTextFieldNumberItemDetailCancelIten.requestFocus(true);
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            jTextFieldNumberItemDetailCancelIten.requestFocus(true);
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jTextFieldQuantityDetailCancelIten.requestFocus(true);
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            dispose();
        }
    }//GEN-LAST:event_jTextFieldBarCodDetailCancelItenKeyPressed

    private void jTextFieldBarCodDetailCancelItenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBarCodDetailCancelItenActionPerformed

        if (ClassSale.conteinItenCancel(codeCoupon, jTextFieldBarCodDetailCancelIten.getText(), Double.parseDouble(jTextFieldQuantityDetailCancelIten.getText().replace(",", ".")), 0, false)) {

            if (ClassSale.cancelProduct(codeCoupon, true, -Double.parseDouble(jTextFieldQuantityDetailCancelIten.getText().replace(",", ".")), codeProductCoupon, numberItenCancel, false)) {
                
                jTextItens.setText(String.valueOf(jTableItens.getRowCount()));
                jTextValorTotalOperacao.setText(v.format(Sale.getPriceTotal()));
                jTextTotalItens.setText(String.valueOf(Sale.getQuantityTotal()));
                jTextProductCode.setText("");
                jTextValorUnitario.setText("0,00");
                Sale.setPriceTotal(Double.parseDouble(jTextValorTotalOperacao.getText().replace(",", ".")));
                jLabelDescricaoItem.setText("");
                isPrintLineCanceled = true;
                JOptionPane.showMessageDialog(this, "Item excluido com sucesso.","UPMarket diz:",JOptionPane.INFORMATION_MESSAGE);
                this.dispose();

                //new JFrameSale_1().refreshTable();
            }

            //se o produto nao for encontrado emite este aviso    
        } else {

            JOptionPane.showMessageDialog(null, "Este produto não esta na lista ou a quantidade esta incorreta, verifique.", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldBarCodDetailCancelIten.setText("");
            jTextFieldQuantityDetailCancelIten.setText("1,00");
            //isCancelProduct = false;
        }
    }//GEN-LAST:event_jTextFieldBarCodDetailCancelItenActionPerformed

    private void jTextFieldQuantityDetailCancelItenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldQuantityDetailCancelItenActionPerformed
        jTextFieldBarCodDetailCancelIten.requestFocus(true);
    }//GEN-LAST:event_jTextFieldQuantityDetailCancelItenActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if (isPrintLineCanceled && isPrintService) {
            printCancelIten(String.valueOf(numberItenCancel), valueItenCanceled);
            isPrintLineCanceled = false;

        }
    }//GEN-LAST:event_formWindowClosed

    private void jTextFieldNumberItemDetailCancelItenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNumberItemDetailCancelItenKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            jTextFieldBarCodDetailCancelIten.requestFocus(true);
        }
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            jTextFieldQuantityDetailCancelIten.requestFocus(true);
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            jTextFieldBarCodDetailCancelIten.requestFocus(true);
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jTextFieldBarCodDetailCancelIten.requestFocus(true);
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            this.dispose();
        }
    }//GEN-LAST:event_jTextFieldNumberItemDetailCancelItenKeyPressed

    private void jTextFieldQuantityDetailCancelItenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantityDetailCancelItenKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            jTextFieldNumberItemDetailCancelIten.requestFocus(true);
        }
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            jTextFieldBarCodDetailCancelIten.requestFocus(true);
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            jTextFieldBarCodDetailCancelIten.requestFocus(true);
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jTextFieldNumberItemDetailCancelIten.requestFocus(true);
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            this.dispose();
        }
    }//GEN-LAST:event_jTextFieldQuantityDetailCancelItenKeyPressed

    private void jTextFieldQuantityDetailCancelItenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantityDetailCancelItenKeyReleased
        JTextFieldTools.formatJTextNumber(jTextFieldQuantityDetailCancelIten);
    }//GEN-LAST:event_jTextFieldQuantityDetailCancelItenKeyReleased

    private void jTextFieldNumberItemDetailCancelItenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNumberItemDetailCancelItenKeyReleased
        JTextFieldTools.validarValor(jTextFieldNumberItemDetailCancelIten);
    }//GEN-LAST:event_jTextFieldNumberItemDetailCancelItenKeyReleased

    private void jTextFieldQuantityDetailCancelItenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldQuantityDetailCancelItenFocusGained
        jTextFieldQuantityDetailCancelIten.setText("");
    }//GEN-LAST:event_jTextFieldQuantityDetailCancelItenFocusGained

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if(BeanCodeSale.isIsCancelItenDirect()){
            
            jTextFieldBarCodDetailCancelIten.setText(BeanCodeSale.getBarCode());
            jTextFieldNumberItemDetailCancelIten.setText(String.valueOf(BeanCodeSale.getNumIten()));
            jTextFieldQuantityDetailCancelIten.setText(String.valueOf(BeanCodeSale.getQtdIten()));
            
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            System.err.println("ERROR::" + ex);
            //newXML.generateLog(ex.toString());
            java.util.logging.Logger.getLogger(JDialogCancelItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JDialogCancelItem dialog = new JDialogCancelItem(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextFieldBarCodDetailCancelIten;
    private javax.swing.JTextField jTextFieldNumberItemDetailCancelIten;
    private javax.swing.JTextField jTextFieldQuantityDetailCancelIten;
    // End of variables declaration//GEN-END:variables

    private void printCancelIten(String numberIten, double valueItenCanceled) {

        PrintCoupon pc = new PrintCoupon();
        String numberItemStr;
        if (String.valueOf(numberIten).length() == 1) {
            numberItemStr = "00" + String.valueOf(numberIten);
        } else if (String.valueOf(numberIten).length() == 2) {
            numberItemStr = "0" + String.valueOf(numberIten);
        } else {
            numberItemStr = String.valueOf(numberIten);
        }
        switch (v.format(valueItenCanceled * -1).length()) {

            case 5:
                pc.print("\n       CANCELAMENTO ITEM: " + numberItemStr + "             " + v.format(valueItenCanceled * -1).replace(".", ",") + "$");
                break;
            case 6:
                pc.print("\n       CANCELAMENTO ITEM: " + numberItemStr + "            " + v.format(valueItenCanceled * -1).replace(".", ",") + "$");
                break;
            case 7:
                pc.print("\n       CANCELAMENTO ITEM: " + numberItemStr + "           " + v.format(valueItenCanceled * -1).replace(".", ",") + "$");
                break;
            case 8:
                pc.print("\n       CANCELAMENTO ITEM: " + numberItemStr + "          " + v.format(valueItenCanceled * -1).replace(".", ",") + "$");
                break;

        }
    }
}
