/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import action.BeanVendorTransition;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.lang.reflect.Method;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.ClassCodRandon;
import model.ClassVendor;
import reports.ImprimirRelatorio_cupom;
import util.Mascaras;
import xml.NewXML;

/**
 *
 * @author CPU
 */
public class JDialogRegisterVendor_3_1 extends javax.swing.JDialog {

    public static String idVendor = null;
    private static boolean isView;
    private final Color whiteColor = Color.white;                 // new Color(254, 254, 254);
    private final Color alternateColor = new Color(227, 227, 227);    // Color.lightGray;//new Color(204, 204, 204);
    private final Color selectedColor = Color.yellow;
    private MyModelJtableRegisterVendor tableRegisterVendor;
    private MyModelJtableProductsVendor jtableVendorProduct;
    private boolean isNewVendor = false;
    private static final NewXML newXML = new NewXML();

    /**
     * Creates new form JDialogVendor
     *
     * @param parent
     * @param modal
     */
    public JDialogRegisterVendor_3_1(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogSearchAdvanced = new javax.swing.JDialog();
        textBarCodeAdvancedSearch = new javax.swing.JTextField();
        textValueAdvancedSearch = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableAdvancedSearch = new javax.swing.JTable();
        jLabel32 = new javax.swing.JLabel();
        jDialogProductsThisVendor = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableProductsThisVendor = new javax.swing.JTable();
        jPanelBackgroundJdialogVendor = new javax.swing.JPanel();
        jPanelInformationVendor = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldNameVendor = new javax.swing.JTextField();
        jTextFieldCodVendor = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextFieldUnityFederal = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextFieldContactVendor = new javax.swing.JTextField();
        jTextFieldCityVendor = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextFieldAddressVendor = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jComboProductsVendor = new javax.swing.JComboBox(ClassVendor.allProductsVendor(idVendor).toArray());
        jLabel1 = new javax.swing.JLabel();
        jTextFieldEmailVendor = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jFormattedTextPhoneVendor = new javax.swing.JFormattedTextField(Mascaras.maskFone());
        jLabel27 = new javax.swing.JLabel();
        jFormattedTexInscritionStateVendor = new javax.swing.JFormattedTextField(Mascaras.maskIE());
        jFormattedTextCnpjVendor = new javax.swing.JFormattedTextField(Mascaras.maskCNPJ());
        jFormattedTextCelularVendor = new javax.swing.JFormattedTextField(Mascaras.maskCel());
        jPanelTableVendor = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVendor = new javax.swing.JTable();
        jButtonSaveVendor = new javax.swing.JButton();
        jButtonAddNewProductVendor = new javax.swing.JButton();
        jButtonEditVendor = new javax.swing.JButton();
        jButtonNewVendor = new javax.swing.JButton();
        jButtonDeleteVendor = new javax.swing.JButton();
        jButtonExitJdialogVendor = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemPrintRegisterVendor = new javax.swing.JMenuItem();
        jMenuItemsSearchVendor = new javax.swing.JMenuItem();
        jMenuItemSViewProductsVendor = new javax.swing.JMenuItem();
        jMenuItemSaveVendor = new javax.swing.JMenuItem();
        jMenuItemAddRemoveVendor = new javax.swing.JMenuItem();
        jMenuItemEditVendor = new javax.swing.JMenuItem();
        jMenuItemNewVendor = new javax.swing.JMenuItem();
        jMenuItemDeleteVendor = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();

        jDialogSearchAdvanced.setTitle("Busca Avançada de Fornecedor");
        jDialogSearchAdvanced.setType(java.awt.Window.Type.POPUP);
        jDialogSearchAdvanced.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                jDialogSearchAdvancedWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                jDialogSearchAdvancedWindowClosed(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                jDialogSearchAdvancedWindowDeactivated(evt);
            }
        });

        textBarCodeAdvancedSearch.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        textBarCodeAdvancedSearch.setForeground(new java.awt.Color(51, 51, 51));
        textBarCodeAdvancedSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBarCodeAdvancedSearchActionPerformed(evt);
            }
        });
        textBarCodeAdvancedSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textBarCodeAdvancedSearchFocusGained(evt);
            }
        });
        textBarCodeAdvancedSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textBarCodeAdvancedSearchKeyReleased(evt);
            }
        });

        textValueAdvancedSearch.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        textValueAdvancedSearch.setForeground(new java.awt.Color(51, 51, 51));
        textValueAdvancedSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textValueAdvancedSearchActionPerformed(evt);
            }
        });
        textValueAdvancedSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textValueAdvancedSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                textValueAdvancedSearchFocusLost(evt);
            }
        });
        textValueAdvancedSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textValueAdvancedSearchKeyReleased(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(51, 51, 51));
        jLabel28.setText("Buscar por Nome do Fornecedor:");

        jTableAdvancedSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableAdvancedSearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableAdvancedSearch.setRowHeight(22);
        jTableAdvancedSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAdvancedSearchMouseClicked(evt);
            }
        });
        jTableAdvancedSearch.setDefaultRenderer(Object.class, new MyCellRenderer());
        jScrollPane5.setViewportView(jTableAdvancedSearch);

        jLabel32.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(51, 51, 51));
        jLabel32.setText("Buscar por código do Fornecedor :");

        javax.swing.GroupLayout jDialogSearchAdvancedLayout = new javax.swing.GroupLayout(jDialogSearchAdvanced.getContentPane());
        jDialogSearchAdvanced.getContentPane().setLayout(jDialogSearchAdvancedLayout);
        jDialogSearchAdvancedLayout.setHorizontalGroup(
            jDialogSearchAdvancedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogSearchAdvancedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogSearchAdvancedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                    .addComponent(textValueAdvancedSearch)
                    .addGroup(jDialogSearchAdvancedLayout.createSequentialGroup()
                        .addGroup(jDialogSearchAdvancedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textBarCodeAdvancedSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jDialogSearchAdvancedLayout.setVerticalGroup(
            jDialogSearchAdvancedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogSearchAdvancedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textValueAdvancedSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel32)
                .addGap(6, 6, 6)
                .addComponent(textBarCodeAdvancedSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addContainerGap())
        );

        jDialogProductsThisVendor.setTitle("Produtos Fornecidos");
        jDialogProductsThisVendor.setType(java.awt.Window.Type.POPUP);
        jDialogProductsThisVendor.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                jDialogProductsThisVendorWindowActivated(evt);
            }
        });

        jTableProductsThisVendor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableProductsThisVendor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableProductsThisVendor.setRowHeight(22);
        jTableProductsThisVendor.setDefaultRenderer(Object.class, new MyCellRenderer());
        jScrollPane2.setViewportView(jTableProductsThisVendor);

        javax.swing.GroupLayout jDialogProductsThisVendorLayout = new javax.swing.GroupLayout(jDialogProductsThisVendor.getContentPane());
        jDialogProductsThisVendor.getContentPane().setLayout(jDialogProductsThisVendorLayout);
        jDialogProductsThisVendorLayout.setHorizontalGroup(
            jDialogProductsThisVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogProductsThisVendorLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 916, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDialogProductsThisVendorLayout.setVerticalGroup(
            jDialogProductsThisVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Fornecedores");
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.BorderLayout());

        jPanelInformationVendor.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel17.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setText("Código Fornecedor: ");

        jTextFieldNameVendor.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldNameVendor.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldNameVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameVendorActionPerformed(evt);
            }
        });
        jTextFieldNameVendor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNameVendorKeyReleased(evt);
            }
        });

        jTextFieldCodVendor.setEditable(false);
        jTextFieldCodVendor.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldCodVendor.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldCodVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodVendorActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 51, 51));
        jLabel18.setText("Nome Fornecedor: ");

        jLabel20.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 51, 51));
        jLabel20.setText("UF");

        jTextFieldUnityFederal.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldUnityFederal.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldUnityFederal.setText("RS");
        jTextFieldUnityFederal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUnityFederalActionPerformed(evt);
            }
        });
        jTextFieldUnityFederal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldUnityFederalKeyReleased(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 51, 51));
        jLabel21.setText("CNPJ Fornecedor: ");

        jLabel22.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(51, 51, 51));
        jLabel22.setText("Fone Fornecedor: ");

        jLabel23.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(51, 51, 51));
        jLabel23.setText("Contato Fornecedor: ");

        jTextFieldContactVendor.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldContactVendor.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldContactVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldContactVendorActionPerformed(evt);
            }
        });
        jTextFieldContactVendor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldContactVendorKeyReleased(evt);
            }
        });

        jTextFieldCityVendor.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldCityVendor.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldCityVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCityVendorActionPerformed(evt);
            }
        });
        jTextFieldCityVendor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldCityVendorKeyReleased(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(51, 51, 51));
        jLabel24.setText("Cidade Fornecedor: ");

        jTextFieldAddressVendor.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldAddressVendor.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldAddressVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAddressVendorActionPerformed(evt);
            }
        });
        jTextFieldAddressVendor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldAddressVendorKeyReleased(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(51, 51, 51));
        jLabel25.setText("Endereço Fornecedor: ");

        jLabel19.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 51, 51));
        jLabel19.setText("Insc. Est. Fornecedor: ");

        jComboProductsVendor.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jComboProductsVendor.setForeground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Produtos Fornecidos: ");

        jTextFieldEmailVendor.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jTextFieldEmailVendor.setForeground(new java.awt.Color(51, 51, 51));
        jTextFieldEmailVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmailVendorActionPerformed(evt);
            }
        });
        jTextFieldEmailVendor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldEmailVendorKeyReleased(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(51, 51, 51));
        jLabel26.setText("Email Fornecedor: ");

        jFormattedTextPhoneVendor.setForeground(new java.awt.Color(51, 51, 51));
        jFormattedTextPhoneVendor.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jFormattedTextPhoneVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextPhoneVendorActionPerformed(evt);
            }
        });
        jFormattedTextPhoneVendor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextPhoneVendorFocusLost(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(51, 51, 51));
        jLabel27.setText("Cel. Fornecedor: ");

        jFormattedTexInscritionStateVendor.setForeground(new java.awt.Color(51, 51, 51));
        jFormattedTexInscritionStateVendor.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jFormattedTexInscritionStateVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTexInscritionStateVendorActionPerformed(evt);
            }
        });

        jFormattedTextCnpjVendor.setForeground(new java.awt.Color(51, 51, 51));
        jFormattedTextCnpjVendor.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jFormattedTextCnpjVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextCnpjVendorActionPerformed(evt);
            }
        });

        jFormattedTextCelularVendor.setForeground(new java.awt.Color(51, 51, 51));
        jFormattedTextCelularVendor.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jFormattedTextCelularVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextCelularVendorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelInformationVendorLayout = new javax.swing.GroupLayout(jPanelInformationVendor);
        jPanelInformationVendor.setLayout(jPanelInformationVendorLayout);
        jPanelInformationVendorLayout.setHorizontalGroup(
            jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jTextFieldCodVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextFieldNameVendor)))
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jFormattedTexInscritionStateVendor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jFormattedTextCnpjVendor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addGap(120, 120, 120))
                            .addComponent(jTextFieldContactVendor)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInformationVendorLayout.createSequentialGroup()
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextFieldAddressVendor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jTextFieldUnityFederal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jComboProductsVendor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldEmailVendor)
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextFieldCityVendor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jFormattedTextPhoneVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addGap(40, 40, 40))
                            .addComponent(jFormattedTextCelularVendor))))
                .addContainerGap())
        );
        jPanelInformationVendorLayout.setVerticalGroup(
            jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCodVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(36, 36, 36))
                    .addComponent(jTextFieldNameVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelInformationVendorLayout.createSequentialGroup()
                            .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel21)
                                .addComponent(jLabel19))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jFormattedTextCnpjVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jFormattedTexInscritionStateVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldContactVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCityVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFormattedTextPhoneVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelInformationVendorLayout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFormattedTextCelularVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(12, 12, 12)
                .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInformationVendorLayout.createSequentialGroup()
                        .addGroup(jPanelInformationVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldAddressVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextFieldUnityFederal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldEmailVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboProductsVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTableVendor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableVendor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableVendor.setRowHeight(22);
        jTableVendor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVendorMouseClicked(evt);
            }
        });
        jTableVendor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableVendorKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableVendor);
        jTableVendor.setDefaultRenderer(Object.class, new MyCellRenderer());

        jButtonSaveVendor.setText("Salvar [Ctrl+S]");
        jButtonSaveVendor.setEnabled(false);
        jButtonSaveVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveVendorActionPerformed(evt);
            }
        });

        jButtonAddNewProductVendor.setText("Adicionar/ Remover Produto [Ctrl+R]");
        jButtonAddNewProductVendor.setEnabled(false);
        jButtonAddNewProductVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddNewProductVendorActionPerformed(evt);
            }
        });

        jButtonEditVendor.setText("Editar [Ctlr+E]");
        jButtonEditVendor.setEnabled(false);
        jButtonEditVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditVendorActionPerformed(evt);
            }
        });

        jButtonNewVendor.setText("Novo [Ctrl+N]");
        jButtonNewVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewVendorActionPerformed(evt);
            }
        });

        jButtonDeleteVendor.setText("Excluir [Del]");
        jButtonDeleteVendor.setEnabled(false);
        jButtonDeleteVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteVendorActionPerformed(evt);
            }
        });

        jButtonExitJdialogVendor.setText("Sair[Esc]");
        jButtonExitJdialogVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitJdialogVendorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTableVendorLayout = new javax.swing.GroupLayout(jPanelTableVendor);
        jPanelTableVendor.setLayout(jPanelTableVendorLayout);
        jPanelTableVendorLayout.setHorizontalGroup(
            jPanelTableVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanelTableVendorLayout.createSequentialGroup()
                .addComponent(jButtonSaveVendor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAddNewProductVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonEditVendor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonNewVendor, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDeleteVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonExitJdialogVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelTableVendorLayout.setVerticalGroup(
            jPanelTableVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTableVendorLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelTableVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSaveVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonNewVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonExitJdialogVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDeleteVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEditVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAddNewProductVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelBackgroundJdialogVendorLayout = new javax.swing.GroupLayout(jPanelBackgroundJdialogVendor);
        jPanelBackgroundJdialogVendor.setLayout(jPanelBackgroundJdialogVendorLayout);
        jPanelBackgroundJdialogVendorLayout.setHorizontalGroup(
            jPanelBackgroundJdialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBackgroundJdialogVendorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBackgroundJdialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelInformationVendor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelTableVendor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelBackgroundJdialogVendorLayout.setVerticalGroup(
            jPanelBackgroundJdialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBackgroundJdialogVendorLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanelInformationVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelTableVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanelBackgroundJdialogVendor, java.awt.BorderLayout.CENTER);

        jMenu1.setText("Arquivo");

        jMenuItemPrintRegisterVendor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemPrintRegisterVendor.setText("Imprimir Cartão Fornecedor");
        jMenuItemPrintRegisterVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPrintRegisterVendorActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemPrintRegisterVendor);

        jMenuItemsSearchVendor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemsSearchVendor.setText("Buscar Fornecedor");
        jMenuItemsSearchVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemsSearchVendorActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemsSearchVendor);

        jMenuItemSViewProductsVendor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSViewProductsVendor.setText("Produtos Fornecidos");
        jMenuItemSViewProductsVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSViewProductsVendorActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSViewProductsVendor);

        jMenuItemSaveVendor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSaveVendor.setText("Salvar Vendedor");
        jMenuItemSaveVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveVendorActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSaveVendor);

        jMenuItemAddRemoveVendor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemAddRemoveVendor.setText("Adicionar/Remover Produto");
        jMenuItemAddRemoveVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAddRemoveVendorActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemAddRemoveVendor);

        jMenuItemEditVendor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemEditVendor.setText("Editar Cadastro");
        jMenuItemEditVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEditVendorActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemEditVendor);

        jMenuItemNewVendor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNewVendor.setText("Novo Vendedor");
        jMenuItemNewVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNewVendorActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemNewVendor);

        jMenuItemDeleteVendor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        jMenuItemDeleteVendor.setText("Apagar Vendedor");
        jMenuItemDeleteVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteVendorActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemDeleteVendor);

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItemExit.setText("Sair");
        jMenuItemExit.setToolTipText("");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemExit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNameVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNameVendorActionPerformed
        jFormattedTexInscritionStateVendor.requestFocus(true);
    }//GEN-LAST:event_jTextFieldNameVendorActionPerformed

    private void jTextFieldNameVendorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNameVendorKeyReleased
        formatUpperCase(jTextFieldNameVendor);
    }//GEN-LAST:event_jTextFieldNameVendorKeyReleased

    private void jTextFieldUnityFederalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUnityFederalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldUnityFederalActionPerformed

    private void jTextFieldUnityFederalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldUnityFederalKeyReleased
        formatUpperCase(jTextFieldUnityFederal);
    }//GEN-LAST:event_jTextFieldUnityFederalKeyReleased

    private void jTextFieldContactVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldContactVendorActionPerformed
        jTextFieldCityVendor.requestFocus(true);
    }//GEN-LAST:event_jTextFieldContactVendorActionPerformed

    private void jTextFieldContactVendorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldContactVendorKeyReleased
        formatUpperCase(jTextFieldContactVendor);
    }//GEN-LAST:event_jTextFieldContactVendorKeyReleased

    private void jTextFieldCityVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCityVendorActionPerformed
        jFormattedTextPhoneVendor.requestFocus(true);
    }//GEN-LAST:event_jTextFieldCityVendorActionPerformed

    private void jTextFieldCityVendorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCityVendorKeyReleased
        formatUpperCase(jTextFieldCityVendor);
    }//GEN-LAST:event_jTextFieldCityVendorKeyReleased

    private void jTextFieldAddressVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAddressVendorActionPerformed
        jTextFieldEmailVendor.requestFocus(true);
    }//GEN-LAST:event_jTextFieldAddressVendorActionPerformed

    private void jTextFieldAddressVendorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAddressVendorKeyReleased
        formatUpperCase(jTextFieldAddressVendor);
    }//GEN-LAST:event_jTextFieldAddressVendorKeyReleased

    private void jButtonSaveVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveVendorActionPerformed
        fnSaveVendor();
    }//GEN-LAST:event_jButtonSaveVendorActionPerformed

    private void jButtonEditVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditVendorActionPerformed
        activeCampos(true);
        jButtonSaveVendor.setEnabled(true);
        jButtonAddNewProductVendor.setEnabled(true);
        jButtonEditVendor.setEnabled(false);
        jTextFieldNameVendor.requestFocus(true);
    }//GEN-LAST:event_jButtonEditVendorActionPerformed

    private void jButtonNewVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewVendorActionPerformed
        activeCampos(true);
        limpaCampos();
        jButtonNewVendor.setEnabled(false);
        jButtonDeleteVendor.setEnabled(false);
        jButtonAddNewProductVendor.setEnabled(false);
        jButtonEditVendor.setEnabled(false);
        jTextFieldCodVendor.setText(ClassCodRandon.codeGeneratorVendor());
        isNewVendor = true;
        jTextFieldNameVendor.requestFocus(true);
    }//GEN-LAST:event_jButtonNewVendorActionPerformed

    private void jButtonDeleteVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteVendorActionPerformed
        fnDeleteVendor();
    }//GEN-LAST:event_jButtonDeleteVendorActionPerformed

    private void jButtonExitJdialogVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitJdialogVendorActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonExitJdialogVendorActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            tableRegisterVendor = new MyModelJtableRegisterVendor(null);
            jTableVendor.setModel(tableRegisterVendor);
        } catch (Exception ex) {
            System.err.println("ERROR::" + ex);
            ////newXML.generateLog(ex.toString());

        }
        activeCampos(false);
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if (idVendor != null) {

            ClassVendor.consultVendor(idVendor);
            comboValues(ClassVendor.allProductsVendor(idVendor));

        }
    }//GEN-LAST:event_formWindowActivated

    private void jButtonAddNewProductVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddNewProductVendorActionPerformed

        if (!jTextFieldCodVendor.getText().isEmpty() || !jTextFieldNameVendor.getText().isEmpty()) {

            BeanVendorTransition.setCode(idVendor);
            BeanVendorTransition.setDescription(jTextFieldNameVendor.getText());
            new JDialogProductVendor_3_2(null, true).setVisible(true);

        }
    }//GEN-LAST:event_jButtonAddNewProductVendorActionPerformed

    private void jTableVendorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVendorMouseClicked

        if (jTableVendor.getRowCount() > 0) {
            idVendor = jTableVendor.getValueAt(jTableVendor.getSelectedRow(), 0).toString();
            ClassVendor.consultVendor(idVendor);
            comboValues(ClassVendor.allProductsVendor(idVendor));
            activeCampos(false);
            jButtonDeleteVendor.setEnabled(true);
            jButtonAddNewProductVendor.setEnabled(true);
            jButtonNewVendor.setEnabled(true);
            jButtonEditVendor.setEnabled(true);
        }
        if (evt.getClickCount() == 2) {
            if (!jTextFieldCodVendor.getText().isEmpty() || !jTextFieldNameVendor.getText().isEmpty()) {

                BeanVendorTransition.setCode(idVendor);
                BeanVendorTransition.setDescription(jTextFieldNameVendor.getText());
                new JDialogProductVendor_3_2(null, true).setVisible(true);

            }
        }
    }//GEN-LAST:event_jTableVendorMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed


    }//GEN-LAST:event_formWindowClosed

    private void jTextFieldEmailVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmailVendorActionPerformed
        jButtonSaveVendor.requestFocus(true);
    }//GEN-LAST:event_jTextFieldEmailVendorActionPerformed

    private void jTextFieldEmailVendorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEmailVendorKeyReleased
        formatUpperCase(jTextFieldEmailVendor);
    }//GEN-LAST:event_jTextFieldEmailVendorKeyReleased

    private void jTableVendorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableVendorKeyPressed
        if (jTableVendor.getRowCount() > 0) {

            switch (evt.getKeyCode()) {

                case KeyEvent.VK_DOWN:
                    try {
                        String arg = jTableVendor.getValueAt(jTableVendor.getSelectedRow() + 1, 0).toString();
                        ClassVendor.consultVendor(arg);
                        jTableVendor.requestFocus(true);
                    } catch (java.lang.ArrayIndexOutOfBoundsException ex) {
                        System.err.println("ERROR::" + ex);
                        //newXML.generateLog(ex.toString());
                        String arg = jTableVendor.getValueAt(jTableVendor.getSelectedRow(), 0).toString();
                        ClassVendor.consultVendor(arg);
                        jTableVendor.requestFocus(true);
                    }

                    break;

                case KeyEvent.VK_UP:
                    try {
                        String arg = jTableVendor.getValueAt(jTableVendor.getSelectedRow() - 1, 0).toString();
                        ClassVendor.consultVendor(arg);
                    } catch (java.lang.ArrayIndexOutOfBoundsException ex) {
                        System.err.println("ERROR::" + ex);
                        //newXML.generateLog(ex.toString());
                        String arg = jTableVendor.getValueAt(jTableVendor.getSelectedRow(), 0).toString();
                        ClassVendor.consultVendor(arg);

                        jTableVendor.requestFocus(true);
                    }

                    break;

            }
        }
    }//GEN-LAST:event_jTableVendorKeyPressed

    private void jMenuItemPrintRegisterVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPrintRegisterVendorActionPerformed
        try {
            Method something
                    = this.getClass().getDeclaredMethod("fnPrintCard", new Class[0]);

            ClassLoadingMethods.loading(something, this); // Aqui enviamos o metodo doIt !  
        } catch (NoSuchMethodException | SecurityException ex) {
            System.err.println("ERROR::" + ex);
            //newXML.generateLog(ex.toString());
        }
    }//GEN-LAST:event_jMenuItemPrintRegisterVendorActionPerformed

    private void jFormattedTextPhoneVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextPhoneVendorActionPerformed
        jFormattedTextCelularVendor.requestFocus(true);
    }//GEN-LAST:event_jFormattedTextPhoneVendorActionPerformed

    private void jFormattedTexInscritionStateVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTexInscritionStateVendorActionPerformed
        jFormattedTextCnpjVendor.requestFocus(true);
    }//GEN-LAST:event_jFormattedTexInscritionStateVendorActionPerformed

    private void jFormattedTextCnpjVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextCnpjVendorActionPerformed
        jTextFieldContactVendor.requestFocus(true);
    }//GEN-LAST:event_jFormattedTextCnpjVendorActionPerformed

    private void jFormattedTextCelularVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextCelularVendorActionPerformed
        jTextFieldAddressVendor.requestFocus(true);
    }//GEN-LAST:event_jFormattedTextCelularVendorActionPerformed

    private void jMenuItemSViewProductsVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSViewProductsVendorActionPerformed
        if (!jTextFieldCodVendor.getText().isEmpty()) {
            fnOpenDialogProductsThisVendor();
        }
    }//GEN-LAST:event_jMenuItemSViewProductsVendorActionPerformed

    private void jMenuItemSaveVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveVendorActionPerformed
        fnSaveVendor();
    }//GEN-LAST:event_jMenuItemSaveVendorActionPerformed

    private void jMenuItemAddRemoveVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAddRemoveVendorActionPerformed
        if (!jTextFieldCodVendor.getText().isEmpty() || !jTextFieldNameVendor.getText().isEmpty()) {

            new JDialogProductVendor_3_2(null, true).setVisible(true);

        }
    }//GEN-LAST:event_jMenuItemAddRemoveVendorActionPerformed

    private void jMenuItemEditVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEditVendorActionPerformed
        activeCampos(true);
        jButtonSaveVendor.setEnabled(true);
        jButtonAddNewProductVendor.setEnabled(true);
        jButtonEditVendor.setEnabled(false);
        jTextFieldNameVendor.requestFocus(true);
    }//GEN-LAST:event_jMenuItemEditVendorActionPerformed

    private void jMenuItemNewVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNewVendorActionPerformed
        activeCampos(true);
        limpaCampos();
        jButtonNewVendor.setEnabled(false);
        jButtonDeleteVendor.setEnabled(false);
        jButtonAddNewProductVendor.setEnabled(false);
        jButtonEditVendor.setEnabled(false);
        jTextFieldCodVendor.setText(ClassCodRandon.codeGeneratorVendor());
        isNewVendor = true;
        jTextFieldNameVendor.requestFocus(true);
    }//GEN-LAST:event_jMenuItemNewVendorActionPerformed

    private void jMenuItemDeleteVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteVendorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemDeleteVendorActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jTextFieldCodVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodVendorActionPerformed

    }//GEN-LAST:event_jTextFieldCodVendorActionPerformed

    private void jMenuItemsSearchVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemsSearchVendorActionPerformed
        fnOpenDialogSearchVendor();
    }//GEN-LAST:event_jMenuItemsSearchVendorActionPerformed

    private void textValueAdvancedSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textValueAdvancedSearchActionPerformed
        if (!textValueAdvancedSearch.getText().isEmpty()) {

            String arg = "WHERE t.`ven_name`  LIKE '%" + textValueAdvancedSearch.getText() + "%' ORDER BY t.`ven_name`;";
            try {
                tableRegisterVendor = new MyModelJtableRegisterVendor(arg);
                jTableAdvancedSearch.setModel(tableRegisterVendor);
            } catch (Exception ex) {
                System.err.println("ERROR::" + ex);
                ////newXML.generateLog(ex.toString());
            }
        }
    }//GEN-LAST:event_textValueAdvancedSearchActionPerformed

    private void textValueAdvancedSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textValueAdvancedSearchFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_textValueAdvancedSearchFocusGained

    private void textValueAdvancedSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textValueAdvancedSearchFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_textValueAdvancedSearchFocusLost

    private void textValueAdvancedSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textValueAdvancedSearchKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_textValueAdvancedSearchKeyReleased

    private void jTableAdvancedSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAdvancedSearchMouseClicked
        if (evt.getClickCount() == 2) {
            ClassVendor.consultVendor((String) jTableAdvancedSearch.getValueAt(jTableAdvancedSearch.getSelectedRow(), 0));
            jDialogSearchAdvanced.hide();
        }
    }//GEN-LAST:event_jTableAdvancedSearchMouseClicked

    private void textBarCodeAdvancedSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBarCodeAdvancedSearchActionPerformed
        if (!textBarCodeAdvancedSearch.getText().isEmpty()) {

            String arg = "WHERE t.`idtbl_vendor`  LIKE '%" + textBarCodeAdvancedSearch.getText() + "%' ORDER BY t.`idtbl_vendor`;";
            try {
                tableRegisterVendor = new MyModelJtableRegisterVendor(arg);
                jTableAdvancedSearch.setModel(tableRegisterVendor);
            } catch (Exception ex) {
                System.err.println("ERROR::" + ex);
                ////newXML.generateLog(ex.toString());
            }

        }
    }//GEN-LAST:event_textBarCodeAdvancedSearchActionPerformed

    private void textBarCodeAdvancedSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textBarCodeAdvancedSearchFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_textBarCodeAdvancedSearchFocusGained

    private void textBarCodeAdvancedSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBarCodeAdvancedSearchKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_textBarCodeAdvancedSearchKeyReleased

    private void jDialogSearchAdvancedWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialogSearchAdvancedWindowClosed

    }//GEN-LAST:event_jDialogSearchAdvancedWindowClosed

    private void jDialogSearchAdvancedWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialogSearchAdvancedWindowActivated
        textBarCodeAdvancedSearch.requestFocus(true);
    }//GEN-LAST:event_jDialogSearchAdvancedWindowActivated

    private void jDialogSearchAdvancedWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialogSearchAdvancedWindowDeactivated
        System.err.println("ID Vendor::::" + idVendor);
        idVendor = null;
    }//GEN-LAST:event_jDialogSearchAdvancedWindowDeactivated

    private void jDialogProductsThisVendorWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialogProductsThisVendorWindowActivated
        try {
            jtableVendorProduct = new MyModelJtableProductsVendor(jTextFieldCodVendor.getText());
            jTableProductsThisVendor.setModel(jtableVendorProduct);
        } catch (Exception ex) {
            System.err.println("ERROR::" + ex);
            ////newXML.generateLog(ex.toString());

        }
    }//GEN-LAST:event_jDialogProductsThisVendorWindowActivated

    private void jFormattedTextPhoneVendorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextPhoneVendorFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextPhoneVendorFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            System.err.println("ERROR::" + ex);
            //newXML.generateLog(ex.toString());
            java.util.logging.Logger.getLogger(JDialogRegisterVendor_3_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JDialogRegisterVendor_3_1 dialog = new JDialogRegisterVendor_3_1(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddNewProductVendor;
    private javax.swing.JButton jButtonDeleteVendor;
    private javax.swing.JButton jButtonEditVendor;
    private javax.swing.JButton jButtonExitJdialogVendor;
    private javax.swing.JButton jButtonNewVendor;
    private javax.swing.JButton jButtonSaveVendor;
    public static javax.swing.JComboBox jComboProductsVendor;
    private javax.swing.JDialog jDialogProductsThisVendor;
    private javax.swing.JDialog jDialogSearchAdvanced;
    private static javax.swing.JFormattedTextField jFormattedTexInscritionStateVendor;
    private static javax.swing.JFormattedTextField jFormattedTextCelularVendor;
    private static javax.swing.JFormattedTextField jFormattedTextCnpjVendor;
    private static javax.swing.JFormattedTextField jFormattedTextPhoneVendor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemAddRemoveVendor;
    private javax.swing.JMenuItem jMenuItemDeleteVendor;
    private javax.swing.JMenuItem jMenuItemEditVendor;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemNewVendor;
    private javax.swing.JMenuItem jMenuItemPrintRegisterVendor;
    private javax.swing.JMenuItem jMenuItemSViewProductsVendor;
    private javax.swing.JMenuItem jMenuItemSaveVendor;
    private javax.swing.JMenuItem jMenuItemsSearchVendor;
    private javax.swing.JPanel jPanelBackgroundJdialogVendor;
    private javax.swing.JPanel jPanelInformationVendor;
    private javax.swing.JPanel jPanelTableVendor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTableAdvancedSearch;
    private javax.swing.JTable jTableProductsThisVendor;
    private javax.swing.JTable jTableVendor;
    private static javax.swing.JTextField jTextFieldAddressVendor;
    private static javax.swing.JTextField jTextFieldCityVendor;
    public static javax.swing.JTextField jTextFieldCodVendor;
    private static javax.swing.JTextField jTextFieldContactVendor;
    private static javax.swing.JTextField jTextFieldEmailVendor;
    public static javax.swing.JTextField jTextFieldNameVendor;
    private static javax.swing.JTextField jTextFieldUnityFederal;
    private javax.swing.JTextField textBarCodeAdvancedSearch;
    private javax.swing.JTextField textValueAdvancedSearch;
    // End of variables declaration//GEN-END:variables

    public static JTextField[] campos() {
        JTextField[] campo = {jTextFieldCodVendor, jTextFieldNameVendor, jFormattedTextCnpjVendor, jFormattedTexInscritionStateVendor, jTextFieldUnityFederal, jFormattedTextPhoneVendor, jFormattedTextCelularVendor, jTextFieldContactVendor, jTextFieldCityVendor, jTextFieldAddressVendor, jTextFieldEmailVendor};
        return campo;
    }

    private static void limpaCampos() {

        JTextField[] campo = campos();

        for (JTextField campo1 : campo) {
            campo1.setText("");
        }

    }

    private void activeCampos(boolean b) {

        JTextField[] campo = campos();

        for (int i = 1; i < campo.length; i++) {

            campo[i].setEnabled(b);
            jButtonSaveVendor.setEnabled(b);

        }

    }

    private void comboValues(List<String> list) {

        ((DefaultComboBoxModel) (jComboProductsVendor.getModel()))
                .removeAllElements();

        for (String list1 : list) {
            ((DefaultComboBoxModel) (jComboProductsVendor.getModel())).addElement(list1);
        }

    }

    private void formatUpperCase(JTextField jTextField) {
        jTextField.setText(jTextField.getText().toUpperCase());
    }

    private void fnSaveVendor() {
        if (isNewVendor) {
            if (ClassVendor.newVendor()) {

                JOptionPane.showMessageDialog(this, "Novo fornecedor cadastrado com sucesso.", "Menssagem", JOptionPane.INFORMATION_MESSAGE);
                activeCampos(false);
                jButtonNewVendor.setEnabled(true);
                isNewVendor = false;
                try {
                    tableRegisterVendor = new MyModelJtableRegisterVendor(null);
                    jTableVendor.setModel(tableRegisterVendor);
                } catch (Exception ex) {
                    System.err.println("ERROR::" + ex);
                    ////newXML.generateLog(ex.toString());
                }
                limpaCampos();
                jTableVendor.requestFocus(true);

            } else {
                JOptionPane.showMessageDialog(this, "Erro ao cadastrar o fornecedor!", "Aviso!", JOptionPane.INFORMATION_MESSAGE);
                jTextFieldNameVendor.requestFocus(true);
            }

        } else {

            if (ClassVendor.refreshVendor(jTextFieldCodVendor.getText())) {
                try {
                    tableRegisterVendor = new MyModelJtableRegisterVendor(null);
                    jTableVendor.setModel(tableRegisterVendor);
                } catch (Exception ex) {
                    System.err.println("ERROR::" + ex);
                    ////newXML.generateLog(ex.toString());
                }
                limpaCampos();
                ClassVendor.consultVendor(jTableVendor.getValueAt(0, 0).toString());
                jButtonDeleteVendor.setEnabled(true);
                activeCampos(false);
                jButtonNewVendor.setEnabled(true);
                jButtonEditVendor.setEnabled(true);
                JOptionPane.showMessageDialog(this, "Cadastro de fornecedor atualizado com sucesso.", "Menssagem", JOptionPane.INFORMATION_MESSAGE);
                jTableVendor.requestFocus(true);
            }
        }
    }

    private void fnOpenDialogSearchVendor() {
        Dimension tamanhoDialogMain = getSize();
        Dimension tamanhoDialog1 = jDialogSearchAdvanced.getPreferredSize();
        Point loc = getLocation();
        jDialogSearchAdvanced.setLocation(
                (tamanhoDialogMain.width - tamanhoDialog1.width) / 2 + loc.x,
                (tamanhoDialogMain.height - tamanhoDialog1.height) / 2 + loc.y);
        jDialogSearchAdvanced.setModal(true);
        jDialogSearchAdvanced.pack();
        jDialogSearchAdvanced.setVisible(true);
    }

    private void fnOpenDialogProductsThisVendor() {
        Dimension tamanhoDialogMain = getSize();
        Dimension tamanhoDialog1 = jDialogProductsThisVendor.getPreferredSize();
        Point loc = getLocation();
        jDialogProductsThisVendor.setLocation(
                (tamanhoDialogMain.width - tamanhoDialog1.width) / 2 + loc.x,
                (tamanhoDialogMain.height - tamanhoDialog1.height) / 2 + loc.y);
        jDialogProductsThisVendor.setModal(true);
        jDialogProductsThisVendor.pack();
        jDialogProductsThisVendor.setVisible(true);
    }

    private void fnDeleteVendor() {
        if (!jTextFieldCodVendor.getText().isEmpty()) {
            if (JOptionPane.showConfirmDialog(this, "Deseja realmente excluir este cadastro?", "Alerta!", JOptionPane.YES_NO_OPTION) == 0) {

                try {
                    if (ClassVendor.deleteVendor(jTextFieldCodVendor.getText())) {
                        JOptionPane.showMessageDialog(this, "Cadastro de fornecedor removido com sucesso.", "Menssagem", JOptionPane.INFORMATION_MESSAGE);
                        try {
                            tableRegisterVendor = new MyModelJtableRegisterVendor(null);
                            jTableVendor.setModel(tableRegisterVendor);
                        } catch (Exception ex) {
                            System.err.println("ERROR::" + ex);
                            ////newXML.generateLog(ex.toString());
                        }
                        limpaCampos();
                        activeCampos(false);
                        jButtonDeleteVendor.setEnabled(false);
                        if (jTableVendor.getRowCount() > 0) {
                            ClassVendor.consultVendor(jTableVendor.getValueAt(0, 0).toString());
                            jTableVendor.requestFocus(true);
                        }
                        jButtonDeleteVendor.setEnabled(true);
                        activeCampos(false);
                        jButtonNewVendor.setEnabled(true);
                        jButtonEditVendor.setEnabled(true);
                    }

                } catch (SQLException ex) {
                    System.err.println("ERROR::" + ex);
                    //newXML.generateLog(ex.toString());
                    Logger.getLogger(JDialogRegisterVendor_3_1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    public static void fnPrintCard() {

        if (!jTextFieldCodVendor.getText().isEmpty()) {

            ImprimirRelatorio_cupom imp = new ImprimirRelatorio_cupom();
            Object[] valPar2 = {jTextFieldCodVendor.getText()};
            Object[] par2 = {"PAR_ID_VENDOR"};
            try {
                imp.visualizarRelatorio(valPar2, par2, "reportRegisterDetailedVendor.jasper", true);//isView);
            } catch (Exception ex) {
                System.err.println("ERROR::" + ex);
                //newXML.generateLog(ex.toString());
                Logger.getLogger(JDialogRegisterVendor_3_1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    class MyCellRenderer extends DefaultTableCellRenderer {

        public MyCellRenderer() {
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean selected, boolean focused,
                int row, int column) {
            super.getTableCellRendererComponent(table, value, selected, focused, row, column);

            Color bg;

            if (!selected) {
                bg = ((row % 2 == 0)
                        ? alternateColor
                        : whiteColor);
            } else {
                bg = selectedColor;
            }

            if (jTableVendor.getRowCount() > 0) {

                jTableVendor.getColumnModel().getColumn(0).setPreferredWidth(50);// define a largura da coluna
                jTableVendor.getColumnModel().getColumn(1).setPreferredWidth(250);
                jTableVendor.getColumnModel().getColumn(2).setPreferredWidth(100);
                jTableVendor.getColumnModel().getColumn(3).setPreferredWidth(100);
            }
            if (jTableProductsThisVendor.getModel().getRowCount() > 0) {

                jTableProductsThisVendor.getColumnModel().getColumn(0).setPreferredWidth(5);// define a largura da coluna
                jTableProductsThisVendor.getColumnModel().getColumn(1).setPreferredWidth(100);
                jTableProductsThisVendor.getColumnModel().getColumn(2).setPreferredWidth(250);
                jTableProductsThisVendor.getColumnModel().getColumn(3).setPreferredWidth(80);
                jTableProductsThisVendor.getColumnModel().getColumn(4).setPreferredWidth(100);
                jTableProductsThisVendor.getColumnModel().getColumn(5).setPreferredWidth(100);
                jTableProductsThisVendor.getColumnModel().getColumn(6).setPreferredWidth(80);
                jTableProductsThisVendor.getColumnModel().getColumn(7).setPreferredWidth(80);
            }
            if (jTableAdvancedSearch.getModel().getRowCount() > 0) {

                jTableAdvancedSearch.getColumnModel().getColumn(0).setPreferredWidth(60);// define a largura da coluna
                jTableAdvancedSearch.getColumnModel().getColumn(1).setPreferredWidth(260);
                jTableAdvancedSearch.getColumnModel().getColumn(2).setPreferredWidth(100);
                jTableAdvancedSearch.getColumnModel().getColumn(3).setPreferredWidth(100);

            }
            //jTableItens.setShowHorizontalLines(false);
            //jTableItens.setShowVerticalLines(false);
            setBackground(bg);
            setForeground(selected
                    ? Color.black
                    : new java.awt.Color(102, 102, 102));
            setHorizontalAlignment(SwingConstants.CENTER);

            /*
             *  if (value instanceof ImageIcon) {
             * setIcon((ImageIcon) value);
             * setText("");
             * } else
             * setIcon(null);
             */
            return this;
        }
    }
}
