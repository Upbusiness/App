/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import action.Bean;
import action.BeanLogin;
import action.BeanProductTransition;
import action.BeanTbl;
import action.Product;
import java.awt.AWTEvent;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.AWTEventListener;
import java.awt.event.KeyEvent;
import java.lang.reflect.Method;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.ClassProduct;
import static model.ClassProduct.*;
import model.ClassSale;
import model.ClassVendor;
import reports.ImprimirRelatorio_2;
import reports.ImprimirRelatorio_cupom;
import util.DateActual;
import util.JTextFieldTools;
import util.Mascaras;
import static view.JDialogRegisterVendor_3_1.*;
import static view.JFrameSale_1.*;
//import xml.NewXML;

/**
 *
 * @author EasySys
 */
public class JDialogProduct_2_0 extends javax.swing.JDialog {

    private MyModelJtableVendorProduct tableModelVendorProduct;
    public static String argVendorProduct;
    private final DecimalFormat v = new DecimalFormat("0.00");
    private MyModel_3 tabela2;
    private MyModelJtableAdvancedSearch tableModelAdvancedSearch;
    private final Color whiteColor = Color.white;                 // new Color(254, 254, 254);
    private final Color alternateColor = new Color(227, 227, 227);    // Color.lightGray;//new Color(204, 204, 204);
    private final Color selectedColor = Color.yellow;
    private Product product = new Product();
    private static final String[] head = {"CÓDIGO BARRA", "DESCRIÇÃO", "ESTOQUE"};
    private static String codBar = null;
    private static boolean mode_normal = true;
    private static boolean mode_refresh_price = false;
    private static boolean mode_refresh_budget = false;
    private static String argCategory = "";
    private static final List<String> listArgCatCod = new ArrayList<>();
    private static String categoryNames = "Todas Categorias";
    public static String oldBarCode;
    private boolean isEditpriceBuy = false;
    private boolean isNewProduct = false;
    private boolean controlRelease = true;
    private static MyModelJtableProducts myModelJtableProducts;
    private static MyModelJTableCheked myModelJTableCheked;
    private static MyModelJtableMeanSaleProducts jtableMeanSaleProducts;
    private final boolean isViewActiveProduct = true;
    private final Bean bean = new Bean();
    private boolean isActivePercentagemProfitTF;
    private boolean controlLock1 = true;
    private final boolean controlLock2 = true;
    private boolean dontShowMessaage1;
    public static boolean isOpenLock;
    private static int position_table = 0;
    private int argFilterProdActi = 1;
    //private static final NewXML newXML = new NewXML();
    private DefaultListModel listModel = new DefaultListModel();
    ;
    private static String par_advanced_search = null;

    /**
     * Creates new form JDialogProduct
     *
     * @param parent
     * @param modal
     */
    public JDialogProduct_2_0(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        bindingGroup.addBindingListener(new LoggingBindingListener(validationMsgLabel));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buttonGroupModesActions = new javax.swing.ButtonGroup();
        jDialogFilterCategory = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableCategoryThisProduct = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButtonSaveFilterCategory = new javax.swing.JButton();
        jButtonExitDialogFilterCategory = new javax.swing.JButton();
        jCheckBoxSelecionarTodasCategorias = new javax.swing.JCheckBox();
        jDialogConsultProduct = new javax.swing.JDialog();
        jLabel22 = new javax.swing.JLabel();
        jLabelIconCodBarConsultProduct = new javax.swing.JLabel();
        jTextProductCodeConsult = new javax.swing.JTextField();
        jDialogVendor = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTableVendorThisProduct = new javax.swing.JTable();
        jCheckBoxSelectAllVendorThisProduct = new javax.swing.JCheckBox();
        jButtonAddVendorThisProduct = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButtonExitJdialogVendorThisProduct = new javax.swing.JButton();
        jLabelMessageVendorThisProduct = new javax.swing.JLabel();
        jDialogSearchAdvanced = new javax.swing.JDialog();
        textValueAdvancedSearch = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableAdvancedSearch = new javax.swing.JTable();
        textBarCodeAdvancedSearch = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        buttonGroupModeViews = new javax.swing.ButtonGroup();
        jDialogMeanSale = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMeanSale = new javax.swing.JTable();
        jDialogProfitMeanCategory = new javax.swing.JDialog();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableProfitMean = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jCheckBoxSelecionarTodosVaredura = new javax.swing.JCheckBox();
        jTextFieldValueLucroVaredura = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        dateConverter1 = new action.DateConverter();
        decimalConverter1 = new action.DecimalConverter();
        decimalConverterProfite1 = new action.DecimalConverterProfite();
        doubleValidator1 = new action.DoubleValidator();
        decimalConverterReserveValues1 = new action.DecimalConverterReserveValues();
        typeProductionConverter1 = new action.TypeProductionConverter();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelBackground = new javax.swing.JPanel();
        jPanelDetaialsProduct = new javax.swing.JPanel();
        text_descricao_produto = new javax.swing.JTextField();
        text_codigo_barra = new javax.swing.JTextField();
        text_descricao_resumida = new javax.swing.JTextField();
        jFormattedTextDateCreation = new javax.swing.JFormattedTextField(Mascaras.maskDate());
        jFormattedTexDateLastModification = new javax.swing.JFormattedTextField(Mascaras.maskDate());
        combo_unidade_medida_produto = new javax.swing.JComboBox(allUnityMeasure().toArray());
        combo_tipo_producao = new javax.swing.JComboBox();
        combo_vendor_product = new javax.swing.JComboBox();
        combo_categorias = new javax.swing.JComboBox(allCategorys().toArray());
        jCheckBoxIsActive = new javax.swing.JCheckBox();
        jLabelFilterCategory = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jPanelTributeProduct = new javax.swing.JPanel();
        text_class = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        text_percentual_contribuiçao1 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        text_percentual_contribuiçao2 = new javax.swing.JTextField();
        text_percentual_contribuiçao4 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        text_percentual_contribuiçao5 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        text_percentual_contribuiçao6 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        text_percentual_contribuiçao7 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        text_percentual_contribuiçao8 = new javax.swing.JTextField();
        text_percentual_contribuiçao13 = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        text_percentual_contribuiçao14 = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        text_percentual_contribuiçao15 = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        text_percentual_contribuiçao16 = new javax.swing.JTextField();
        jPanelFinancialProduct = new javax.swing.JPanel();
        text_preco_compra = new javax.swing.JTextField();
        text_percentual_lucro = new javax.swing.JTextField();
        text_preco_venda_atual = new javax.swing.JTextField();
        text_preco_tabela_1 = new javax.swing.JTextField();
        text_preco_tabela_2 = new javax.swing.JTextField();
        text_estoque_minimo = new javax.swing.JTextField();
        text_estoque_atual = new javax.swing.JTextField();
        text_preco_venda_prazo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        rotulo_tabela_em_uso = new javax.swing.JLabel();
        rotulo_preco_sugerido = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        rotulo_preco_medio_compra = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        rotulo_estoque_financeiro_produto = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabelPriceSaleRefresh = new javax.swing.JLabel();
        jLabelPriceBuyRefresh = new javax.swing.JLabel();
        jPanelOthers = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        rotulo_composicao = new javax.swing.JLabel();
        bt_composicao = new javax.swing.JButton();
        bt_limite_de_venda = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPaneTableProduct = new javax.swing.JScrollPane();
        jTableProducts = new javax.swing.JTable();
        jPanelActions = new javax.swing.JPanel();
        bt_gravar_product = new javax.swing.JButton();
        bt_excluir_product = new javax.swing.JButton();
        bt_cancelar_novo_product = new javax.swing.JButton();
        bt_novo_product = new javax.swing.JButton();
        bt_first_product = new javax.swing.JButton();
        bt_back_product = new javax.swing.JButton();
        bt_forward_product = new javax.swing.JButton();
        bt_last_product = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        bt_sair1 = new javax.swing.JButton();
        bt_busca_rapida_product = new javax.swing.JButton();
        validationMsgLabel = new javax.swing.JLabel();
        jPanelDemandMonth = new javax.swing.JPanel();
        jLabelDemandUp = new javax.swing.JLabel();
        jLabelDemandUniform = new javax.swing.JLabel();
        jLabelDemandDown = new javax.swing.JLabel();
        jLabelDemandUpNumber = new javax.swing.JLabel();
        jLabelDemandUniformNumber = new javax.swing.JLabel();
        jLabelDemandDownNumber = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabelmeanSaleIndicator = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListMeanSaleLastYear = new javax.swing.JList(listModel);
        jLabelLoading = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemSeachProduct = new javax.swing.JMenuItem();
        jMenuItemSeachAdvancedProduct = new javax.swing.JMenuItem();
        jMenuItemNewProduct = new javax.swing.JMenuItem();
        jMenuItemSaveProduct = new javax.swing.JMenuItem();
        jMenuItemCancelNewProduct = new javax.swing.JMenuItem();
        jMenuItemDeleteProduct = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jCheckBoxMenuItemPrintLabelGondolaActualProduct = new javax.swing.JMenuItem();
        jCheckBoxMenuItemPrintLabelGondola = new javax.swing.JCheckBoxMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jCheckBoxMenuItemViewActiveProducts = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItemViewInactivedProducts = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItemViewAllProducts = new javax.swing.JCheckBoxMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        jDialogFilterCategory.setTitle("Filtragem de produtos a serem exibidos");
        jDialogFilterCategory.setType(java.awt.Window.Type.UTILITY);
        jDialogFilterCategory.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                jDialogFilterCategoryWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                jDialogFilterCategoryWindowClosed(evt);
            }
        });

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Categorias:"));

        jTableCategoryThisProduct.setAutoCreateRowSorter(true);
        jTableCategoryThisProduct.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableCategoryThisProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableCategoryThisProduct.setDefaultRenderer(Object.class, new MyCellRenderer());
        jTableCategoryThisProduct.setRowHeight(18);
        jScrollPane3.setViewportView(jTableCategoryThisProduct);

        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        jButtonSaveFilterCategory.setText("Gravar");
        jButtonSaveFilterCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveFilterCategoryActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonSaveFilterCategory);

        jButtonExitDialogFilterCategory.setText("Sair");
        jButtonExitDialogFilterCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitDialogFilterCategoryActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonExitDialogFilterCategory);

        jCheckBoxSelecionarTodasCategorias.setText("Selecionar Todas Categorias");
        jCheckBoxSelecionarTodasCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSelecionarTodasCategoriasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialogFilterCategoryLayout = new javax.swing.GroupLayout(jDialogFilterCategory.getContentPane());
        jDialogFilterCategory.getContentPane().setLayout(jDialogFilterCategoryLayout);
        jDialogFilterCategoryLayout.setHorizontalGroup(
            jDialogFilterCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogFilterCategoryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogFilterCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jDialogFilterCategoryLayout.createSequentialGroup()
                        .addComponent(jCheckBoxSelecionarTodasCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 339, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jDialogFilterCategoryLayout.setVerticalGroup(
            jDialogFilterCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogFilterCategoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxSelecionarTodasCategorias)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jDialogConsultProduct.setBackground(new java.awt.Color(102, 0, 102));
        jDialogConsultProduct.setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        jDialogConsultProduct.setResizable(false);
        jDialogConsultProduct.setType(java.awt.Window.Type.UTILITY);
        jDialogConsultProduct.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                jDialogConsultProductWindowActivated(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(102, 102, 102));
        jLabel22.setText("CÓD. BARRA:");

        jLabelIconCodBarConsultProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/[010996].png"))); // NOI18N

        jTextProductCodeConsult.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jTextProductCodeConsult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextProductCodeConsultActionPerformed(evt);
            }
        });
        jTextProductCodeConsult.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextProductCodeConsultKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextProductCodeConsultKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jDialogConsultProductLayout = new javax.swing.GroupLayout(jDialogConsultProduct.getContentPane());
        jDialogConsultProduct.getContentPane().setLayout(jDialogConsultProductLayout);
        jDialogConsultProductLayout.setHorizontalGroup(
            jDialogConsultProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogConsultProductLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextProductCodeConsult, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelIconCodBarConsultProduct)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialogConsultProductLayout.setVerticalGroup(
            jDialogConsultProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogConsultProductLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jDialogConsultProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelIconCodBarConsultProduct, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDialogConsultProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel22)
                        .addComponent(jTextProductCodeConsult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDialogVendor.setTitle("Filtragem de produtos a serem exibidos");
        jDialogVendor.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        jDialogVendor.setType(java.awt.Window.Type.UTILITY);
        jDialogVendor.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                jDialogVendorWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                jDialogVendorWindowClosed(evt);
            }
        });

        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        jTableVendorThisProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableVendorThisProduct.setDefaultRenderer(Object.class, new MyCellRenderer());
        jTableVendorThisProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVendorThisProductMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(jTableVendorThisProduct);

        jPanel4.add(jScrollPane8);

        jCheckBoxSelectAllVendorThisProduct.setText("Selecionar Todos");
        jCheckBoxSelectAllVendorThisProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSelectAllVendorThisProductActionPerformed(evt);
            }
        });

        jButtonAddVendorThisProduct.setText("Adicionar Fornecedor");
        jButtonAddVendorThisProduct.setPreferredSize(new java.awt.Dimension(135, 35));
        jButtonAddVendorThisProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddVendorThisProductActionPerformed(evt);
            }
        });

        jButton6.setText("Excluir Selecionado ");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Atualizar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButtonExitJdialogVendorThisProduct.setText("Sair");
        jButtonExitJdialogVendorThisProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitJdialogVendorThisProductActionPerformed(evt);
            }
        });

        jLabelMessageVendorThisProduct.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabelMessageVendorThisProduct.setForeground(new java.awt.Color(153, 51, 0));

        javax.swing.GroupLayout jDialogVendorLayout = new javax.swing.GroupLayout(jDialogVendor.getContentPane());
        jDialogVendor.getContentPane().setLayout(jDialogVendorLayout);
        jDialogVendorLayout.setHorizontalGroup(
            jDialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jDialogVendorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jCheckBoxSelectAllVendorThisProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAddVendorThisProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialogVendorLayout.createSequentialGroup()
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonExitJdialogVendorThisProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelMessageVendorThisProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialogVendorLayout.setVerticalGroup(
            jDialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogVendorLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jDialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBoxSelectAllVendorThisProduct)
                    .addComponent(jLabelMessageVendorThisProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDialogVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddVendorThisProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonExitJdialogVendorThisProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jDialogSearchAdvanced.setTitle("Busca Avançada de Produto");
        jDialogSearchAdvanced.setType(java.awt.Window.Type.UTILITY);
        jDialogSearchAdvanced.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                jDialogSearchAdvancedWindowActivated(evt);
            }
        });

        textValueAdvancedSearch.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        textValueAdvancedSearch.setForeground(new java.awt.Color(51, 51, 51));
        textValueAdvancedSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar por: Descrição do Produto:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(102, 102, 102))); // NOI18N
        textValueAdvancedSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textValueAdvancedSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                textValueAdvancedSearchFocusLost(evt);
            }
        });
        textValueAdvancedSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textValueAdvancedSearchActionPerformed(evt);
            }
        });
        textValueAdvancedSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textValueAdvancedSearchKeyReleased(evt);
            }
        });

        jTableAdvancedSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableAdvancedSearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableAdvancedSearch.setDefaultRenderer(Object.class, new MyCellRenderer());
        jTableAdvancedSearch.setRowHeight(20);
        jTableAdvancedSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAdvancedSearchMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTableAdvancedSearch);

        textBarCodeAdvancedSearch.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        textBarCodeAdvancedSearch.setForeground(new java.awt.Color(51, 51, 51));
        textBarCodeAdvancedSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar por: Código de Barra:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(102, 102, 102))); // NOI18N
        textBarCodeAdvancedSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBarCodeAdvancedSearchActionPerformed(evt);
            }
        });
        textBarCodeAdvancedSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textBarCodeAdvancedSearchFocusGained(evt);
            }
        });
        textBarCodeAdvancedSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textBarCodeAdvancedSearchKeyReleased(evt);
            }
        });

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/[011650].png"))); // NOI18N
        jLabel26.setToolTipText("");

        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/[010996].png"))); // NOI18N
        jLabel32.setToolTipText("");

        javax.swing.GroupLayout jDialogSearchAdvancedLayout = new javax.swing.GroupLayout(jDialogSearchAdvanced.getContentPane());
        jDialogSearchAdvanced.getContentPane().setLayout(jDialogSearchAdvancedLayout);
        jDialogSearchAdvancedLayout.setHorizontalGroup(
            jDialogSearchAdvancedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogSearchAdvancedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogSearchAdvancedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                    .addGroup(jDialogSearchAdvancedLayout.createSequentialGroup()
                        .addGroup(jDialogSearchAdvancedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDialogSearchAdvancedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textBarCodeAdvancedSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textValueAdvancedSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jDialogSearchAdvancedLayout.setVerticalGroup(
            jDialogSearchAdvancedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogSearchAdvancedLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jDialogSearchAdvancedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(textValueAdvancedSearch))
                .addGap(18, 18, 18)
                .addGroup(jDialogSearchAdvancedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel32)
                    .addComponent(textBarCodeAdvancedSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                .addContainerGap())
        );

        jDialogMeanSale.setTitle("Vendas Mensais do Ano Atual");
        jDialogMeanSale.setType(java.awt.Window.Type.UTILITY);

        jScrollPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jScrollPane1KeyPressed(evt);
            }
        });

        jTableMeanSale.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTableMeanSale.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableMeanSale.setDefaultRenderer(Object.class, new MyCellRenderer());
        jTableMeanSale.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableMeanSaleKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableMeanSale);

        javax.swing.GroupLayout jDialogMeanSaleLayout = new javax.swing.GroupLayout(jDialogMeanSale.getContentPane());
        jDialogMeanSale.getContentPane().setLayout(jDialogMeanSaleLayout);
        jDialogMeanSaleLayout.setHorizontalGroup(
            jDialogMeanSaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
        );
        jDialogMeanSaleLayout.setVerticalGroup(
            jDialogMeanSaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
        );

        jDialogProfitMeanCategory.setTitle("Varedura de Percentual de lucro");
        jDialogProfitMeanCategory.setType(java.awt.Window.Type.UTILITY);

        jTableProfitMean.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableProfitMean.setDefaultRenderer(Object.class, new MyCellRenderer());
        jScrollPane6.setViewportView(jTableProfitMean);

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jButton4.setText("Gravar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);

        jButton8.setText("Sair");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8);

        jCheckBoxSelecionarTodosVaredura.setText("Selecionar Todos");
        jCheckBoxSelecionarTodosVaredura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSelecionarTodosVareduraActionPerformed(evt);
            }
        });

        jTextFieldValueLucroVaredura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldValueLucroVareduraActionPerformed(evt);
            }
        });
        jTextFieldValueLucroVaredura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldValueLucroVareduraKeyReleased(evt);
            }
        });

        jLabel34.setText("Valor % Lucro  Médio:");

        javax.swing.GroupLayout jDialogProfitMeanCategoryLayout = new javax.swing.GroupLayout(jDialogProfitMeanCategory.getContentPane());
        jDialogProfitMeanCategory.getContentPane().setLayout(jDialogProfitMeanCategoryLayout);
        jDialogProfitMeanCategoryLayout.setHorizontalGroup(
            jDialogProfitMeanCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogProfitMeanCategoryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogProfitMeanCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
                    .addComponent(jScrollPane6)
                    .addGroup(jDialogProfitMeanCategoryLayout.createSequentialGroup()
                        .addComponent(jCheckBoxSelecionarTodosVaredura, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldValueLucroVaredura, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jDialogProfitMeanCategoryLayout.setVerticalGroup(
            jDialogProfitMeanCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogProfitMeanCategoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDialogProfitMeanCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialogProfitMeanCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel34)
                        .addComponent(jTextFieldValueLucroVaredura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBoxSelecionarTodosVaredura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tela Produto 1.1");
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabbedPane1.setForeground(new java.awt.Color(51, 51, 51));
        jTabbedPane1.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N

        panelBackground.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        panelBackground.setForeground(new java.awt.Color(153, 0, 0));

        jPanelDetaialsProduct.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        text_descricao_produto.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_descricao_produto.setForeground(new java.awt.Color(51, 51, 51));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.descriptionProduct}"), text_descricao_produto, org.jdesktop.beansbinding.BeanProperty.create("text"), "Descrição do Produto");
        bindingGroup.addBinding(binding);

        text_descricao_produto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_descricao_produtoActionPerformed(evt);
            }
        });
        text_descricao_produto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_descricao_produtoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                text_descricao_produtoFocusLost(evt);
            }
        });
        text_descricao_produto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_descricao_produtoKeyReleased(evt);
            }
        });

        text_codigo_barra.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_codigo_barra.setForeground(new java.awt.Color(51, 51, 51));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.barCodeProduct}"), text_codigo_barra, org.jdesktop.beansbinding.BeanProperty.create("text"), "Código de Barra");
        bindingGroup.addBinding(binding);

        text_codigo_barra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_codigo_barraFocusGained(evt);
            }
        });
        text_codigo_barra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_codigo_barraActionPerformed(evt);
            }
        });
        text_codigo_barra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_codigo_barraKeyReleased(evt);
            }
        });

        text_descricao_resumida.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_descricao_resumida.setForeground(new java.awt.Color(51, 51, 51));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.abbreviature}"), text_descricao_resumida, org.jdesktop.beansbinding.BeanProperty.create("text"), "Descrição Resumida");
        bindingGroup.addBinding(binding);

        text_descricao_resumida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_descricao_resumidaActionPerformed(evt);
            }
        });
        text_descricao_resumida.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_descricao_resumidaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                text_descricao_resumidaFocusLost(evt);
            }
        });
        text_descricao_resumida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_descricao_resumidaKeyReleased(evt);
            }
        });

        jFormattedTextDateCreation.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.dateCreation}"), jFormattedTextDateCreation, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(dateConverter1);
        bindingGroup.addBinding(binding);

        jFormattedTexDateLastModification.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.dateLastModification}"), jFormattedTexDateLastModification, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(dateConverter1);
        bindingGroup.addBinding(binding);

        combo_unidade_medida_produto.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        combo_unidade_medida_produto.setForeground(new java.awt.Color(51, 51, 51));
        combo_unidade_medida_produto.setSelectedIndex(1);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.unityMensurationProduct}"), combo_unidade_medida_produto, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        combo_unidade_medida_produto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_unidade_medida_produtoKeyPressed(evt);
            }
        });

        combo_tipo_producao.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        combo_tipo_producao.setForeground(new java.awt.Color(51, 51, 51));
        combo_tipo_producao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "T-Terceiros", "P-Propia" }));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.typeProductionProduct}"), combo_tipo_producao, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        binding.setConverter(typeProductionConverter1);
        bindingGroup.addBinding(binding);

        combo_tipo_producao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_tipo_producaoActionPerformed(evt);
            }
        });
        combo_tipo_producao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_tipo_producaoKeyPressed(evt);
            }
        });

        combo_vendor_product.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        combo_vendor_product.setForeground(new java.awt.Color(51, 51, 51));
        combo_vendor_product.setLightWeightPopupEnabled(false);
        combo_vendor_product.setMaximumSize(new java.awt.Dimension(211, 211));
        combo_vendor_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_vendor_productActionPerformed(evt);
            }
        });
        combo_vendor_product.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_vendor_productKeyPressed(evt);
            }
        });

        combo_categorias.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        combo_categorias.setForeground(new java.awt.Color(51, 51, 51));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.categoryProduct}"), combo_categorias, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        combo_categorias.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                combo_categoriasFocusLost(evt);
            }
        });
        combo_categorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_categoriasActionPerformed(evt);
            }
        });
        combo_categorias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_categoriasKeyPressed(evt);
            }
        });

        jCheckBoxIsActive.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jCheckBoxIsActive.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBoxIsActive.setText("Ativo");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.isActiveProduct}"), jCheckBoxIsActive, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jCheckBoxIsActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxIsActiveActionPerformed(evt);
            }
        });

        jLabelFilterCategory.setFont(new java.awt.Font("Dialog", 3, 13)); // NOI18N
        jLabelFilterCategory.setForeground(new java.awt.Color(51, 51, 51));
        jLabelFilterCategory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/filter32_32.png"))); // NOI18N
        jLabelFilterCategory.setToolTipText("Clique para filtrar categoria");
        jLabelFilterCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelFilterCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelFilterCategoryMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Categorias:");

        jLabel5.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Tipo Produção:");

        jLabel4.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Unidade Medida:");

        jLabel19.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 51, 51));
        jLabel19.setText("Data Modificação:");

        jLabel18.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 51, 51));
        jLabel18.setText("Data Criação:");

        jLabel3.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Descrição do Produto:");

        jLabel17.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setText("Código de Barra:");

        jLabel21.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 51, 51));
        jLabel21.setText("Descrição Resumida:");

        jLabel2.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Fornecedor(es):");

        jLabel23.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(51, 51, 51));
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/image2995.png"))); // NOI18N
        jLabel23.setToolTipText("Clique para adicionar fornecedor");
        jLabel23.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel23MouseClicked(evt);
            }
        });

        jLabel41.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("+");
        jLabel41.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel41MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelDetaialsProductLayout = new javax.swing.GroupLayout(jPanelDetaialsProduct);
        jPanelDetaialsProduct.setLayout(jPanelDetaialsProductLayout);
        jPanelDetaialsProductLayout.setHorizontalGroup(
            jPanelDetaialsProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDetaialsProductLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanelDetaialsProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDetaialsProductLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(305, 305, 305)
                        .addComponent(jLabel17))
                    .addGroup(jPanelDetaialsProductLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(193, 193, 193)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel19)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4))
                    .addGroup(jPanelDetaialsProductLayout.createSequentialGroup()
                        .addComponent(text_descricao_resumida, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFormattedTextDateCreation, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jFormattedTexDateLastModification, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(combo_unidade_medida_produto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDetaialsProductLayout.createSequentialGroup()
                        .addGroup(jPanelDetaialsProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_tipo_producao, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelDetaialsProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(combo_vendor_product, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel23)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelDetaialsProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDetaialsProductLayout.createSequentialGroup()
                                .addComponent(combo_categorias, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelFilterCategory))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDetaialsProductLayout.createSequentialGroup()
                        .addComponent(text_descricao_produto, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(text_codigo_barra, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jCheckBoxIsActive)))
                .addGap(100, 100, 100))
        );
        jPanelDetaialsProductLayout.setVerticalGroup(
            jPanelDetaialsProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDetaialsProductLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelFilterCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
            .addGroup(jPanelDetaialsProductLayout.createSequentialGroup()
                .addGroup(jPanelDetaialsProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelDetaialsProductLayout.createSequentialGroup()
                        .addGroup(jPanelDetaialsProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelDetaialsProductLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanelDetaialsProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel17))
                                .addGap(6, 6, 6)
                                .addGroup(jPanelDetaialsProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(text_descricao_produto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text_codigo_barra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCheckBoxIsActive))
                                .addGap(12, 12, 12)
                                .addGroup(jPanelDetaialsProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel4))
                                .addGap(6, 6, 6)
                                .addGroup(jPanelDetaialsProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(text_descricao_resumida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanelDetaialsProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jFormattedTexDateLastModification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jFormattedTextDateCreation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanelDetaialsProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(combo_unidade_medida_produto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel41)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelDetaialsProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2)
                                    .addGroup(jPanelDetaialsProductLayout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanelDetaialsProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(combo_tipo_producao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(combo_vendor_product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDetaialsProductLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel23)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelDetaialsProductLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(6, 6, 6)
                        .addComponent(combo_categorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanelTributeProduct.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tributos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 11), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanelTributeProduct.setEnabled(false);

        text_class.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_class.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_class.setEnabled(false);
        text_class.setVerifyInputWhenFocusTarget(false);
        text_class.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_classActionPerformed(evt);
            }
        });
        text_class.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_classFocusGained(evt);
            }
        });
        text_class.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_classKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Classe Fiscal:");
        jLabel9.setEnabled(false);

        jLabel24.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(51, 51, 51));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("Aliquota:");
        jLabel24.setEnabled(false);

        text_percentual_contribuiçao1.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_percentual_contribuiçao1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_percentual_contribuiçao1.setEnabled(false);
        text_percentual_contribuiçao1.setVerifyInputWhenFocusTarget(false);
        text_percentual_contribuiçao1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_percentual_contribuiçao1ActionPerformed(evt);
            }
        });
        text_percentual_contribuiçao1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_percentual_contribuiçao1FocusGained(evt);
            }
        });
        text_percentual_contribuiçao1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_percentual_contribuiçao1KeyReleased(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(51, 51, 51));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("Situação Tributária:");
        jLabel25.setEnabled(false);

        text_percentual_contribuiçao2.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_percentual_contribuiçao2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_percentual_contribuiçao2.setEnabled(false);
        text_percentual_contribuiçao2.setVerifyInputWhenFocusTarget(false);
        text_percentual_contribuiçao2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_percentual_contribuiçao2ActionPerformed(evt);
            }
        });
        text_percentual_contribuiçao2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_percentual_contribuiçao2FocusGained(evt);
            }
        });
        text_percentual_contribuiçao2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_percentual_contribuiçao2KeyReleased(evt);
            }
        });

        text_percentual_contribuiçao4.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_percentual_contribuiçao4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_percentual_contribuiçao4.setEnabled(false);
        text_percentual_contribuiçao4.setVerifyInputWhenFocusTarget(false);
        text_percentual_contribuiçao4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_percentual_contribuiçao4ActionPerformed(evt);
            }
        });
        text_percentual_contribuiçao4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_percentual_contribuiçao4FocusGained(evt);
            }
        });
        text_percentual_contribuiçao4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_percentual_contribuiçao4KeyReleased(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(51, 51, 51));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("Desconto(%):");
        jLabel27.setEnabled(false);

        text_percentual_contribuiçao5.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_percentual_contribuiçao5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_percentual_contribuiçao5.setEnabled(false);
        text_percentual_contribuiçao5.setVerifyInputWhenFocusTarget(false);
        text_percentual_contribuiçao5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_percentual_contribuiçao5ActionPerformed(evt);
            }
        });
        text_percentual_contribuiçao5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_percentual_contribuiçao5FocusGained(evt);
            }
        });
        text_percentual_contribuiçao5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_percentual_contribuiçao5KeyReleased(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(51, 51, 51));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Valor Desconto(R$):");
        jLabel28.setEnabled(false);

        jLabel29.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(51, 51, 51));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("IPI(%):");
        jLabel29.setEnabled(false);

        text_percentual_contribuiçao6.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_percentual_contribuiçao6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_percentual_contribuiçao6.setEnabled(false);
        text_percentual_contribuiçao6.setVerifyInputWhenFocusTarget(false);
        text_percentual_contribuiçao6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_percentual_contribuiçao6ActionPerformed(evt);
            }
        });
        text_percentual_contribuiçao6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_percentual_contribuiçao6FocusGained(evt);
            }
        });
        text_percentual_contribuiçao6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_percentual_contribuiçao6KeyReleased(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(51, 51, 51));
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("ICMS(%):");
        jLabel30.setEnabled(false);

        text_percentual_contribuiçao7.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_percentual_contribuiçao7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_percentual_contribuiçao7.setEnabled(false);
        text_percentual_contribuiçao7.setVerifyInputWhenFocusTarget(false);
        text_percentual_contribuiçao7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_percentual_contribuiçao7ActionPerformed(evt);
            }
        });
        text_percentual_contribuiçao7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_percentual_contribuiçao7FocusGained(evt);
            }
        });
        text_percentual_contribuiçao7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_percentual_contribuiçao7KeyReleased(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(51, 51, 51));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("Confins:");
        jLabel31.setEnabled(false);

        text_percentual_contribuiçao8.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_percentual_contribuiçao8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_percentual_contribuiçao8.setEnabled(false);
        text_percentual_contribuiçao8.setVerifyInputWhenFocusTarget(false);
        text_percentual_contribuiçao8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_percentual_contribuiçao8ActionPerformed(evt);
            }
        });
        text_percentual_contribuiçao8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_percentual_contribuiçao8FocusGained(evt);
            }
        });
        text_percentual_contribuiçao8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_percentual_contribuiçao8KeyReleased(evt);
            }
        });

        text_percentual_contribuiçao13.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_percentual_contribuiçao13.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_percentual_contribuiçao13.setEnabled(false);
        text_percentual_contribuiçao13.setVerifyInputWhenFocusTarget(false);
        text_percentual_contribuiçao13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_percentual_contribuiçao13ActionPerformed(evt);
            }
        });
        text_percentual_contribuiçao13.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_percentual_contribuiçao13FocusGained(evt);
            }
        });
        text_percentual_contribuiçao13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_percentual_contribuiçao13KeyReleased(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(51, 51, 51));
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel36.setText("Incidência:");
        jLabel36.setEnabled(false);

        jLabel37.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(51, 51, 51));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel37.setText("Valor IPI(R$):");
        jLabel37.setEnabled(false);

        text_percentual_contribuiçao14.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_percentual_contribuiçao14.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_percentual_contribuiçao14.setEnabled(false);
        text_percentual_contribuiçao14.setVerifyInputWhenFocusTarget(false);
        text_percentual_contribuiçao14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_percentual_contribuiçao14ActionPerformed(evt);
            }
        });
        text_percentual_contribuiçao14.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_percentual_contribuiçao14FocusGained(evt);
            }
        });
        text_percentual_contribuiçao14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_percentual_contribuiçao14KeyReleased(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(51, 51, 51));
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel38.setText("Valor ICMS(R$):");
        jLabel38.setEnabled(false);

        text_percentual_contribuiçao15.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_percentual_contribuiçao15.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_percentual_contribuiçao15.setEnabled(false);
        text_percentual_contribuiçao15.setVerifyInputWhenFocusTarget(false);
        text_percentual_contribuiçao15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_percentual_contribuiçao15ActionPerformed(evt);
            }
        });
        text_percentual_contribuiçao15.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_percentual_contribuiçao15FocusGained(evt);
            }
        });
        text_percentual_contribuiçao15.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_percentual_contribuiçao15KeyReleased(evt);
            }
        });

        jLabel39.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(51, 51, 51));
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel39.setText("IRPJ:");
        jLabel39.setEnabled(false);

        text_percentual_contribuiçao16.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_percentual_contribuiçao16.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_percentual_contribuiçao16.setEnabled(false);
        text_percentual_contribuiçao16.setVerifyInputWhenFocusTarget(false);
        text_percentual_contribuiçao16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_percentual_contribuiçao16ActionPerformed(evt);
            }
        });
        text_percentual_contribuiçao16.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_percentual_contribuiçao16FocusGained(evt);
            }
        });
        text_percentual_contribuiçao16.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_percentual_contribuiçao16KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanelTributeProductLayout = new javax.swing.GroupLayout(jPanelTributeProduct);
        jPanelTributeProduct.setLayout(jPanelTributeProductLayout);
        jPanelTributeProductLayout.setHorizontalGroup(
            jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(text_class, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(text_percentual_contribuiçao1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                        .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTributeProductLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4)
                        .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text_percentual_contribuiçao4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text_percentual_contribuiçao2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(text_percentual_contribuiçao8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(text_percentual_contribuiçao7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                        .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTributeProductLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4)
                        .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text_percentual_contribuiçao5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text_percentual_contribuiçao6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(text_percentual_contribuiçao16, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(text_percentual_contribuiçao15, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                        .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTributeProductLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4)
                        .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text_percentual_contribuiçao13, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text_percentual_contribuiçao14, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanelTributeProductLayout.setVerticalGroup(
            jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                            .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(jLabel31))
                                .addComponent(text_percentual_contribuiçao8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(6, 6, 6)
                            .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(jLabel30))
                                .addComponent(text_percentual_contribuiçao7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(6, 6, 6)
                            .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(jLabel29))
                                .addComponent(text_percentual_contribuiçao6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(6, 6, 6)
                            .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(text_percentual_contribuiçao5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel28)))
                        .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                            .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(jLabel9))
                                .addComponent(text_class, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(6, 6, 6)
                            .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(jLabel24))
                                .addComponent(text_percentual_contribuiçao1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(6, 6, 6)
                            .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(jLabel25))
                                .addComponent(text_percentual_contribuiçao2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(6, 6, 6)
                            .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(text_percentual_contribuiçao4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel27))))
                    .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                        .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel39))
                            .addComponent(text_percentual_contribuiçao16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text_percentual_contribuiçao15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel38)))
                        .addGap(6, 6, 6)
                        .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelTributeProductLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel37))
                            .addComponent(text_percentual_contribuiçao14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanelTributeProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text_percentual_contribuiçao13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel36))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelFinancialProduct.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Financeiro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 11), new java.awt.Color(51, 51, 51))); // NOI18N

        text_preco_compra.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_preco_compra.setForeground(new java.awt.Color(255, 102, 0));
        text_preco_compra.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_preco_compra.setVerifyInputWhenFocusTarget(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.priceBuyProduct}"), text_preco_compra, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverter1);
        bindingGroup.addBinding(binding);

        text_preco_compra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_preco_compraFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                text_preco_compraFocusLost(evt);
            }
        });
        text_preco_compra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_preco_compraActionPerformed(evt);
            }
        });
        text_preco_compra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_preco_compraKeyReleased(evt);
            }
        });

        text_percentual_lucro.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_percentual_lucro.setForeground(new java.awt.Color(204, 0, 0));
        text_percentual_lucro.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_percentual_lucro.setEnabled(false);
        text_percentual_lucro.setVerifyInputWhenFocusTarget(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.percentagemProfit}"), text_percentual_lucro, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverter1);
        bindingGroup.addBinding(binding);

        text_percentual_lucro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_percentual_lucroFocusGained(evt);
            }
        });
        text_percentual_lucro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_percentual_lucroActionPerformed(evt);
            }
        });
        text_percentual_lucro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_percentual_lucroKeyReleased(evt);
            }
        });

        text_preco_venda_atual.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_preco_venda_atual.setForeground(new java.awt.Color(0, 102, 0));
        text_preco_venda_atual.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_preco_venda_atual.setVerifyInputWhenFocusTarget(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.priceActualSale}"), text_preco_venda_atual, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverter1);
        bindingGroup.addBinding(binding);

        text_preco_venda_atual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_preco_venda_atualFocusGained(evt);
            }
        });
        text_preco_venda_atual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_preco_venda_atualActionPerformed(evt);
            }
        });
        text_preco_venda_atual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_preco_venda_atualKeyReleased(evt);
            }
        });

        text_preco_tabela_1.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_preco_tabela_1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_preco_tabela_1.setVerifyInputWhenFocusTarget(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.priceTab1Sale}"), text_preco_tabela_1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverter1);
        bindingGroup.addBinding(binding);

        text_preco_tabela_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_preco_tabela_1ActionPerformed(evt);
            }
        });
        text_preco_tabela_1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_preco_tabela_1KeyReleased(evt);
            }
        });

        text_preco_tabela_2.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_preco_tabela_2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_preco_tabela_2.setVerifyInputWhenFocusTarget(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.priceTab2Sale}"), text_preco_tabela_2, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverter1);
        bindingGroup.addBinding(binding);

        text_preco_tabela_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_preco_tabela_2ActionPerformed(evt);
            }
        });
        text_preco_tabela_2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_preco_tabela_2KeyReleased(evt);
            }
        });

        text_estoque_minimo.setColumns(3);
        text_estoque_minimo.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_estoque_minimo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.budgetMin}"), text_estoque_minimo, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        text_estoque_minimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_estoque_minimoActionPerformed(evt);
            }
        });

        text_estoque_atual.setColumns(3);
        text_estoque_atual.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_estoque_atual.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_estoque_atual.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.budgetActual}"), text_estoque_atual, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverterReserveValues1);
        bindingGroup.addBinding(binding);

        text_estoque_atual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_estoque_atualFocusGained(evt);
            }
        });
        text_estoque_atual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_estoque_atualActionPerformed(evt);
            }
        });

        text_preco_venda_prazo.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        text_preco_venda_prazo.setForeground(new java.awt.Color(0, 102, 0));
        text_preco_venda_prazo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_preco_venda_prazo.setEnabled(false);
        text_preco_venda_prazo.setVerifyInputWhenFocusTarget(false);
        text_preco_venda_prazo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_preco_venda_prazoActionPerformed(evt);
            }
        });
        text_preco_venda_prazo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_preco_venda_prazoFocusGained(evt);
            }
        });
        text_preco_venda_prazo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_preco_venda_prazoKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Estoque Atual(UN):");

        jLabel20.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 51, 51));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Preço a Prazo(R$):");
        jLabel20.setEnabled(false);

        rotulo_tabela_em_uso.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        rotulo_tabela_em_uso.setForeground(new java.awt.Color(153, 0, 0));
        rotulo_tabela_em_uso.setText("ATUALMENTE CONFIGURADO TABELA 1");

        rotulo_preco_sugerido.setFont(new java.awt.Font("Dialog", 2, 14)); // NOI18N
        rotulo_preco_sugerido.setForeground(new java.awt.Color(153, 0, 0));
        rotulo_preco_sugerido.setText("Preço Sugerido R$:0,00");

        jLabel6.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Estoque Mínimo(UN):");

        jLabel8.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Preço Compra(R$):");

        jLabel15.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 51, 51));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Margem  Lucro(%):");

        jLabel14.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 51));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Preço TAB 2(R$):");

        jLabel12.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Preço Venda(R$):");

        jLabel13.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 51));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Preço TAB 1(R$):");

        jLabel10.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Preço Médio Compra(R$):");

        rotulo_preco_medio_compra.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        rotulo_preco_medio_compra.setForeground(new java.awt.Color(153, 0, 0));
        rotulo_preco_medio_compra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rotulo_preco_medio_compra.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.priceMeanBuyProduct}"), rotulo_preco_medio_compra, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(decimalConverter1);
        bindingGroup.addBinding(binding);

        jLabel11.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Estoque Financeiro(R$):");

        rotulo_estoque_financeiro_produto.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        rotulo_estoque_financeiro_produto.setForeground(new java.awt.Color(153, 0, 0));
        rotulo_estoque_financeiro_produto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rotulo_estoque_financeiro_produto.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.budgetActual * product.priceBuyProduct}"), rotulo_estoque_financeiro_produto, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/lock_closed22x22.png"))); // NOI18N
        jLabel35.setToolTipText("Clique para desbloquear este campo");
        jLabel35.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel35MouseClicked(evt);
            }
        });

        jLabelPriceSaleRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/[000686].png"))); // NOI18N
        jLabelPriceSaleRefresh.setToolTipText("Clique para desbloquear este campo");
        jLabelPriceSaleRefresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelPriceSaleRefresh.setEnabled(false);
        jLabelPriceSaleRefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelPriceSaleRefreshMouseClicked(evt);
            }
        });

        jLabelPriceBuyRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/[000676].png"))); // NOI18N
        jLabelPriceBuyRefresh.setToolTipText("Clique para desbloquear este campo");
        jLabelPriceBuyRefresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelPriceBuyRefresh.setEnabled(false);
        jLabelPriceBuyRefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelPriceBuyRefreshMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelFinancialProductLayout = new javax.swing.GroupLayout(jPanelFinancialProduct);
        jPanelFinancialProduct.setLayout(jPanelFinancialProductLayout);
        jPanelFinancialProductLayout.setHorizontalGroup(
            jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(text_preco_compra, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(text_percentual_lucro, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text_preco_venda_atual))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabelPriceSaleRefresh)
                                .addComponent(jLabelPriceBuyRefresh))
                            .addComponent(jLabel35))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text_preco_venda_prazo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text_preco_tabela_1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text_preco_tabela_2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(rotulo_tabela_em_uso, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(rotulo_preco_sugerido, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rotulo_estoque_financeiro_produto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                        .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text_estoque_atual, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(text_estoque_minimo))
                        .addGap(26, 26, 26))
                    .addComponent(rotulo_preco_medio_compra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelFinancialProductLayout.setVerticalGroup(
            jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(text_preco_venda_prazo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20)))
                            .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel6))
                            .addComponent(text_estoque_minimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(text_preco_tabela_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13)))
                            .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(text_estoque_atual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(5, 5, 5)
                        .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(text_preco_tabela_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14))
                            .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel10))
                            .addComponent(rotulo_preco_medio_compra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                                .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel8))
                                    .addComponent(text_preco_compra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(5, 5, 5)
                                .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel15))
                                    .addComponent(text_percentual_lucro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel12))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFinancialProductLayout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(text_preco_venda_atual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                                .addComponent(jLabelPriceBuyRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabelPriceSaleRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(6, 6, 6)
                .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                        .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFinancialProductLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(rotulo_tabela_em_uso, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelFinancialProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rotulo_preco_sugerido, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFinancialProductLayout.createSequentialGroup()
                        .addComponent(rotulo_estoque_financeiro_produto, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jPanelOthers.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel16.setFont(new java.awt.Font("Dialog", 3, 15)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 51, 51));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Composição:");

        rotulo_composicao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rotulo_composicao.setForeground(new java.awt.Color(51, 51, 51));
        rotulo_composicao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rotulo_composicao.setText("Sem Agregados");

        bt_composicao.setFont(new java.awt.Font("Dialog", 3, 15)); // NOI18N
        bt_composicao.setForeground(new java.awt.Color(51, 51, 51));
        bt_composicao.setText("Composicao");
        bt_composicao.setEnabled(false);
        bt_composicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_composicaoActionPerformed(evt);
            }
        });

        bt_limite_de_venda.setFont(new java.awt.Font("Dialog", 3, 15)); // NOI18N
        bt_limite_de_venda.setForeground(new java.awt.Color(51, 51, 51));
        bt_limite_de_venda.setText("Limite de Venda");
        bt_limite_de_venda.setEnabled(false);
        bt_limite_de_venda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_limite_de_vendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelOthersLayout = new javax.swing.GroupLayout(jPanelOthers);
        jPanelOthers.setLayout(jPanelOthersLayout);
        jPanelOthersLayout.setHorizontalGroup(
            jPanelOthersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOthersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rotulo_composicao, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 228, Short.MAX_VALUE)
                .addComponent(bt_composicao, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_limite_de_venda, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelOthersLayout.setVerticalGroup(
            jPanelOthersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOthersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOthersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(bt_composicao)
                    .addComponent(bt_limite_de_venda)
                    .addComponent(rotulo_composicao))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelBackgroundLayout = new javax.swing.GroupLayout(panelBackground);
        panelBackground.setLayout(panelBackgroundLayout);
        panelBackgroundLayout.setHorizontalGroup(
            panelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBackgroundLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(panelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelOthers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelDetaialsProduct, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanelFinancialProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanelTributeProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelBackgroundLayout.setVerticalGroup(
            panelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDetaialsProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelTributeProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelFinancialProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelOthers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Produtos", null, panelBackground, "Cadatro de Produtos");

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null,"Categoria Visualizada: Todas Categorias", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 12), new java.awt.Color(51, 51, 51)));
        jPanel2.setToolTipText("Todas Categorias");
        jPanel2.setLayout(new java.awt.BorderLayout());

        jTableProducts.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTableProducts.setRowHeight(17);
        jTableProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProductsMouseClicked(evt);
            }
        });
        jTableProducts.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableProductsKeyPressed(evt);
            }
        });
        jTableProducts.setDefaultRenderer(Object.class, new MyCellRenderer());
        jScrollPaneTableProduct.setViewportView(jTableProducts);

        jPanel2.add(jScrollPaneTableProduct, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel2, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Lista Produtos", jPanel5);

        jPanelActions.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanelActions.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        bt_gravar_product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save_large.png"))); // NOI18N
        bt_gravar_product.setToolTipText("Salvar[Ctrl+S]");
        bt_gravar_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_gravar_productActionPerformed(evt);
            }
        });

        bt_excluir_product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/TrashFull.png"))); // NOI18N
        bt_excluir_product.setToolTipText("Excluir cadastro");
        bt_excluir_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_excluir_productActionPerformed(evt);
            }
        });

        bt_cancelar_novo_product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/[001166].png"))); // NOI18N
        bt_cancelar_novo_product.setToolTipText("Cancelar Novo Produto[Ctrl+Z]");
        bt_cancelar_novo_product.setEnabled(false);
        bt_cancelar_novo_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cancelar_novo_productActionPerformed(evt);
            }
        });

        bt_novo_product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/annotate_large.png"))); // NOI18N
        bt_novo_product.setToolTipText("Insere Produto[Ctrl+N]");
        bt_novo_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_novo_productActionPerformed(evt);
            }
        });

        bt_first_product.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bt_first_product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/b_firstpage.png"))); // NOI18N
        bt_first_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_first_productActionPerformed(evt);
            }
        });

        bt_back_product.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bt_back_product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/b_prevpage.png"))); // NOI18N
        bt_back_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_back_productActionPerformed(evt);
            }
        });

        bt_forward_product.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bt_forward_product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/b_nextpage.png"))); // NOI18N
        bt_forward_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_forward_productActionPerformed(evt);
            }
        });

        bt_last_product.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bt_last_product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/b_lastpage.png"))); // NOI18N
        bt_last_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_last_productActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/[010681].png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        bt_sair1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/[000787].png"))); // NOI18N
        bt_sair1.setToolTipText("Sair");
        bt_sair1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_sair1ActionPerformed(evt);
            }
        });

        bt_busca_rapida_product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Search.png"))); // NOI18N
        bt_busca_rapida_product.setToolTipText("Busca Rápida [Ctrl+B]");
        bt_busca_rapida_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_busca_rapida_productActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelActionsLayout = new javax.swing.GroupLayout(jPanelActions);
        jPanelActions.setLayout(jPanelActionsLayout);
        jPanelActionsLayout.setHorizontalGroup(
            jPanelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelActionsLayout.createSequentialGroup()
                .addComponent(bt_excluir_product)
                .addGap(0, 0, 0)
                .addComponent(bt_cancelar_novo_product)
                .addGap(0, 0, 0)
                .addComponent(bt_gravar_product)
                .addGap(0, 0, 0)
                .addComponent(bt_novo_product)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bt_busca_rapida_product)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_first_product, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_back_product, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_forward_product, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bt_last_product, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_sair1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelActionsLayout.setVerticalGroup(
            jPanelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bt_last_product, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_forward_product, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_back_product, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_first_product, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_sair1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_busca_rapida_product, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_novo_product, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_gravar_product, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_cancelar_novo_product, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bt_excluir_product, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        validationMsgLabel.setFont(new java.awt.Font("Eras Bold ITC", 1, 16)); // NOI18N
        validationMsgLabel.setForeground(new java.awt.Color(255, 0, 0));
        validationMsgLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        validationMsgLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        validationMsgLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPanelDemandMonth.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Demanda Mensal", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 12), new java.awt.Color(51, 51, 51))); // NOI18N

        jLabelDemandUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/7003_32x32.png"))); // NOI18N
        jLabelDemandUp.setEnabled(false);

        jLabelDemandUniform.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/6997_32x32.png"))); // NOI18N
        jLabelDemandUniform.setEnabled(false);

        jLabelDemandDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/7009_32x32.png"))); // NOI18N
        jLabelDemandDown.setEnabled(false);

        jLabelDemandUpNumber.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabelDemandUpNumber.setForeground(new java.awt.Color(102, 102, 102));
        jLabelDemandUpNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelDemandUpNumber.setText("0");
        jLabelDemandUpNumber.setEnabled(false);
        jLabelDemandUpNumber.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabelDemandUniformNumber.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabelDemandUniformNumber.setForeground(new java.awt.Color(102, 102, 102));
        jLabelDemandUniformNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelDemandUniformNumber.setText("0");
        jLabelDemandUniformNumber.setEnabled(false);
        jLabelDemandUniformNumber.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabelDemandDownNumber.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabelDemandDownNumber.setForeground(new java.awt.Color(102, 102, 102));
        jLabelDemandDownNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelDemandDownNumber.setText("0");
        jLabelDemandDownNumber.setEnabled(false);
        jLabelDemandDownNumber.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("Média Mensal:");

        jLabelmeanSaleIndicator.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        jLabelmeanSaleIndicator.setForeground(new java.awt.Color(153, 51, 0));
        jLabelmeanSaleIndicator.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelmeanSaleIndicator.setToolTipText("Clique para visualizar as vendas mensais deste produto");
        jLabelmeanSaleIndicator.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabelmeanSaleIndicator.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelmeanSaleIndicator.setEnabled(false);
        jLabelmeanSaleIndicator.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${product.meanSaleIndicator}  ${product.unityMensurationProduct}"), jLabelmeanSaleIndicator, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabelmeanSaleIndicator.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelmeanSaleIndicatorMouseClicked(evt);
            }
        });

        jListMeanSaleLastYear.setFont(new java.awt.Font("Dialog", 2, 16)); // NOI18N
        jListMeanSaleLastYear.setForeground(new java.awt.Color(0, 0, 102));
        jListMeanSaleLastYear.setEnabled(false);
        jScrollPane4.setViewportView(jListMeanSaleLastYear);

        javax.swing.GroupLayout jPanelDemandMonthLayout = new javax.swing.GroupLayout(jPanelDemandMonth);
        jPanelDemandMonth.setLayout(jPanelDemandMonthLayout);
        jPanelDemandMonthLayout.setHorizontalGroup(
            jPanelDemandMonthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDemandMonthLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanelDemandMonthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(jPanelDemandMonthLayout.createSequentialGroup()
                        .addComponent(jLabelDemandDown)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelDemandDownNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelDemandMonthLayout.createSequentialGroup()
                        .addComponent(jLabelDemandUniform)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelDemandUniformNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelDemandMonthLayout.createSequentialGroup()
                        .addComponent(jLabelDemandUp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelDemandUpNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 49, Short.MAX_VALUE))
            .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabelmeanSaleIndicator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanelDemandMonthLayout.setVerticalGroup(
            jPanelDemandMonthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDemandMonthLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDemandMonthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelDemandUpNumber)
                    .addComponent(jLabelDemandUp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDemandMonthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelDemandUniform)
                    .addComponent(jLabelDemandUniformNumber))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDemandMonthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelDemandDown)
                    .addComponent(jLabelDemandDownNumber))
                .addGap(30, 30, 30)
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelmeanSaleIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Ações");
        jMenu1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jMenu1ItemStateChanged(evt);
            }
        });

        jMenuItemSeachProduct.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSeachProduct.setText("Busca Rápida");
        jMenuItemSeachProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSeachProductActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSeachProduct);

        jMenuItemSeachAdvancedProduct.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSeachAdvancedProduct.setText("Busca Avançada");
        jMenuItemSeachAdvancedProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSeachAdvancedProductActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSeachAdvancedProduct);

        jMenuItemNewProduct.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNewProduct.setText("Novo Produto");
        jMenuItemNewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNewProductActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemNewProduct);

        jMenuItemSaveProduct.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSaveProduct.setText("Salvar");
        jMenuItemSaveProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveProductActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSaveProduct);

        jMenuItemCancelNewProduct.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemCancelNewProduct.setText("Cancelar Novo Produto");
        jMenuItemCancelNewProduct.setEnabled(false);
        jMenuItemCancelNewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCancelNewProductActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemCancelNewProduct);

        jMenuItemDeleteProduct.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemDeleteProduct.setText("Excluir Produto");
        jMenuItemDeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteProductActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemDeleteProduct);

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItemExit.setText("Sair");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Configurações");

        jCheckBoxMenuItemPrintLabelGondolaActualProduct.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jCheckBoxMenuItemPrintLabelGondolaActualProduct.setText("Imprimir Etiqueta Gôndola Produto Atual");
        jCheckBoxMenuItemPrintLabelGondolaActualProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemPrintLabelGondolaActualProductActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItemPrintLabelGondolaActualProduct);

        jCheckBoxMenuItemPrintLabelGondola.setText("Imprimir Etiqueta Gôndola");
        jCheckBoxMenuItemPrintLabelGondola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemPrintLabelGondolaActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItemPrintLabelGondola);

        jMenuItem1.setText("Configurar Percentual de Lucro Categoria ");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        buttonGroupModeViews.add(jCheckBoxMenuItemViewActiveProducts);
        jCheckBoxMenuItemViewActiveProducts.setSelected(true);
        jCheckBoxMenuItemViewActiveProducts.setText("Visualizar Apenas Produtos Ativos");
        jCheckBoxMenuItemViewActiveProducts.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxMenuItemViewActiveProductsItemStateChanged(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItemViewActiveProducts);

        buttonGroupModeViews.add(jCheckBoxMenuItemViewInactivedProducts);
        jCheckBoxMenuItemViewInactivedProducts.setText("Visualizar Produtos Inativos");
        jCheckBoxMenuItemViewInactivedProducts.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxMenuItemViewInactivedProductsItemStateChanged(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItemViewInactivedProducts);

        buttonGroupModeViews.add(jCheckBoxMenuItemViewAllProducts);
        jCheckBoxMenuItemViewAllProducts.setText("Visualizar Todos Produtos");
        jCheckBoxMenuItemViewAllProducts.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxMenuItemViewAllProductsItemStateChanged(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItemViewAllProducts);

        jMenuItem2.setText("Relátorio do Histórico de Demanda do Produto");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(validationMsgLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelActions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelDemandMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabelLoading))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanelActions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(validationMsgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelDemandMonth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelLoading))
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTableProductsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProductsMouseClicked
        if (!isNewProduct) {
            if (jTableProducts.getRowCount() > 0) {
                bt_gravar_product.setEnabled(true);
                jMenuItemSaveProduct.setEnabled(true);
                bt_excluir_product.setEnabled(true);

                position_table = fnPositionTable(jTableProducts, 0);
                jScrollPaneTableProduct.getVerticalScrollBar().setValue(position_table);
                fnSetProduct(consultProduct(jTableProducts.getValueAt(position_table, 0).toString()));

            }
        } else {
            validationMsgLabel.setText("Você esta no modo cadastro de produto. Cancele-o para poder vizualizar outos produtos.");
        }
        if (evt.getClickCount() == 2) {

            jTabbedPane1.setSelectedIndex(0);

        }
    }//GEN-LAST:event_jTableProductsMouseClicked

    private void jTableProductsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableProductsKeyPressed
        if (!isNewProduct) {

            if (jTableProducts.getRowCount() > 0) {
                bt_gravar_product.setEnabled(true);
                bt_excluir_product.setEnabled(true);
                switch (evt.getKeyCode()) {

                    case KeyEvent.VK_DOWN:
                        try {

                            position_table = fnPositionTable(jTableProducts, 1);
                            jScrollPaneTableProduct.getVerticalScrollBar().setValue(position_table);
                            fnSetProduct(consultProduct(jTableProducts.getValueAt(position_table, 0).toString()));
                            jTableProducts.requestFocus(true);
                        } catch (java.lang.ArrayIndexOutOfBoundsException ex) {
                            System.err.println("ERROR::" + ex);
                        }

                        break;

                    case KeyEvent.VK_UP:
                        try {

                            position_table = fnPositionTable(jTableProducts, -1);
                            jScrollPaneTableProduct.getVerticalScrollBar().setValue(position_table);
                            fnSetProduct(consultProduct(jTableProducts.getValueAt(position_table, 0).toString()));
                            jTableProducts.requestFocus(true);
                        } catch (java.lang.ArrayIndexOutOfBoundsException ex) {
                            System.err.println("ERROR::" + ex);

                        }

                        break;

                }
            }
        } else {
            validationMsgLabel.setText("Você esta no modo cadastro de produto. Cancele-o para poder vizualizar outos produtos.");
        }
    }//GEN-LAST:event_jTableProductsKeyPressed

    private void text_preco_compraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_preco_compraKeyReleased

        if (!text_preco_compra.getText().isEmpty()) {
            JTextFieldTools.formatJTextNumber(text_preco_compra);

            if (jLabelPriceBuyRefresh.isEnabled() && !jLabelPriceSaleRefresh.isEnabled()) {

                text_preco_venda_atual.setText(v.format(priceSale(Double.parseDouble(text_preco_compra.getText().replace(",", ".")), Double.parseDouble(text_percentual_lucro.getText().replace(",", ".")))));

            } else if (jLabelPriceSaleRefresh.isEnabled() && !jLabelPriceBuyRefresh.isEnabled()) {

                text_preco_compra.setText(v.format(priceBuyReverse(Double.parseDouble(text_preco_venda_atual.getText().replace(",", ".")), Double.parseDouble(text_percentual_lucro.getText().replace(",", ".")))));

            } else if (jLabelPriceBuyRefresh.isEnabled() && jLabelPriceSaleRefresh.isEnabled()) {

                text_percentual_lucro.setText(v.format(percentagemProfit(Double.parseDouble(text_preco_compra.getText().replace(",", ".")), Double.parseDouble(text_preco_venda_atual.getText().replace(",", ".")))));
            }
        }
    }//GEN-LAST:event_text_preco_compraKeyReleased

    private void text_classKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_classKeyReleased

        if (!text_class.getText().isEmpty()) {
            JTextFieldTools.formatJTextNumber(text_class);
            JTextFieldTools.formatJTextNumber(text_class);
            if (!text_preco_compra.getText().equals("0,00")) {
            }
        }
    }//GEN-LAST:event_text_classKeyReleased

    private void text_percentual_lucroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_percentual_lucroKeyReleased

        if (!text_percentual_lucro.getText().isEmpty()) {
            JTextFieldTools.formatJTextNumber(text_percentual_lucro);

            if (jLabelPriceBuyRefresh.isEnabled() && !jLabelPriceSaleRefresh.isEnabled()) {

                text_preco_venda_atual.setText(v.format(priceSale(Double.parseDouble(text_preco_compra.getText().replace(",", ".")), Double.parseDouble(text_percentual_lucro.getText().replace(",", ".")))));

            } else if (jLabelPriceSaleRefresh.isEnabled() && !jLabelPriceBuyRefresh.isEnabled()) {

                text_preco_compra.setText(v.format(priceBuyReverse(Double.parseDouble(text_preco_venda_atual.getText().replace(",", ".")), Double.parseDouble(text_percentual_lucro.getText().replace(",", ".")))));

            }
        }
    }//GEN-LAST:event_text_percentual_lucroKeyReleased

    private void text_preco_venda_atualKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_preco_venda_atualKeyReleased
        if (!text_preco_venda_atual.getText().isEmpty()) {
            JTextFieldTools.formatJTextNumber(text_preco_venda_atual);

            if (jLabelPriceBuyRefresh.isEnabled() && !jLabelPriceSaleRefresh.isEnabled()) {

                text_preco_venda_atual.setText(v.format(priceSale(Double.parseDouble(text_preco_compra.getText().replace(",", ".")), Double.parseDouble(text_percentual_lucro.getText().replace(",", ".")))));

            } else if (jLabelPriceSaleRefresh.isEnabled() && !jLabelPriceBuyRefresh.isEnabled()) {

                text_preco_compra.setText(v.format(priceBuyReverse(Double.parseDouble(text_preco_venda_atual.getText().replace(",", ".")), Double.parseDouble(text_percentual_lucro.getText().replace(",", ".")))));

            } else if (jLabelPriceBuyRefresh.isEnabled() && jLabelPriceSaleRefresh.isEnabled()) {

                text_percentual_lucro.setText(v.format(percentagemProfit(Double.parseDouble(text_preco_compra.getText().replace(",", ".")), Double.parseDouble(text_preco_venda_atual.getText().replace(",", ".")))));
            }
        }
    }//GEN-LAST:event_text_preco_venda_atualKeyReleased

    private void text_preco_tabela_1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_preco_tabela_1KeyReleased
        JTextFieldTools.formatJTextNumber(text_preco_tabela_1);
    }//GEN-LAST:event_text_preco_tabela_1KeyReleased

    private void text_preco_tabela_2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_preco_tabela_2KeyReleased
        JTextFieldTools.formatJTextNumber(text_preco_tabela_2);
    }//GEN-LAST:event_text_preco_tabela_2KeyReleased

    private void bt_composicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_composicaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt_composicaoActionPerformed

    private void bt_limite_de_vendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_limite_de_vendaActionPerformed

    }//GEN-LAST:event_bt_limite_de_vendaActionPerformed

    private void text_codigo_barraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_codigo_barraKeyReleased
        JTextFieldTools.validarBarCode(text_codigo_barra);
        if (text_codigo_barra.getBackground().equals(Color.YELLOW)) {
            text_codigo_barra.setBackground(whiteColor);
        }
    }//GEN-LAST:event_text_codigo_barraKeyReleased

    private void bt_excluir_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_excluir_productActionPerformed

        functionDelete();

    }//GEN-LAST:event_bt_excluir_productActionPerformed

    private void bt_cancelar_novo_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cancelar_novo_productActionPerformed

        functionCancelNewProduct();
        System.out.println("IS NEW PRODUCT>>>>>>>" + isNewProduct);
    }//GEN-LAST:event_bt_cancelar_novo_productActionPerformed

    private void bt_gravar_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_gravar_productActionPerformed
        functionSaveProduct();
    }//GEN-LAST:event_bt_gravar_productActionPerformed

    private void bt_novo_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_novo_productActionPerformed
        combo_categorias.setSelectedIndex(10);
        combo_unidade_medida_produto.setSelectedIndex(3);
        functionNewProduct();
        System.out.println("IS NEW PRODUCT>>>>>>>" + isNewProduct);

    }//GEN-LAST:event_bt_novo_productActionPerformed

    private void bt_first_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_first_productActionPerformed
        //Vai para primeira posição na tabela
        if (!isNewProduct) {
            if (jTableProducts.getModel().getRowCount() > 0) {
                jTableProducts.setRowSelectionInterval(0, 0);

                fnSetProduct(consultProduct(jTableProducts.getValueAt(jTableProducts.getSelectedRow(), 0).toString()));
                bt_gravar_product.setEnabled(true);
                bt_excluir_product.setEnabled(true);
            }
            jTableProducts.requestFocus(true);
        } else {
            validationMsgLabel.setText("Você esta no modo cadastro de produto. Cancele-o para poder vizualizar outos produtos.");
        }
    }//GEN-LAST:event_bt_first_productActionPerformed

    private void bt_back_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_back_productActionPerformed
        //Retorna uma posição na tabela
        if (!isNewProduct) {
            if (jTableProducts.getRowCount() > 0) {
                bt_gravar_product.setEnabled(true);
                jMenuItemSaveProduct.setEnabled(true);
                bt_excluir_product.setEnabled(true);

                position_table = fnPositionTable(jTableProducts, -1);
                jScrollPaneTableProduct.getVerticalScrollBar().setValue(position_table);
                fnSetProduct(consultProduct(jTableProducts.getValueAt(position_table, 0).toString()));
                jTableProducts.requestFocus(true);
            }
        } else {
            validationMsgLabel.setText("Você esta no modo cadastro de produto. Cancele-o para poder vizualizar outos produtos.");
        }
    }//GEN-LAST:event_bt_back_productActionPerformed

    private void bt_forward_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_forward_productActionPerformed
        //Avança uma posição na tabela
        if (!isNewProduct) {
            if (jTableProducts.getRowCount() > 0) {
                bt_gravar_product.setEnabled(true);
                jMenuItemSaveProduct.setEnabled(true);
                bt_excluir_product.setEnabled(true);

                position_table = fnPositionTable(jTableProducts, 1);
                jScrollPaneTableProduct.getVerticalScrollBar().setValue(position_table);
                fnSetProduct(consultProduct(jTableProducts.getValueAt(position_table, 0).toString()));
                jTableProducts.requestFocus(true);
            }
        } else {
            validationMsgLabel.setText("Você esta no modo cadastro de produto. Cancele-o para poder vizualizar outos produtos.");
        }
    }//GEN-LAST:event_bt_forward_productActionPerformed

    private void bt_last_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_last_productActionPerformed
        //Vai para ultima posição na tabela
        if (!isNewProduct) {
            if (jTableProducts.getModel().getRowCount() > 0) {
                jTableProducts.setRowSelectionInterval(jTableProducts.getModel().getRowCount() - 1, jTableProducts.getModel().getRowCount() - 1);

                fnSetProduct(consultProduct(jTableProducts.getValueAt(jTableProducts.getSelectedRow(), 0).toString()));
                bt_gravar_product.setEnabled(true);
                jMenuItemSaveProduct.setEnabled(true);
                bt_excluir_product.setEnabled(true);

            }
            jTableProducts.requestFocus(true);
        } else {
            validationMsgLabel.setText("Você esta no modo cadastro de produto. Cancele-o para poder vizualizar outos produtos.");
        }
    }//GEN-LAST:event_bt_last_productActionPerformed

    private void bt_sair1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_sair1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_bt_sair1ActionPerformed

    private void bt_busca_rapida_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_busca_rapida_productActionPerformed
        if (!isNewProduct) {
            fnOpenDialogSearchProduct();
            if (par_advanced_search != null) {

                fnSetProduct(consultProduct(par_advanced_search));
                par_advanced_search = null;
            }
        } else {
            validationMsgLabel.setText("Você esta no modo cadastro de produto. Cancele-o para poder vizualizar outos produtos.");
            if (JOptionPane.showConfirmDialog(this, "Você esta no modo cadastro de produto.\n Deseja cancelar o cadastro?", "Exclusão de cadastro", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

                functionCancelNewProduct();
            } else {
                fnOpenDialogSearchProduct();
            }
        }
    }//GEN-LAST:event_bt_busca_rapida_productActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        if (!BeanLogin.isIsRegisterProductsAccess()) {
            JOptionPane.showMessageDialog(this, "Usuário '" + BeanLogin.getUser() + "' não possui autorização para esta função.", "Alerta de Segurança.", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } else {

            if (BeanProductTransition.isControl()) {

                myModelJtableProducts = new MyModelJtableProducts(null, argFilterProdActi);
                jTableProducts.setModel(myModelJtableProducts);

                fnSetProduct(consultProduct(BeanProductTransition.getCode()));
                jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "N° de Produtos: " + jTableProducts.getModel().getRowCount() + "  Categoria Visualizada: Todas Categorias", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 12), new java.awt.Color(51, 51, 51)));

            } else {
                //vendorName();
                //categoryName();
                //jCheckBoxMenuItemViewInactivedProducts.setEnabled(isExistInactiveProduct
                myModelJtableProducts = new MyModelJtableProducts(null, argFilterProdActi);
                jTableProducts.setModel(myModelJtableProducts);

            }
        }

    }//GEN-LAST:event_formWindowOpened

    private void text_codigo_barraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_codigo_barraActionPerformed
        
        controlRelease = false;
        System.out.println("IS NEW PRODUCT>>>>>>>" + isNewProduct);
        functionConsultProduct();

    }//GEN-LAST:event_text_codigo_barraActionPerformed

    private void text_descricao_produtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_descricao_produtoActionPerformed
        text_descricao_resumida.requestFocus(true);
    }//GEN-LAST:event_text_descricao_produtoActionPerformed

    private void text_estoque_minimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_estoque_minimoActionPerformed
        text_estoque_atual.requestFocus(true);
    }//GEN-LAST:event_text_estoque_minimoActionPerformed

    private void text_estoque_atualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_estoque_atualActionPerformed
        bt_gravar_product.requestFocus(true);
    }//GEN-LAST:event_text_estoque_atualActionPerformed

    private void text_classActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_classActionPerformed

    }//GEN-LAST:event_text_classActionPerformed

    private void text_preco_compraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_preco_compraActionPerformed
        text_preco_venda_atual.requestFocus(true);
    }//GEN-LAST:event_text_preco_compraActionPerformed

    private void text_percentual_lucroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_percentual_lucroActionPerformed
        text_preco_venda_atual.requestFocus(true);
    }//GEN-LAST:event_text_percentual_lucroActionPerformed

    private void text_preco_venda_atualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_preco_venda_atualActionPerformed

        if (mode_normal) {
            text_preco_tabela_1.requestFocus(true);
        }
        if (mode_refresh_budget) {
            bt_gravar_product.requestFocus(true);
        }
        if (mode_refresh_price) {
            bt_gravar_product.requestFocus(true);
        }
        if (!text_preco_compra.getText().equals("0,00")) {
            text_percentual_lucro.setText(v.format(percentagemProfit(Double.parseDouble(text_preco_compra.getText().replace(",", ".")), Double.parseDouble(text_preco_venda_atual.getText().replace(",", ".")))));
        }
    }//GEN-LAST:event_text_preco_venda_atualActionPerformed

    private void text_preco_tabela_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_preco_tabela_2ActionPerformed
        text_estoque_minimo.requestFocus(true);
    }//GEN-LAST:event_text_preco_tabela_2ActionPerformed

    private void text_preco_tabela_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_preco_tabela_1ActionPerformed
        text_preco_tabela_2.requestFocus(true);
    }//GEN-LAST:event_text_preco_tabela_1ActionPerformed

    private void jMenu1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jMenu1ItemStateChanged

    }//GEN-LAST:event_jMenu1ItemStateChanged

    private void text_descricao_produtoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_descricao_produtoKeyReleased

        if (text_descricao_produto.getBackground().equals(Color.YELLOW)) {
            text_descricao_produto.setBackground(whiteColor);
        }
    }//GEN-LAST:event_text_descricao_produtoKeyReleased

    private void jButtonSaveFilterCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveFilterCategoryActionPerformed

        for (int i = 0; i < jTableCategoryThisProduct.getRowCount(); i++) {

            if (jTableCategoryThisProduct.getValueAt(i, 0).equals(true)) {
                listArgCatCod.add((String) jTableCategoryThisProduct.getValueAt(i, 1));
                if (argCategory.equals("")) {
                    argCategory += jTableCategoryThisProduct.getValueAt(i, 1);
                    categoryNames += jTableCategoryThisProduct.getValueAt(i, 2);
                } else {
                    argCategory += "," + jTableCategoryThisProduct.getValueAt(i, 1);
                    categoryNames += "," + jTableCategoryThisProduct.getValueAt(i, 2);
                }
            }
        }
        if ((jCheckBoxSelecionarTodasCategorias.isSelected())) {
            categoryNames = "Todas Categorias";
        }
        if (listArgCatCod.size() == jTableCategoryThisProduct.getModel().getRowCount()) {
            categoryNames = "Todas Categorias";
        }
        jDialogFilterCategory.dispose();
    }//GEN-LAST:event_jButtonSaveFilterCategoryActionPerformed

    private void jButtonExitDialogFilterCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitDialogFilterCategoryActionPerformed

        jDialogFilterCategory.dispose();
    }//GEN-LAST:event_jButtonExitDialogFilterCategoryActionPerformed

    private void jCheckBoxSelecionarTodasCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSelecionarTodasCategoriasActionPerformed
        try {
            tabela2 = new MyModel_3(jCheckBoxSelecionarTodasCategorias.isSelected(), listArgCatCod);
            jTableCategoryThisProduct.setModel(tabela2);
        } catch (Exception ex) {
            //////newXML.generateLog(ex.toString());
            System.err.println("ERROR::" + ex);

        }
    }//GEN-LAST:event_jCheckBoxSelecionarTodasCategoriasActionPerformed

    private void jDialogFilterCategoryWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialogFilterCategoryWindowClosed

        myModelJtableProducts = new MyModelJtableProducts(argCategory, argFilterProdActi);
        jTableProducts.setModel(myModelJtableProducts);

        if (jTableProducts.getRowCount() > 0) {
            jTableProducts.setRowSelectionInterval(0, 0);
            String barCod = jTableProducts.getValueAt(jTableProducts.getSelectedRow(), 0).toString();
            fnSetProduct(consultProduct(barCod));
            jTableProducts.requestFocus(true);
        }

        if (!categoryNames.equals("")) {
            jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "N° de Produtos: " + jTableProducts.getModel().getRowCount() + "  Categoria Visualizada: " + categoryNames, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 12), new java.awt.Color(51, 51, 51)));
            jPanel2.setToolTipText(categoryNames);
        } else {
            jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "N° de Produtos: " + jTableProducts.getModel().getRowCount() + "  Categoria Visualizada: Todas Categorias", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 12), new java.awt.Color(51, 51, 51)));
            jPanel2.setToolTipText("Todas Categorias");
        }
        BeanTbl.setHead(head);
        if (argCategory.equals("")) {
            BeanTbl.setSql("SELECT t.`prod_bar_code_product`, t.`prod_description_product`,t.`prod_reserve_actual_product` FROM tbl_product t WHERE prod_isActive = " + isViewActiveProduct + " ORDER BY prod_description_product;");
        } else {
            BeanTbl.setSql("SELECT t.`prod_bar_code_product`, t.`prod_description_product`,t.`prod_reserve_actual_product` FROM tbl_product t WHERE t.`idtbl_category_product` IN(" + argCategory + ") AND prod_isActive = " + isViewActiveProduct + " ORDER BY prod_description_product;");
        }
    }//GEN-LAST:event_jDialogFilterCategoryWindowClosed

    private void jLabelFilterCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelFilterCategoryMouseClicked

        listArgCatCod.clear();
        argCategory = "";
        categoryNames = "";
        Dimension tamanhoDialogMain = getSize();
        Dimension tamanhoDialog1 = jDialogFilterCategory.getPreferredSize();
        Point loc = getLocation();
        jDialogFilterCategory.setLocation(
                (tamanhoDialogMain.width - tamanhoDialog1.width) / 2 + loc.x,
                (tamanhoDialogMain.height - tamanhoDialog1.height) / 2 + loc.y);
        jDialogFilterCategory.setModal(true);
        jDialogFilterCategory.pack();
        jDialogFilterCategory.setVisible(true);
    }//GEN-LAST:event_jLabelFilterCategoryMouseClicked

    private void text_descricao_resumidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_descricao_resumidaActionPerformed
        combo_unidade_medida_produto.requestFocus(true);
    }//GEN-LAST:event_text_descricao_resumidaActionPerformed

    private void combo_categoriasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_categoriasKeyPressed
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {
            text_preco_compra.requestFocus(true);

            if (!dontShowMessaage1) {
                JCheckBox checkbox = new JCheckBox("Não exibir esta mensagem novamente.");

                String message1 = "Deseja passar o percentual de lucro da categoria para o produto?";
                Object[] params = {message1, checkbox};

                if (JOptionPane.showConfirmDialog(this, params, "Informação.", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {

                    if (BeanLogin.isIsRegisterCategoryAccess()) {

                        functionSetPercProfit();

                    } else {

                        JOptionPane.showMessageDialog(this, "Você não tem acesso a esta função.", "Acesso Negado!", JOptionPane.INFORMATION_MESSAGE);

                    }

                }
                dontShowMessaage1 = checkbox.isSelected();

            } else {

                functionSetPercProfit();

            }

        }
    }//GEN-LAST:event_combo_categoriasKeyPressed

    private void combo_tipo_producaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_tipo_producaoKeyPressed
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {
            combo_categorias.requestFocus(true);
        }
    }//GEN-LAST:event_combo_tipo_producaoKeyPressed

    private void combo_unidade_medida_produtoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_unidade_medida_produtoKeyPressed
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {
            combo_tipo_producao.requestFocus(true);
        }
    }//GEN-LAST:event_combo_unidade_medida_produtoKeyPressed

    private void text_descricao_resumidaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_descricao_resumidaKeyReleased

        if (text_descricao_resumida.getBackground().equals(Color.YELLOW)) {
            text_descricao_resumida.setBackground(whiteColor);
        }
        if (text_descricao_resumida.getText().length() > 30) {

            text_descricao_resumida.setText(text_descricao_resumida.getText().substring(0, 30));

        }
    }//GEN-LAST:event_text_descricao_resumidaKeyReleased

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void text_preco_venda_atualFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_preco_venda_atualFocusGained
        text_preco_venda_atual.setSelectionStart(0);
        text_preco_venda_atual.setSelectionEnd(text_preco_venda_atual.getText().length());
        controlRelease = true;
    }//GEN-LAST:event_text_preco_venda_atualFocusGained

    private void text_preco_compraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_preco_compraFocusGained
        text_preco_compra.setSelectionStart(0);
        text_preco_compra.setSelectionEnd(text_preco_compra.getText().length());
    }//GEN-LAST:event_text_preco_compraFocusGained

    private void text_classFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_classFocusGained
        text_class.setSelectionStart(0);
        text_class.setSelectionEnd(text_class.getText().length());
    }//GEN-LAST:event_text_classFocusGained

    private void text_percentual_lucroFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_percentual_lucroFocusGained
        text_percentual_lucro.setSelectionStart(0);
        text_percentual_lucro.setSelectionEnd(text_class.getText().length());
    }//GEN-LAST:event_text_percentual_lucroFocusGained

    private void text_descricao_produtoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_descricao_produtoFocusLost
        text_descricao_produto.setText(text_descricao_produto.getText().toUpperCase());


    }//GEN-LAST:event_text_descricao_produtoFocusLost

    private void text_descricao_resumidaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_descricao_resumidaFocusLost

        text_descricao_resumida.setText(text_descricao_resumida.getText().toUpperCase());


    }//GEN-LAST:event_text_descricao_resumidaFocusLost

    private void text_descricao_produtoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_descricao_produtoFocusGained
        if (text_descricao_produto.getBackground().equals(Color.YELLOW)) {
            text_descricao_produto.setBackground(whiteColor);
        }
    }//GEN-LAST:event_text_descricao_produtoFocusGained

    private void text_codigo_barraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_codigo_barraFocusGained
        if (text_codigo_barra.getBackground().equals(Color.YELLOW)) {
            text_codigo_barra.setBackground(whiteColor);
        }

        text_codigo_barra.setSelectionEnd(text_codigo_barra.getText().length());
        text_codigo_barra.setSelectionStart(0);
    }//GEN-LAST:event_text_codigo_barraFocusGained

    private void text_descricao_resumidaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_descricao_resumidaFocusGained
        if (text_descricao_resumida.getBackground().equals(Color.YELLOW)) {
            text_descricao_resumida.setBackground(whiteColor);
        }
    }//GEN-LAST:event_text_descricao_resumidaFocusGained

    private void jMenuItemCancelNewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCancelNewProductActionPerformed

        functionCancelNewProduct();

    }//GEN-LAST:event_jMenuItemCancelNewProductActionPerformed

    private void jMenuItemNewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNewProductActionPerformed

        functionNewProduct();
    }//GEN-LAST:event_jMenuItemNewProductActionPerformed

    private void jMenuItemSaveProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveProductActionPerformed
        functionSaveProduct();
    }//GEN-LAST:event_jMenuItemSaveProductActionPerformed

    private void jMenuItemSeachProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSeachProductActionPerformed
        if (!isNewProduct) {
            Dimension tamanhoDialogMain = getSize();
            Dimension tamanhoDialog1 = jDialogConsultProduct.getPreferredSize();
            Point loc = getLocation();
            jDialogConsultProduct.setLocation(
                    (tamanhoDialogMain.width - tamanhoDialog1.width) / 2 + loc.x,
                    (tamanhoDialogMain.height - tamanhoDialog1.height) / 2 + loc.y);
            jDialogConsultProduct.setModal(true);
            jDialogConsultProduct.pack();
            jDialogConsultProduct.setVisible(true);
            text_preco_venda_atual.requestFocus(true);
            text_preco_venda_atual.setSelectionStart(0);
            text_preco_venda_atual.setSelectionEnd(text_preco_venda_atual.getText().length());

        } else {
            validationMsgLabel.setText("Você esta no modo cadastro de produto. Cancele-o para poder vizualizar outos produtos.");
        }
    }//GEN-LAST:event_jMenuItemSeachProductActionPerformed

    private void text_preco_compraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_preco_compraFocusLost
        if (!text_preco_compra.getText().isEmpty()) {
            isEditpriceBuy = Double.parseDouble(text_preco_compra.getText().replace(",", ".")) > 0;
        }
    }//GEN-LAST:event_text_preco_compraFocusLost

    private void jTextProductCodeConsultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextProductCodeConsultActionPerformed
        if (jTextProductCodeConsult.getText().length() > 0) {
            int consultProd = ClassSale.searchProduct(text_codigo_barra.getText(), false, 0, false, false);
            if (consultProd == 0) {
                fnSetProduct(consultProduct(jTextProductCodeConsult.getText()));
                jTextProductCodeConsult.setText("");
                //jDialogConsultProduct.dispose();
                bt_gravar_product.setEnabled(true);

            } else if (consultProd == 1) {
                validationMsgLabel.setText("Produto não cadastrado[" + jTextProductCodeConsult.getText() + "]");
                jTextProductCodeConsult.setText("");
            }
        }
    }//GEN-LAST:event_jTextProductCodeConsultActionPerformed

    private void jTextProductCodeConsultKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextProductCodeConsultKeyPressed
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ESCAPE) {
            jDialogConsultProduct.hide();
        }
    }//GEN-LAST:event_jTextProductCodeConsultKeyPressed

    private void jTextProductCodeConsultKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextProductCodeConsultKeyReleased

    }//GEN-LAST:event_jTextProductCodeConsultKeyReleased

    private void jCheckBoxMenuItemPrintLabelGondolaActualProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemPrintLabelGondolaActualProductActionPerformed
        if (isPrintService) {
            functionPrintLabelGondola();
        } else {
            validationMsgLabel.setText("Serviço de impressao desativado. Verifica a opção na janela principal.");
        }

    }//GEN-LAST:event_jCheckBoxMenuItemPrintLabelGondolaActualProductActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        if (!text_codigo_barra.getText().isEmpty()) {
            try {
                myModelJTableCheked = new MyModelJTableCheked(false);
                jTableProfitMean.setModel(myModelJTableCheked);
            } catch (Exception ex) {
                //////newXML.generateLog(ex.toString());
                System.err.println("ERROR::" + ex);

            }
            Dimension tamanhoDialogMain = getSize();
            Dimension tamanhoDialog1 = jDialogProfitMeanCategory.getPreferredSize();
            Point loc = getLocation();
            jDialogProfitMeanCategory.setLocation(
                    (tamanhoDialogMain.width - tamanhoDialog1.width) / 2 + loc.x,
                    (tamanhoDialogMain.height - tamanhoDialog1.height) / 2 + loc.y);
            jDialogProfitMeanCategory.setModal(true);
            jDialogProfitMeanCategory.pack();
            jDialogProfitMeanCategory.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jCheckBoxIsActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxIsActiveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxIsActiveActionPerformed

    private void combo_vendor_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_vendor_productActionPerformed
        combo_categorias.requestFocus(true);
    }//GEN-LAST:event_combo_vendor_productActionPerformed

    private void combo_vendor_productKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_vendor_productKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_vendor_productKeyPressed

    private void text_preco_venda_prazoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_preco_venda_prazoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_preco_venda_prazoActionPerformed

    private void text_preco_venda_prazoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_preco_venda_prazoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_text_preco_venda_prazoFocusGained

    private void text_preco_venda_prazoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_preco_venda_prazoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_text_preco_venda_prazoKeyReleased

    private void jLabel23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseClicked

        if (!text_codigo_barra.getText().isEmpty()) {
            BeanProductTransition.setControl(true);
            BeanProductTransition.setCode(product.getBarCodeProduct());
            BeanProductTransition.setDescription(product.getDescriptionProduct());
            JDialogVendorProduct_3_0.argVendorProduct = text_codigo_barra.getText();
            new JDialogVendorProduct_3_0(null, true).setVisible(true);
            fnSetProduct(consultProduct(text_codigo_barra.getText()));
            /*
             argVendorProduct = text_codigo_barra.getText();
             Dimension tamanhoDialogMain = getSize();
             Dimension tamanhoDialog1 = jDialogVendor.getPreferredSize();
             Point loc = getLocation();
             jDialogVendor.setLocation(
             (tamanhoDialogMain.width - tamanhoDialog1.width) / 2 + loc.x,
             (tamanhoDialogMain.height - tamanhoDialog1.height) / 2 + loc.y);
             //jDialogVendor.setModal(true);
             jDialogVendor.pack();
             jDialogVendor.setVisible(true);
             fnSetProduct(consultProduct(text_codigo_barra.getText()));
             */
        }
    }//GEN-LAST:event_jLabel23MouseClicked

    private void text_percentual_contribuiçao1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao1ActionPerformed

    private void text_percentual_contribuiçao1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao1FocusGained

    private void text_percentual_contribuiçao1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao1KeyReleased

    private void text_percentual_contribuiçao2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao2ActionPerformed

    private void text_percentual_contribuiçao2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao2FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao2FocusGained

    private void text_percentual_contribuiçao2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao2KeyReleased

    private void text_percentual_contribuiçao4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao4ActionPerformed

    private void text_percentual_contribuiçao4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao4FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao4FocusGained

    private void text_percentual_contribuiçao4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao4KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao4KeyReleased

    private void text_percentual_contribuiçao5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao5ActionPerformed

    private void text_percentual_contribuiçao5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao5FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao5FocusGained

    private void text_percentual_contribuiçao5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao5KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao5KeyReleased

    private void text_percentual_contribuiçao6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao6ActionPerformed

    private void text_percentual_contribuiçao6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao6FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao6FocusGained

    private void text_percentual_contribuiçao6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao6KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao6KeyReleased

    private void text_percentual_contribuiçao7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao7ActionPerformed

    private void text_percentual_contribuiçao7FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao7FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao7FocusGained

    private void text_percentual_contribuiçao7KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao7KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao7KeyReleased

    private void text_percentual_contribuiçao8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao8ActionPerformed

    private void text_percentual_contribuiçao8FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao8FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao8FocusGained

    private void text_percentual_contribuiçao8KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao8KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao8KeyReleased

    private void text_percentual_contribuiçao13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao13ActionPerformed

    private void text_percentual_contribuiçao13FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao13FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao13FocusGained

    private void text_percentual_contribuiçao13KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao13KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao13KeyReleased

    private void text_percentual_contribuiçao14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao14ActionPerformed

    private void text_percentual_contribuiçao14FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao14FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao14FocusGained

    private void text_percentual_contribuiçao14KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao14KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao14KeyReleased

    private void text_percentual_contribuiçao15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao15ActionPerformed

    private void text_percentual_contribuiçao15FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao15FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao15FocusGained

    private void text_percentual_contribuiçao15KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao15KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao15KeyReleased

    private void text_percentual_contribuiçao16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao16ActionPerformed

    private void text_percentual_contribuiçao16FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao16FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao16FocusGained

    private void text_percentual_contribuiçao16KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_percentual_contribuiçao16KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_text_percentual_contribuiçao16KeyReleased

    private void combo_tipo_producaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_tipo_producaoActionPerformed
        combo_categorias.requestFocus(true);
    }//GEN-LAST:event_combo_tipo_producaoActionPerformed

    private void jMenuItemSeachAdvancedProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSeachAdvancedProductActionPerformed
        if (!isNewProduct) {
            fnOpenDialogSearchProduct();
        } else {
            validationMsgLabel.setText("Você esta no modo cadastro de produto. Cancele-o para poder vizualizar outos produtos.");
            if (JOptionPane.showConfirmDialog(this, "Você esta no modo cadastro de produto.\n Deseja cancelar o cadastro?", "Exclusão de cadastro", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                functionCancelNewProduct();
            } else {
                fnOpenDialogSearchProduct();
            }
        }
    }//GEN-LAST:event_jMenuItemSeachAdvancedProductActionPerformed

    private void textValueAdvancedSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textValueAdvancedSearchActionPerformed
        if (!textValueAdvancedSearch.getText().isEmpty()) {

            String arg = " prod_description_product  LIKE '%" + textValueAdvancedSearch.getText() + "%' ORDER BY prod_description_product;";

            try {

                tableModelAdvancedSearch = new MyModelJtableAdvancedSearch(arg);
                jTableAdvancedSearch.setModel(tableModelAdvancedSearch);

            } catch (Exception ex) {
                System.err.println("ERROR MODEL TABLE AVANCED SEARCH::" + ex);
                //////newXML.generateLog(ex.toString());
                System.err.println("ERROR::" + ex);

            }

        }
    }//GEN-LAST:event_textValueAdvancedSearchActionPerformed

    private void textValueAdvancedSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textValueAdvancedSearchFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_textValueAdvancedSearchFocusGained

    private void textValueAdvancedSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textValueAdvancedSearchFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_textValueAdvancedSearchFocusLost

    private void textValueAdvancedSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textValueAdvancedSearchKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_textValueAdvancedSearchKeyReleased

    private void jTableAdvancedSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAdvancedSearchMouseClicked

        if (evt.getClickCount() == 2) {

            par_advanced_search = jTableAdvancedSearch.getValueAt(jTableAdvancedSearch.getSelectedRow(), 0).toString();
            jDialogSearchAdvanced.dispose();
        }

    }//GEN-LAST:event_jTableAdvancedSearchMouseClicked

    private void textBarCodeAdvancedSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBarCodeAdvancedSearchActionPerformed
        if (!textBarCodeAdvancedSearch.getText().isEmpty()) {

            String arg = " prod_bar_code_product  LIKE '%" + textBarCodeAdvancedSearch.getText() + "%' ORDER BY prod_bar_code_product;";
            try {

                tableModelAdvancedSearch = new MyModelJtableAdvancedSearch(arg);
                jTableAdvancedSearch.setModel(tableModelAdvancedSearch);

            } catch (Exception ex) {
                System.err.println("ERROR MODEL TABLE AVANCED SEARCH::" + ex);
                //////newXML.generateLog(ex.toString());
                System.err.println("ERROR::" + ex);

            }

        }
    }//GEN-LAST:event_textBarCodeAdvancedSearchActionPerformed

    private void textBarCodeAdvancedSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textBarCodeAdvancedSearchFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_textBarCodeAdvancedSearchFocusGained

    private void textBarCodeAdvancedSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBarCodeAdvancedSearchKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_textBarCodeAdvancedSearchKeyReleased

    private void jCheckBoxMenuItemPrintLabelGondolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemPrintLabelGondolaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxMenuItemPrintLabelGondolaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            Method something
                    = this.getClass().getDeclaredMethod("fnPrintCardProduct", new Class[0]);

            ClassLoadingMethods.loading(something, this); // Aqui enviamos o metodo doIt !  
        } catch (NoSuchMethodException | SecurityException ex) {
            ////newXML.generateLog(ex.toString());
            System.err.println("ERROR::" + ex);

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jDialogConsultProductWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialogConsultProductWindowActivated
        //código para sair da JDialog com ESC
        Toolkit.getDefaultToolkit().addAWTEventListener(new AWTEventListener() {

            @Override
            public void eventDispatched(final AWTEvent event) {
                if (event.getID() == KeyEvent.KEY_PRESSED) {
                    final KeyEvent evt = (KeyEvent) event;

                    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {

                        jDialogConsultProduct.dispose();

                    }
                }

            }
        }, AWTEvent.KEY_EVENT_MASK);
    }//GEN-LAST:event_jDialogConsultProductWindowActivated

    private void text_estoque_atualFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_estoque_atualFocusGained
        text_estoque_atual.setSelectionStart(0);
        text_estoque_atual.setSelectionEnd(text_estoque_atual.getText().length());
    }//GEN-LAST:event_text_estoque_atualFocusGained

    private void jCheckBoxMenuItemViewActiveProductsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemViewActiveProductsItemStateChanged
        argFilterProdActi = 1;
        myModelJtableProducts = new MyModelJtableProducts(null, argFilterProdActi);
        jTableProducts.setModel(myModelJtableProducts);
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "N° de Produtos: " + jTableProducts.getModel().getRowCount() + "  Categoria Visualizada:" + categoryNames, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 12), new java.awt.Color(51, 51, 51)));
    }//GEN-LAST:event_jCheckBoxMenuItemViewActiveProductsItemStateChanged

    private void jCheckBoxMenuItemViewInactivedProductsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemViewInactivedProductsItemStateChanged
        if (isExistInactiveProduct()) {
            argFilterProdActi = 0;
            myModelJtableProducts = new MyModelJtableProducts(null, argFilterProdActi);
            jTableProducts.setModel(myModelJtableProducts);
            jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "N° de Produtos: " + jTableProducts.getModel().getRowCount() + "  Categoria Visualizada:" + categoryNames, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 12), new java.awt.Color(51, 51, 51)));
        }
    }//GEN-LAST:event_jCheckBoxMenuItemViewInactivedProductsItemStateChanged

    private void jLabelmeanSaleIndicatorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelmeanSaleIndicatorMouseClicked

        try {

            jtableMeanSaleProducts = new MyModelJtableMeanSaleProducts(product.getBarCodeProduct());
            jTableMeanSale.setModel(jtableMeanSaleProducts);

        } catch (Exception ex) {
            //////newXML.generateLog(ex.toString());
            System.err.println("ERROR::" + ex);

        }
        Dimension tamanhoDialogMain = getSize();
        Dimension tamanhoDialog1 = jDialogMeanSale.getPreferredSize();
        Point loc = getLocation();
        jDialogMeanSale.setLocation(
                (tamanhoDialogMain.width - tamanhoDialog1.width) / 2 + loc.x,
                (tamanhoDialogMain.height - tamanhoDialog1.height) / 2 + loc.y);
        jDialogMeanSale.setModal(true);
        jDialogMeanSale.pack();
        jDialogMeanSale.setVisible(true);
    }//GEN-LAST:event_jLabelmeanSaleIndicatorMouseClicked

    private void jTableMeanSaleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableMeanSaleKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            jDialogMeanSale.dispose();
        }
    }//GEN-LAST:event_jTableMeanSaleKeyPressed

    private void jScrollPane1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jScrollPane1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            jDialogMeanSale.dispose();
        }
    }//GEN-LAST:event_jScrollPane1KeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        fnSetProfitMeanCategory();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        jDialogProfitMeanCategory.dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jCheckBoxSelecionarTodosVareduraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSelecionarTodosVareduraActionPerformed
        try {
            myModelJTableCheked = new MyModelJTableCheked(jCheckBoxSelecionarTodosVaredura.isSelected());
            jTableProfitMean.setModel(myModelJTableCheked);
        } catch (Exception ex) {
            //////newXML.generateLog(ex.toString());
            System.err.println("ERROR::" + ex);

        }
    }//GEN-LAST:event_jCheckBoxSelecionarTodosVareduraActionPerformed

    private void jTextFieldValueLucroVareduraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldValueLucroVareduraActionPerformed
        fnSetProfitMeanCategory();
    }//GEN-LAST:event_jTextFieldValueLucroVareduraActionPerformed

    private void jTextFieldValueLucroVareduraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldValueLucroVareduraKeyReleased
        JTextFieldTools.formatJTextNumber(jTextFieldValueLucroVaredura);
    }//GEN-LAST:event_jTextFieldValueLucroVareduraKeyReleased

    private void jLabel35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel35MouseClicked

        if (controlLock1) {
            jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/lock_open22x22.png")));
            text_percentual_lucro.setEnabled(true);
            text_percentual_lucro.requestFocus(true);
            controlLock1 = false;

        } else {

            jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/lock_closed22x22.png")));
            text_percentual_lucro.setEnabled(false);
            text_percentual_lucro.requestFocus(false);
            controlLock1 = true;

        }

    }//GEN-LAST:event_jLabel35MouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

    }//GEN-LAST:event_formWindowClosed

    private void combo_categoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_categoriasActionPerformed


    }//GEN-LAST:event_combo_categoriasActionPerformed

    private void jLabelPriceSaleRefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPriceSaleRefreshMouseClicked
        if (jLabelPriceSaleRefresh.isEnabled()) {
            jLabelPriceSaleRefresh.setEnabled(false);
        } else {
            jLabelPriceSaleRefresh.setEnabled(true);
        }
    }//GEN-LAST:event_jLabelPriceSaleRefreshMouseClicked

    private void jLabelPriceBuyRefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPriceBuyRefreshMouseClicked
        if (jLabelPriceBuyRefresh.isEnabled()) {
            jLabelPriceBuyRefresh.setEnabled(false);
        } else {
            jLabelPriceBuyRefresh.setEnabled(true);
        }
    }//GEN-LAST:event_jLabelPriceBuyRefreshMouseClicked

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        if (!text_codigo_barra.getText().isEmpty()) {
            try {
                Method something
                        = this.getClass().getDeclaredMethod("functionPrintReportDemandProduct", new Class[0]);

                ClassLoadingMethods.loading(something, this); // Aqui enviamos o metodo doIt !  
            } catch (NoSuchMethodException | SecurityException ex) {
                ////newXML.generateLog(ex.toString());
                System.err.println("ERROR::" + ex);

                System.err.println("ERROR:::" + ex);
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void combo_categoriasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_categoriasFocusLost

    }//GEN-LAST:event_combo_categoriasFocusLost

    private void jLabel41MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel41MouseClicked
        new JDialog_Unity_Measure(null, true).setVisible(true);

    }//GEN-LAST:event_jLabel41MouseClicked

    private void jCheckBoxMenuItemViewAllProductsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemViewAllProductsItemStateChanged
        argFilterProdActi = -1;
        myModelJtableProducts = new MyModelJtableProducts(null, argFilterProdActi);
        jTableProducts.setModel(myModelJtableProducts);
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "N° de Produtos: " + jTableProducts.getModel().getRowCount() + "  Categoria Visualizada:" + categoryNames, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 12), new java.awt.Color(51, 51, 51)));

    }//GEN-LAST:event_jCheckBoxMenuItemViewAllProductsItemStateChanged

    private void jMenuItemDeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteProductActionPerformed
        functionDelete();
    }//GEN-LAST:event_jMenuItemDeleteProductActionPerformed

    private void jDialogVendorWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialogVendorWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_jDialogVendorWindowClosed

    private void jCheckBoxSelectAllVendorThisProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSelectAllVendorThisProductActionPerformed

        if (!argVendorProduct.isEmpty()) {

            try {

                tableModelVendorProduct = new MyModelJtableVendorProduct(jCheckBoxSelectAllVendorThisProduct.isSelected(), argVendorProduct);
                jTableVendorThisProduct.setModel(tableModelVendorProduct);

            } catch (Exception ex) {
                //////newXML.generateLog(ex.toString());
                System.err.println("ERROR::" + ex);

                System.err.println("ERRO MODEL TABLE VENDOR::" + ex);
            }
        }
    }//GEN-LAST:event_jCheckBoxSelectAllVendorThisProductActionPerformed

    private void jButtonAddVendorThisProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddVendorThisProductActionPerformed
        new JDialogRegisterVendor_3_1(null, true).setVisible(true);
    }//GEN-LAST:event_jButtonAddVendorThisProductActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir o fornecedor?", "Alerta!", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            boolean ret = false;
            List<String> listArg = new ArrayList<>();

            if (!argVendorProduct.isEmpty()) {

                for (int i = 0; i < jTableVendorThisProduct.getRowCount(); i++) {

                    if (jTableVendorThisProduct.getValueAt(i, 0).equals(true)) {
                        listArg.add((String) jTableVendorThisProduct.getValueAt(i, 1));

                    }
                }
                if (!listArg.isEmpty()) {

                    for (String listArg1 : listArg) {

                        ret = ClassVendor.removeProductVendor(argVendorProduct, listArg1);
                        System.err.println("RETURN REMOVE:::" + ret);
                        System.err.println("BAR CODE REMOVE:::" + argVendorProduct);
                        System.err.println("ARG REMOVE:::" + listArg1);

                    }
                    if (ret) {

                        try {

                            tableModelVendorProduct = new MyModelJtableVendorProduct(jCheckBoxSelectAllVendorThisProduct.isSelected(), argVendorProduct);
                            jTableVendorThisProduct.setModel(tableModelVendorProduct);

                        } catch (Exception ex) {
                            //////newXML.generateLog(ex.toString());
                            System.err.println("ERROR::" + ex);

                            System.err.println("ERRO MODEL TABLE VENDOR::" + ex);
                        }

                        JOptionPane.showMessageDialog(this, "Fornecedor(es) removido(s) com sucesso.");
                    } else {
                        JOptionPane.showMessageDialog(this, "Erro ao remover fornecedor(es).");
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Selecione pelo menos um fornecedor para ser removido.");
                }
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {

            tableModelVendorProduct = new MyModelJtableVendorProduct(jCheckBoxSelectAllVendorThisProduct.isSelected(), argVendorProduct);
            jTableVendorThisProduct.setModel(tableModelVendorProduct);

        } catch (Exception ex) {
            //////newXML.generateLog(ex.toString());
            System.err.println("ERROR::" + ex);

            System.err.println("ERROR MODEL TABLE VENDOR::" + ex);
        }
        if (jTableVendorThisProduct.getRowCount() == 0) {
            jLabelMessageVendorThisProduct.setText("Não ha fornecedores cadastrados a este produto.");
        } else {
            jLabelMessageVendorThisProduct.setText("");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButtonExitJdialogVendorThisProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitJdialogVendorThisProductActionPerformed
        jDialogVendor.dispose();
    }//GEN-LAST:event_jButtonExitJdialogVendorThisProductActionPerformed

    private void jTableVendorThisProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVendorThisProductMouseClicked
        if (jTableVendorThisProduct.getRowCount() > 0) {
            if (evt.getClickCount() == 2) {
                idVendor = (String) jTableVendorThisProduct.getValueAt(jTableVendorThisProduct.getSelectedRow(), 1);
                new JDialogRegisterVendor_3_1(null, true).setVisible(true);
            }
        }
    }//GEN-LAST:event_jTableVendorThisProductMouseClicked

    private void jDialogVendorWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialogVendorWindowActivated
        if (!argVendorProduct.isEmpty()) {

            try {
                this.setTitle("Fornecedor(es) do produto [" + argVendorProduct + "].");
                tableModelVendorProduct = new MyModelJtableVendorProduct(jCheckBoxSelectAllVendorThisProduct.isSelected(), argVendorProduct);
                jTableVendorThisProduct.setModel(tableModelVendorProduct);

            } catch (Exception ex) {
                //////newXML.generateLog(ex.toString());
                System.err.println("ERROR::" + ex);

                System.err.println("ERRO MODEL TABLE VENDOR::" + ex);
            }
            if (jTableVendorThisProduct.getRowCount() == 0) {
                jLabelMessageVendorThisProduct.setText("Não ha fornecedores cadastrados a este produto.");
            } else {
                jLabelMessageVendorThisProduct.setText("");
            }
        }
    }//GEN-LAST:event_jDialogVendorWindowActivated

    private void jDialogFilterCategoryWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialogFilterCategoryWindowActivated
        try {

            tabela2 = new MyModel_3(false, listArgCatCod);
            jTableCategoryThisProduct.setModel(tabela2);

        } catch (Exception ex) {
            //////newXML.generateLog(ex.toString());
            System.err.println("ERROR::" + ex);
        }
    }//GEN-LAST:event_jDialogFilterCategoryWindowActivated

    private void jDialogSearchAdvancedWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jDialogSearchAdvancedWindowActivated
        //código para sair da JDialog com ESC
        Toolkit.getDefaultToolkit().addAWTEventListener(new AWTEventListener() {

            @Override
            public void eventDispatched(final AWTEvent event) {
                if (event.getID() == KeyEvent.KEY_PRESSED) {
                    final KeyEvent evt = (KeyEvent) event;

                    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {

                        jDialogSearchAdvanced.dispose();

                    }
                }

            }
        }, AWTEvent.KEY_EVENT_MASK);
    }//GEN-LAST:event_jDialogSearchAdvancedWindowActivated

    /**
     * @param args the command line arguments
     *
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            ////newXML.generateLog(ex.toString());
            System.err.println("ERROR::" + ex);

            java.util.logging.Logger.getLogger(JDialogProduct_2_0.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JDialogProduct_2_0 dialog = new JDialogProduct_2_0(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_back_product;
    private javax.swing.JButton bt_busca_rapida_product;
    private javax.swing.JButton bt_cancelar_novo_product;
    private javax.swing.JButton bt_composicao;
    private javax.swing.JButton bt_excluir_product;
    private javax.swing.JButton bt_first_product;
    private javax.swing.JButton bt_forward_product;
    private javax.swing.JButton bt_gravar_product;
    private javax.swing.JButton bt_last_product;
    private javax.swing.JButton bt_limite_de_venda;
    private javax.swing.JButton bt_novo_product;
    private javax.swing.JButton bt_sair1;
    private javax.swing.ButtonGroup buttonGroupModeViews;
    private javax.swing.ButtonGroup buttonGroupModesActions;
    public static javax.swing.JComboBox combo_categorias;
    private javax.swing.JComboBox combo_tipo_producao;
    private javax.swing.JComboBox combo_unidade_medida_produto;
    public static javax.swing.JComboBox combo_vendor_product;
    private action.DateConverter dateConverter1;
    private action.DecimalConverter decimalConverter1;
    private action.DecimalConverterProfite decimalConverterProfite1;
    private action.DecimalConverterReserveValues decimalConverterReserveValues1;
    private action.DoubleValidator doubleValidator1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButtonAddVendorThisProduct;
    private javax.swing.JButton jButtonExitDialogFilterCategory;
    private javax.swing.JButton jButtonExitJdialogVendorThisProduct;
    private javax.swing.JButton jButtonSaveFilterCategory;
    private javax.swing.JCheckBox jCheckBoxIsActive;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemPrintLabelGondola;
    private javax.swing.JMenuItem jCheckBoxMenuItemPrintLabelGondolaActualProduct;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemViewActiveProducts;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemViewAllProducts;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemViewInactivedProducts;
    private javax.swing.JCheckBox jCheckBoxSelecionarTodasCategorias;
    private javax.swing.JCheckBox jCheckBoxSelecionarTodosVaredura;
    private javax.swing.JCheckBox jCheckBoxSelectAllVendorThisProduct;
    private javax.swing.JDialog jDialogConsultProduct;
    private javax.swing.JDialog jDialogFilterCategory;
    private javax.swing.JDialog jDialogMeanSale;
    private javax.swing.JDialog jDialogProfitMeanCategory;
    private javax.swing.JDialog jDialogSearchAdvanced;
    private javax.swing.JDialog jDialogVendor;
    private javax.swing.JFormattedTextField jFormattedTexDateLastModification;
    private javax.swing.JFormattedTextField jFormattedTextDateCreation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JLabel jLabelDemandDown;
    public static javax.swing.JLabel jLabelDemandDownNumber;
    public static javax.swing.JLabel jLabelDemandUniform;
    public static javax.swing.JLabel jLabelDemandUniformNumber;
    private static javax.swing.JLabel jLabelDemandUp;
    public static javax.swing.JLabel jLabelDemandUpNumber;
    private javax.swing.JLabel jLabelFilterCategory;
    private javax.swing.JLabel jLabelIconCodBarConsultProduct;
    private javax.swing.JLabel jLabelLoading;
    private javax.swing.JLabel jLabelMessageVendorThisProduct;
    private javax.swing.JLabel jLabelPriceBuyRefresh;
    private javax.swing.JLabel jLabelPriceSaleRefresh;
    public static javax.swing.JLabel jLabelmeanSaleIndicator;
    private javax.swing.JList jListMeanSaleLastYear;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItemCancelNewProduct;
    private javax.swing.JMenuItem jMenuItemDeleteProduct;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemNewProduct;
    private javax.swing.JMenuItem jMenuItemSaveProduct;
    private javax.swing.JMenuItem jMenuItemSeachAdvancedProduct;
    private javax.swing.JMenuItem jMenuItemSeachProduct;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanelActions;
    private javax.swing.JPanel jPanelDemandMonth;
    private javax.swing.JPanel jPanelDetaialsProduct;
    private javax.swing.JPanel jPanelFinancialProduct;
    private javax.swing.JPanel jPanelOthers;
    private javax.swing.JPanel jPanelTributeProduct;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPaneTableProduct;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableAdvancedSearch;
    private javax.swing.JTable jTableCategoryThisProduct;
    private javax.swing.JTable jTableMeanSale;
    private javax.swing.JTable jTableProducts;
    private javax.swing.JTable jTableProfitMean;
    private javax.swing.JTable jTableVendorThisProduct;
    private javax.swing.JTextField jTextFieldValueLucroVaredura;
    public static javax.swing.JTextField jTextProductCodeConsult;
    private javax.swing.JPanel panelBackground;
    private javax.swing.JLabel rotulo_composicao;
    private javax.swing.JLabel rotulo_estoque_financeiro_produto;
    private javax.swing.JLabel rotulo_preco_medio_compra;
    private javax.swing.JLabel rotulo_preco_sugerido;
    private javax.swing.JLabel rotulo_tabela_em_uso;
    private javax.swing.JTextField textBarCodeAdvancedSearch;
    private javax.swing.JTextField textValueAdvancedSearch;
    private javax.swing.JTextField text_class;
    public static javax.swing.JTextField text_codigo_barra;
    public static javax.swing.JTextField text_descricao_produto;
    private javax.swing.JTextField text_descricao_resumida;
    private javax.swing.JTextField text_estoque_atual;
    private javax.swing.JTextField text_estoque_minimo;
    private javax.swing.JTextField text_percentual_contribuiçao1;
    private javax.swing.JTextField text_percentual_contribuiçao13;
    private javax.swing.JTextField text_percentual_contribuiçao14;
    private javax.swing.JTextField text_percentual_contribuiçao15;
    private javax.swing.JTextField text_percentual_contribuiçao16;
    private javax.swing.JTextField text_percentual_contribuiçao2;
    private javax.swing.JTextField text_percentual_contribuiçao4;
    private javax.swing.JTextField text_percentual_contribuiçao5;
    private javax.swing.JTextField text_percentual_contribuiçao6;
    private javax.swing.JTextField text_percentual_contribuiçao7;
    private javax.swing.JTextField text_percentual_contribuiçao8;
    private javax.swing.JTextField text_percentual_lucro;
    private javax.swing.JTextField text_preco_compra;
    private javax.swing.JTextField text_preco_tabela_1;
    private javax.swing.JTextField text_preco_tabela_2;
    private javax.swing.JTextField text_preco_venda_atual;
    private javax.swing.JTextField text_preco_venda_prazo;
    private action.TypeProductionConverter typeProductionConverter1;
    private javax.swing.JLabel validationMsgLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the product
     */
    public Product getProduct() {
        return product;
    }

    /**
     * @param product the product to set
     */
    public void setProduct(Product product) {

        oldBarCode = product.getBarCodeProduct();
        Product oldProduct = this.product;
        this.product = product;
        firePropertyChange("product", oldProduct, product);

    }

    public void comboVendorProduct(List<String> list) {

        ((DefaultComboBoxModel) (combo_vendor_product.getModel()))
                .removeAllElements();

        for (String list1 : list) {
            ((DefaultComboBoxModel) (combo_vendor_product.getModel())).addElement(list1);
        }

    }

    private void fnSetProduct(Product product) {

        setProduct(product);       
        vendorName();
        comboVendorProduct(ClassProduct.vendorProduct(getProduct().getBarCodeProduct()));

        /*
        Thread thread = new Thread(new Runnable() {
            @Override
            public void run() {

                JDialogLoading jd = new JDialogLoading(null, false);
                jd.setVisible(true);

                getProduct().setMeanSaleIndicator(meanSaleIndicator(getProduct().getBarCodeProduct(), getProduct().getUnityMensurationProduct()));
              
                functionSetListMeansalelastYear(getProduct().getBarCodeProduct());
                fnDemandIndicator(getProduct().getBarCodeProduct());
                jd.dispose();

            }
        });
        thread.start();
        */

    }

    private static void clear(JPanel panel) {

        java.awt.Component[] components = panel.getComponents();

        javax.swing.JTextField jTextField = null;

        for (int i = 0; i < components.length; i++) {

            if (components[i] instanceof javax.swing.JTextField) {

                jTextField = (javax.swing.JTextField) components[i];
                jTextField.setText("");

            }

        }

    }

    //inicio dos Metodos de calculo de preco
    public static double percentagemProfit(double valor_compra, double valor_venda) {

        double percentual;
        int casasDecimais = 2;
        if (valor_compra == 0) {
            valor_compra = 1;
        }
        if (valor_venda == 0) {
            valor_venda = 1;
        }
        System.err.println("VALOR BUY>>>>>>>>>>>>" + valor_venda);
        percentual = ((valor_venda * 100) / valor_compra) - 100;

        BigDecimal bd = new BigDecimal(percentual);
        bd = bd.setScale(casasDecimais, BigDecimal.ROUND_HALF_UP);
        percentual = bd.doubleValue();
        System.err.println("RETORNO PERCENTUAL PROFITE>>>>>>>" + percentual);
        return percentual;
    }

    public double priceSale(double valor_compra, double percentual) {

        double valor_venda = 0;

        valor_venda = ((valor_compra / 100) * percentual);
        valor_venda = valor_venda + valor_compra;

        BigDecimal bd = new BigDecimal(valor_venda);
        bd = bd.setScale(3, BigDecimal.ROUND_HALF_UP);
        valor_venda = bd.doubleValue();
        System.err.println("RETORNO PRICE SALE>>>>>>>" + valor_venda);
        return valor_venda;
    }

    public double priceBuy(double value_sale, double value_profit) {

        double value;

        value = ((value_sale / 100) * value_profit);
        value = value_sale - value;

        BigDecimal bd = new BigDecimal(value);
        bd = bd.setScale(3, BigDecimal.ROUND_HALF_UP);
        value = bd.doubleValue();
        System.err.println("RETORNO PRICE BUY>>>>>>>" + value);
        return value;
    }

    public double priceBuyReverse(double value_sale, double value_profit) {

        double value;

        value = ((value_sale * 100) / (value_profit + 100));

        BigDecimal bd = new BigDecimal(value);
        bd = bd.setScale(3, BigDecimal.ROUND_HALF_UP);
        value = bd.doubleValue();
        System.err.println("RETORNO PRICE BUY>>>>>>>" + value);
        return value;
    }
    //fim dos Metodos de calculo de preco

    private void functionCancelNewProduct() {

        clear(jPanelFinancialProduct);
        clear(jPanelDetaialsProduct);

        bt_novo_product.setEnabled(true);
        jMenuItemNewProduct.setEnabled(true);

        bt_excluir_product.setEnabled(false);
        jMenuItemDeleteProduct.setEnabled(false);

        bt_cancelar_novo_product.setEnabled(false);
        jMenuItemCancelNewProduct.setEnabled(false);

        isNewProduct = false;
        jTableProducts.requestFocus(true);
        text_estoque_atual.setEnabled(false);

        java.awt.Component[] components = panelBackground.getComponents();

        javax.swing.JTextField jTextField;

        for (Component component : components) {
            if (component instanceof javax.swing.JTextField) {
                jTextField = (javax.swing.JTextField) component;
                if (jTextField.getBackground().equals(Color.YELLOW)) {
                    jTextField.setBackground(whiteColor);
                }
            }
        }

    }

    private void functionNewProduct() {

        clear(jPanelFinancialProduct);
        clear(jPanelDetaialsProduct);

        ((DefaultComboBoxModel) (combo_vendor_product.getModel()))
                .removeAllElements();
        text_preco_compra.setText("0,00");
        text_percentual_lucro.setText("40,00");
        text_preco_venda_atual.setText("0,00");
        text_preco_tabela_1.setText("0,00");
        text_preco_tabela_2.setText("0,00");
        text_estoque_atual.setText("0");
        text_estoque_minimo.setText("0");
        text_codigo_barra.requestFocus(true);
        text_estoque_atual.setEnabled(true);
        jCheckBoxIsActive.setSelected(true);

        bt_novo_product.setEnabled(false);
        jMenuItemNewProduct.setEnabled(false);

        bt_excluir_product.setEnabled(false);
        jMenuItemDeleteProduct.setEnabled(false);

        bt_cancelar_novo_product.setEnabled(true);
        jMenuItemCancelNewProduct.setEnabled(true);

        isNewProduct = true;

    }

    private void functionSaveProduct() {

        JTextFieldTools.invalidCaracter(text_descricao_produto);
        JTextFieldTools.invalidCaracter(text_descricao_resumida);

        if (!text_codigo_barra.getText().isEmpty() && !text_descricao_produto.getText().isEmpty() && !text_descricao_resumida.getText().isEmpty()) {
            //se true grava novo produto
            if (isNewProduct) {
                
                codBar = product.getBarCodeProduct();

                if (newProduct(product)) {

                    if (!isExistInactiveProduct()) {
                        argFilterProdActi = 1;
                    }
                    
                    if (jCheckBoxMenuItemPrintLabelGondola.isSelected() && isPrintService) {
                        functionPrintLabelGondola();
                    }

                    validationMsgLabel.setText("Produto cadastrado com sucesso.");
                    text_codigo_barra.requestFocus(true);
                    isNewProduct = false;
                    bt_novo_product.setEnabled(true);
                    text_estoque_atual.setEnabled(false);
                    jMenuItemNewProduct.setEnabled(true);
                    JOptionPane.showMessageDialog(this, "Produto cadastrado com sucesso.", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
                    myModelJtableProducts = new MyModelJtableProducts(null, argFilterProdActi);
                    jTableProducts.setModel(myModelJtableProducts);
                    fnSetProduct(consultProduct(text_codigo_barra.getText()));//carrega no bean produto atual                 
                    //seta posiçaõ da tabela do produtos atualizado

                } else {

                    validationMsgLabel.setText("Produto já cadastrado.");
                    JOptionPane.showMessageDialog(this, "Produto já cadastrado.", "Mensagem", JOptionPane.INFORMATION_MESSAGE);

                }

                //senao atualiza produto     
            } else {

                if (JOptionPane.showConfirmDialog(this, "Tem certeza que deseja alterar o cadastro?", "Alteração de cadastro", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

                    if (refreshProduct(product)) {

                        validationMsgLabel.setText("Produto atualizado com sucesso.");
                        JOptionPane.showMessageDialog(this, "Produto atualizado com sucesso.", "Mensagem", JOptionPane.INFORMATION_MESSAGE);

                        if (jCheckBoxMenuItemPrintLabelGondola.isSelected() && isPrintService) {
                            //functionPrintLabelGondola();
                        }
                        text_estoque_atual.setEnabled(false);

                        if (!isExistInactiveProduct()) {
                            argFilterProdActi = 1;
                        }
                        myModelJtableProducts = new MyModelJtableProducts(null, argFilterProdActi);
                        jTableProducts.setModel(myModelJtableProducts);

                        fnSetProduct(consultProduct(text_codigo_barra.getText()));//carrega no bean produto atual
                        //seta posiçaõ da tabela do produtos atualizado

                    }

                    text_codigo_barra.requestFocus(true);

                }

            }

        } else {

            JTextField[] jTextField = {text_codigo_barra, text_descricao_produto, text_descricao_resumida};
            setColorWarning(jTextField);
            //validationMsgLabel.setText("Os campos em amarelo não podem ficar vazios.");
            JOptionPane.showMessageDialog(this, "Os campos em amarelo não podem ficar vazios.", "Alerta", JOptionPane.INFORMATION_MESSAGE);

        }
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "N° de Produtos: " + jTableProducts.getModel().getRowCount() + "  Categoria Visualizada:" + categoryNames, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 12), new java.awt.Color(51, 51, 51)));//seta nome das categorias visiveis

        boolean argViewInactiveProd = isExistInactiveProduct();
        if (argViewInactiveProd) {

            jCheckBoxMenuItemViewInactivedProducts.setEnabled(argViewInactiveProd);
            argFilterProdActi = -1;
            myModelJtableProducts = new MyModelJtableProducts(null, argFilterProdActi);
            jTableProducts.setModel(myModelJtableProducts);
            jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "N° de Produtos: " + jTableProducts.getModel().getRowCount() + "  Categoria Visualizada:" + categoryNames, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 12), new java.awt.Color(51, 51, 51)));

        } else {

            jCheckBoxMenuItemViewInactivedProducts.setEnabled(false);
            myModelJtableProducts = new MyModelJtableProducts(null, argFilterProdActi);
            jTableProducts.setModel(myModelJtableProducts);
            jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "N° de Produtos: " + jTableProducts.getModel().getRowCount() + "  Categoria Visualizada:" + categoryNames, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 3, 12), new java.awt.Color(51, 51, 51)));

        }

    }

    private void functionDelete() {

        if (!text_codigo_barra.getText().isEmpty()) {

            String str = text_codigo_barra.getText();

            if (JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir o cadastro?", "Exclusão de cadastro", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

                if (deleleteProduct(text_codigo_barra.getText())) {

                    clear(jPanelTributeProduct);
                    clear(jPanelFinancialProduct);
                    clear(jPanelDetaialsProduct);

                    jTableProducts.requestFocus(true);

                    validationMsgLabel.setText("O Produto Excluido Foi Com Sucesso. [" + str + "]");
                    JOptionPane.showMessageDialog(this, "Produto código: [" + str + "] excluído com sucesso.", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
                    myModelJtableProducts = new MyModelJtableProducts(null, 1);
                    jTableProducts.setModel(myModelJtableProducts);

                } else {
                    validationMsgLabel.setText("O Produto código: [" + str + "] não pode ser excluído.\n Contate o administrador do sistema.");
                    JOptionPane.showMessageDialog(this, "O Produto código: [" + str + "] não pode ser excluído.\n Contate o administrador do sistema.", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }

    }

    private void functionPrintLabelGondola() {

        if (!text_codigo_barra.getText().isEmpty()) {

            final Thread t1 = new Thread(new Runnable() {//cria uma thread pra gravar o seu arquivo

                @Override
                public void run() {

                    try {
                        Object[] valPar = {product.getBarCodeProduct()};
                        Object[] par = {"PAR_BAR_COD"};
                        ImprimirRelatorio_cupom ip = new ImprimirRelatorio_cupom();
                        ip.visualizarRelatorio(valPar, par, "reportLabelGondola.jasper", false);
                        //functionConsultProduct();

                    } catch (Exception ex) {
                        ////newXML.generateLog(ex.toString());
                        System.err.println("ERROR::" + ex);

                        System.err.println("Erro Print Report Label Gondola::" + ex);
                    }
                }

            });
            t1.start();
            new Thread(new Runnable() {//cria outra thread pra sua tela de espera

                @Override
                public void run() {
                    //cria a tela de espera e mostra ela

                    JDialogLoading jd = new JDialogLoading(null, false);
                    jd.setVisible(true);

                    try {
                        t1.join();//fica esperando a primeira thread acabar
                    } catch (InterruptedException ex) {
                        ////newXML.generateLog(ex.toString());
                        System.err.println("ERROR::" + ex);

                        Logger.getLogger(JDialogProduct_2_0.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    // quando acabar fecha a janela de espera, podes fazer outras coisas aqui
                    jd.dispose();

                }
            }).start();
        }
    }

    private void functionConsultProduct() {

        if (isNewProduct) {
            
            if (!text_codigo_barra.getText().isEmpty()) {

                if (!isExistProduct(text_codigo_barra.getText())) {
                    
                    text_descricao_produto.requestFocus(true);
                
                } else {

                    validationMsgLabel.setText("Este código [" + text_codigo_barra.getText() + "] já esta cadastrado com outro produto, verifique.");
                    JOptionPane.showMessageDialog(this, "Este código [" + text_codigo_barra.getText() + "] já esta cadastrado com outro produto, verifique.", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
                    text_codigo_barra.setText("");
                    text_codigo_barra.requestFocus(true);
                }
            }

        } else {

            //fnSetProduct(consultProduct(text_codigo_barra.getText()));             
            //int consultProd = ClassSale.searchProduct(text_codigo_barra.getText(), false, 0, false, false);
            Product p = consultProduct(text_codigo_barra.getText());

            if (p != null) {

                fnSetProduct(p);
                bt_novo_product.setEnabled(true);
                jMenuItemNewProduct.setEnabled(true);

                bt_excluir_product.setEnabled(true);
                jMenuItemDeleteProduct.setEnabled(true);

                bt_cancelar_novo_product.setEnabled(false);
                jMenuItemCancelNewProduct.setEnabled(false);

                if (mode_refresh_budget) {

                    jCheckBoxIsActive.setSelected(true);
                    text_estoque_atual.requestFocus(true);

                }

                if (mode_refresh_price) {

                    jCheckBoxIsActive.setSelected(true);
                    text_preco_venda_atual.requestFocus(true);

                }
                if (mode_normal) {

                    text_descricao_produto.requestFocus(true);

                }
            } else {
                String str = text_codigo_barra.getText();
                text_codigo_barra.setText("");
                validationMsgLabel.setText("Produto não cadastrado[" + str + "]");
                JOptionPane.showMessageDialog(this, "Produto com o código [" + text_codigo_barra.getText() + "] não cadastrado, verifique.", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
            }

        }
    }

    private void functionSetPercProfit() {

        Object str;
        Object[][] percProfCat = allPerceProfitCategory();
        int sz = percProfCat.length;

        for (int i = 0; i < sz; i++) {
            str = percProfCat[i][0];

            System.err.println("STR>>><><><><><><::" + str);
            System.err.println("Value DB::" + percProfCat[i][1]);
            System.err.println("Value combo:::::::" + combo_categorias.getSelectedItem().toString().substring(0, 3));
            if (str.equals(combo_categorias.getSelectedItem().toString().substring(0, 3))) {

                text_percentual_lucro.setText(percProfCat[i][1].toString());
                System.err.println("PROFIT VALUE::" + percProfCat[i][1]);

            }

        }
    }

    private void fnOpenDialogSearchProduct() {
        Dimension tamanhoDialogMain = getSize();
        Dimension tamanhoDialog1 = jDialogSearchAdvanced.getPreferredSize();
        Point loc = getLocation();
        jDialogSearchAdvanced.setLocation(
                (tamanhoDialogMain.width - tamanhoDialog1.width) / 2 + loc.x,
                (tamanhoDialogMain.height - tamanhoDialog1.height) / 2 + loc.y);
        jDialogSearchAdvanced.setModal(true);
        jDialogSearchAdvanced.pack();
        jDialogSearchAdvanced.setVisible(true);
    }

    private static void setColorWarning(JTextField[] jTextField) {

        for (JTextField jTextField1 : jTextField) {
            if (jTextField1.getBackground().equals(Color.YELLOW)) {
                jTextField1.requestFocus(true);
            }
        }
        for (JTextField jTextField1 : jTextField) {
            if (jTextField1.getText().isEmpty()) {
                jTextField1.setBackground(Color.YELLOW);
            }
        }
    }

    public void fnPrintCardProduct() {

        Object[] arg1 = {text_codigo_barra.getText()};
        Object[] arg2 = {"PAR_COD"};
        new ImprimirRelatorio_2().visualizarRelatorio(arg1, arg2, "reportCardProduct.jasper", true);

    }

    public void functionPrintReportDemandProduct() {

        String str = text_codigo_barra.getText();
        Object[] arg1 = {text_codigo_barra.getText(), DateActual.setDate(new Date(), "YYYY")};
        Object[] arg2 = {"PAR_BAR", "PAR_YEAR"};
        new ImprimirRelatorio_2().visualizarRelatorio(arg1, arg2, "reportDemandProducts.jasper", true);
        fnSetProduct(consultProduct(str));

    }

    private void fnSetProfitMeanCategory() {

        if (!jTextFieldValueLucroVaredura.getText().isEmpty()) {
            String arg = "";
            for (int i = 0; i < jTableProfitMean.getRowCount(); i++) {

                if (jTableProfitMean.getValueAt(i, 0).equals(true)) {

                    if (arg.equals("")) {
                        arg += jTableProfitMean.getValueAt(i, 1);
                    } else {
                        arg += "," + jTableProfitMean.getValueAt(i, 1);
                    }
                }
            }
            System.err.println("ARGVARED::" + arg);
            if (!arg.equals("")) {

                if (JOptionPane.showConfirmDialog(jDialogProfitMeanCategory, "Deseja realmente setar o percentual de lucro de todos produtos da categoria selecionada?\n Esta ação afetara o preço de venda atual dos produtos da categoria.", "ALerta!", JOptionPane.YES_NO_OPTION) == 0) {

                    if (setPercentageProfit(jTextFieldValueLucroVaredura.getText().replace(",", "."), arg)) {
                        JOptionPane.showMessageDialog(jDialogProfitMeanCategory, "Erro ao atualizar percentual de lucro.\nTente novamente.");
                    } else {

                        try {
                            myModelJTableCheked = new MyModelJTableCheked(false);
                            jTableProfitMean.setModel(myModelJTableCheked);
                        } catch (Exception ex) {
                            //////newXML.generateLog(ex.toString());
                            System.err.println("ERROR::" + ex);

                        }
                        JOptionPane.showMessageDialog(this, "Precentual de lucro atualizado com sucesso.");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Selecione pelo menos uma categoria.");
            }

        } else {

            JOptionPane.showMessageDialog(this, "Insira um valor para calcular o lucro.");
        }
    }

    private void functionSetListMeansalelastYear(String arg) {

        List<String> listMeanSale = ClassProduct.meanSaleLastYear(arg);

        ((DefaultListModel) (jListMeanSaleLastYear.getModel()))
                .removeAllElements();

        for (String listMeanSale1 : listMeanSale) {
            ((DefaultListModel) (jListMeanSaleLastYear.getModel())).addElement(listMeanSale1);
        }
    }

    public static void fnDemandIndicator(String barCod) {

        int arg = ClassProduct.demandIndicator(barCod);
        System.err.println(">>>>>>>>*****DEMAND::::" + arg);
        if (arg > 0) {

            jLabelDemandUniform.setEnabled(false);
            jLabelDemandUp.setEnabled(true);
            jLabelDemandDown.setEnabled(false);

            jLabelDemandUniformNumber.setEnabled(false);
            jLabelDemandUpNumber.setEnabled(true);
            jLabelDemandDownNumber.setEnabled(false);

            jLabelDemandUpNumber.setText(String.valueOf(arg));
            jLabelDemandUniformNumber.setText("0");
            jLabelDemandDownNumber.setText("0");

        }

        if (arg == 0) {

            jLabelDemandUniform.setEnabled(true);
            jLabelDemandUp.setEnabled(false);
            jLabelDemandDown.setEnabled(false);

            jLabelDemandUniformNumber.setEnabled(true);
            jLabelDemandUpNumber.setEnabled(false);
            jLabelDemandDownNumber.setEnabled(false);

            jLabelDemandUpNumber.setText("0");
            jLabelDemandUniformNumber.setText("0");
            jLabelDemandDownNumber.setText("0");
        }
        if (arg < 0) {

            jLabelDemandUniform.setEnabled(false);
            jLabelDemandUp.setEnabled(false);
            jLabelDemandDown.setEnabled(true);

            jLabelDemandUniformNumber.setEnabled(false);
            jLabelDemandUpNumber.setEnabled(false);
            jLabelDemandDownNumber.setEnabled(true);

            jLabelDemandUpNumber.setText("0");
            jLabelDemandUniformNumber.setText("0");
            jLabelDemandDownNumber.setText(String.valueOf(arg));

        }

    }

    private int fnPositionTable(JTable jTable, int direction) {

        List<Integer> position = new ArrayList<>();
        int rowCount = jTable.getModel().getRowCount();
        position.add((position_table == 0) ? 0 : position_table - 1);
        position.add(position_table);
        position.add((position_table == (rowCount - 1)) ? 0 : position_table + 1);

        switch (direction) {

            case -1:
                return position.get(0);
            case 0:
                return position.get(1);
            case 1:
                return position.get(2);

            default:
                return -1;

        }

    }

    class MyCellRenderer extends DefaultTableCellRenderer {

        public MyCellRenderer() {

        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean selected, boolean focused,
                int row, int column) {
            super.getTableCellRendererComponent(table, value, selected, focused, row, column);

            Color bg;

            if (!selected) {
                bg = ((row % 2 == 0)
                        ? alternateColor
                        : whiteColor);
            } else {
                bg = selectedColor;
            }

            if (jTableProfitMean.getRowCount() > 0) {

                jTableProfitMean.getColumnModel().getColumn(0).setPreferredWidth(8);
                jTableProfitMean.getColumnModel().getColumn(1).setPreferredWidth(130);
                jTableProfitMean.getColumnModel().getColumn(2).setPreferredWidth(194);
                jTableProfitMean.getColumnModel().getColumn(3).setPreferredWidth(200);

            }

            if (jTableCategoryThisProduct.getRowCount() > 0) {

                jTableCategoryThisProduct.getColumnModel().getColumn(0).setPreferredWidth(10);
                jTableCategoryThisProduct.getColumnModel().getColumn(1).setPreferredWidth(120);
                jTableCategoryThisProduct.getColumnModel().getColumn(2).setPreferredWidth(307);
                jTableCategoryThisProduct.getColumnModel().getColumn(3).setPreferredWidth(140);// define a largura da coluna

            }

            if (jTableMeanSale.getRowCount() > 0) {

                jTableMeanSale.getColumnModel().getColumn(0).setPreferredWidth(120);
                jTableMeanSale.getColumnModel().getColumn(1).setPreferredWidth(120);// define a largura da coluna

            }
            if (jTableProducts.getRowCount() > 0) {

                jTableProducts.getColumnModel().getColumn(0).setPreferredWidth(70);
                jTableProducts.getColumnModel().getColumn(1).setPreferredWidth(200);// define a largura da coluna

            }

            //jTableItens.setShowHorizontalLines(false);
            //jTableItens.setShowVerticalLines(false);
            setBackground(bg);
            setForeground(selected
                    ? Color.black
                    : new java.awt.Color(102, 102, 102));
            setHorizontalAlignment(SwingConstants.CENTER);

            /*
             *  if (value instanceof ImageIcon) {
             * setIcon((ImageIcon) value);
             * setText("");
             * } else
             * setIcon(null);
             */
            return this;
        }
    }

}
